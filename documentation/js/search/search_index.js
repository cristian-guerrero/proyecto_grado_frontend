var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.493,1,1.137]],["body/components/AppComponent.html",[0,0.662,1,1.684,2,1.481,3,0.188,4,0.188,5,1.056,6,1.056,7,1.056,8,1.056,9,0.171,10,2.497,11,1.056,12,2.661,13,2.661,14,1.804,15,1.554,16,5.065,17,1.554,18,4.269,19,0.241,20,0.975,21,5.065,22,5.065,23,3.55,24,5.065,25,0.887,26,5.586,27,4.269,28,5.586,29,0.632,30,2.231,31,3.497,32,4.952,33,2.672,34,3.915,35,3.026,36,0.768,37,4.269,38,1.173,39,0.018,40,1.004,41,0.692,42,1.07,43,2.901,44,1.004,45,1.458,46,4.269,47,5.953,48,2.901,49,5.542,50,2.901,51,1.104,52,2.901,53,1.6,54,1.07,55,3.355,56,2.123,57,2.901,58,4.269,59,2.901,60,0.499,61,0.447,62,4.269,63,4.269,64,4.269,65,4.269,66,1.006,67,2.231,68,1.874,69,2.033,70,0.188,71,0.063,72,0.797,73,2.14,74,2.901,75,2.901,76,2.497,77,2.007,78,4.809,79,5.586,80,4.36,81,2.901,82,5.586,83,2.901,84,4.269,85,2.901,86,4.269,87,2.252,88,2.033,89,1.554,90,4.269,91,2.901,92,2.901,93,2.901,94,2.901,95,1.629,96,2.901,97,2.901,98,0.835,99,1.554,100,1.481,101,1.056,102,2.033,103,1.056,104,1.056,105,0.835,106,1.056,107,0.875,108,1.104,109,1.056,110,0.875,111,1.056,112,0.875,113,1.056,114,1.056,115,0.875,116,1.006,117,1.056,118,0.835,119,1.056,120,0.835,121,1.056,122,0.835,123,1.056,124,0.835,125,1.563,126,1.056,127,0.835,128,1.554,129,0.875,130,1.554,131,0.835,132,1.006,133,0.875,134,1.287,135,0.835,136,1.006,137,1.056,138,1.056,139,0.007,140,0.01,141,0.007]],["title/modules/AppModule.html",[142,1.773,143,2.643]],["body/modules/AppModule.html",[1,2.183,3,0.219,4,0.219,9,0.2,39,0.018,60,0.664,61,0.521,67,3.666,68,2.184,70,0.219,71,0.073,98,0.973,108,1.307,112,1.978,118,1.888,120,1.888,124,1.888,127,1.888,129,2.075,131,1.888,133,2.075,134,1.808,135,1.888,139,0.008,140,0.011,141,0.008,142,1.589,143,5.403,144,1.589,145,1.899,146,3.567,147,3.567,148,2.515,149,2.03,150,2.91,151,2.91,152,2.91,153,2.91,154,4.238,155,4.085,156,3.08,157,2.184,158,2.184,159,3.38,160,4.103,161,3.08,162,4.766,163,3.08,164,3.38,165,3.38,166,3.38,167,4.766,168,3.38,169,3.38,170,2.91,171,2.91,172,2.369,173,2.91,174,5.161,175,3.08,176,3.08,177,4.753,178,2.863,179,3.666,180,3.08,181,2.369,182,2.91,183,2.91,184,2.369,185,3.38,186,3.38,187,2.6,188,3.38,189,4.766,190,3.38,191,3.38]],["title/interfaces/AppOptions.html",[192,1.309,193,2.643]],["body/interfaces/AppOptions.html",[3,0.264,4,0.264,9,0.24,14,1.718,19,0.337,20,1.236,23,4.541,31,3.414,35,1.911,39,0.018,41,0.629,51,1.471,54,1.524,56,3.355,60,0.603,61,0.627,66,1.411,70,0.351,71,0.088,72,1.118,73,2.569,89,1.969,95,2.283,139,0.009,140,0.013,141,0.009,192,1.411,193,3.791,194,2.283,195,3.127,196,5.578,197,1.631,198,4.26,199,3.791,200,2.067,201,1.48,202,1.79,203,3.127,204,3.038,205,1.911,206,1.911,207,3.5,208,3.5,209,3.5,210,3.5,211,1.345,212,3.5,213,1.633,214,3.5,215,3.5,216,3.5,217,3.791,218,3.5,219,4.656,220,4.656,221,3.5,222,1.596,223,3.5,224,4.656,225,3.5,226,2.849,227,3.5,228,2.442,229,3.127,230,2.442,231,3.5,232,5.233,233,4.984,234,5.233,235,3.5,236,3.5]],["title/classes/AppPage.html",[71,0.081,237,2.901]],["body/classes/AppPage.html",[3,0.345,4,0.345,9,0.314,14,2.25,19,0.442,25,1.334,36,0.746,39,0.018,44,1.272,60,0.476,68,3.441,70,0.345,71,0.115,100,1.848,139,0.012,140,0.015,141,0.012,222,1.685,237,4.938,238,2.371,239,4.584,240,7.154,241,7.154,242,5.325,243,5.325,244,5.325,245,5.325,246,4.938,247,5.325,248,4.584,249,5.325]],["title/modules/AppRoutingModule.html",[142,1.773,154,2.437]],["body/modules/AppRoutingModule.html",[0,0.873,3,0.232,4,0.232,9,0.211,32,4.964,39,0.018,41,0.796,54,0.896,60,0.653,61,0.551,66,1.24,70,0.232,71,0.077,89,1.301,95,3.625,108,1.639,118,1.427,120,1.427,124,1.427,125,1.613,127,1.427,131,1.427,132,1.72,134,1.852,135,1.427,136,2.132,139,0.008,140,0.011,141,0.008,144,1.68,149,2.147,154,3.203,161,2.31,163,3.203,170,3.078,171,3.078,172,2.505,173,3.078,174,4.898,175,2.31,176,3.203,177,4.898,180,3.203,181,2.505,182,3.078,183,3.078,184,2.505,250,3.575,251,3.575,252,3.987,253,3.813,254,3.474,255,3.575,256,6.144,257,3.474,258,3.575,259,3.474,260,3.575,261,3.474,262,3.575,263,6.846,264,3.97,265,4.898,266,3.69,267,3.813,268,3.575,269,3.575,270,3.078,271,3.575,272,3.575,273,3.575,274,4.956,275,3.575]],["title/components/AppToolbarComponent.html",[0,0.493,105,1.086]],["body/components/AppToolbarComponent.html",[0,0.736,1,1.056,2,1.695,3,0.227,4,0.227,5,1.275,6,1.275,7,1.275,8,1.275,9,0.207,11,1.275,12,2.731,13,2.731,15,1.778,17,1.778,19,0.291,25,1.016,29,0.763,32,4.927,35,2.862,36,0.708,38,0.963,39,0.018,40,1.011,41,0.407,42,0.878,44,0.968,45,1.406,53,1.106,54,0.878,60,0.436,61,0.54,69,2.454,70,0.227,71,0.076,72,0.963,98,1.008,99,1.778,100,1.695,101,1.275,102,2.216,103,1.275,104,1.275,105,1.753,106,1.275,107,1.056,108,1.226,109,1.275,110,1.056,111,1.275,112,1.056,113,1.275,114,1.275,115,1.056,116,1.215,117,1.275,118,1.008,119,1.275,120,1.008,121,1.275,122,1.008,123,1.275,124,1.008,125,1.681,126,1.275,127,1.008,128,1.778,129,1.056,130,1.778,131,1.008,132,1.952,133,1.056,134,1.473,135,1.008,136,1.215,137,1.275,138,1.275,139,0.008,140,0.011,141,0.008,267,3.758,276,5.513,277,3.014,278,1.543,279,2.15,280,4.885,281,5.627,282,4.885,283,6.089,284,2.327,285,3.758,286,3.501,287,4.885,288,4.885,289,3.424,290,4.885,291,3.501,292,3.501,293,3.424,294,3.501,295,4.885,296,4.885,297,4.885,298,4.885,299,4.885,300,4.885,301,4.885,302,4.885,303,3.501,304,3.014,305,3.157,306,3.014]],["title/classes/Consts.html",[71,0.081,307,2.119]],["body/classes/Consts.html",[3,0.202,4,0.202,9,0.184,19,0.258,20,1.027,36,0.765,39,0.018,40,0.559,41,0.712,51,0.678,53,1.934,54,1.535,60,0.278,70,0.342,71,0.067,87,2.371,89,1.92,125,1.608,139,0.007,140,0.01,141,0.007,211,1.487,213,1.25,222,1.18,238,1.386,266,3.168,289,3.149,307,2.524,308,2.394,309,3.472,310,4.005,311,5.274,312,5.274,313,5.274,314,5.274,315,5.274,316,3.149,317,5.274,318,5.274,319,4.494,320,3.113,321,2.479,322,4.494,323,4.494,324,3.113,325,4.494,326,4.494,327,4.494,328,4.472,329,5.775,330,4.494,331,2.112,332,4.494,333,4.494,334,4.494,335,4.494,336,4.494,337,4.494,338,4.494,339,4.494,340,4.494,341,4.494,342,4.494,343,3.113,344,4.494,345,4.494,346,6.382,347,4.494,348,6.382,349,5.775,350,4.494,351,4.494,352,4.494,353,4.494,354,4.494,355,4.047,356,4.494,357,4.494,358,4.494,359,3.113,360,1.642,361,4.494,362,3.113,363,3.113,364,3.113,365,3.113,366,3.113,367,3.166,368,3.869,369,3.113,370,3.113,371,3.113,372,2.68,373,2.371,374,2.394,375,3.113,376,3.113,377,1.87,378,2.394,379,2.394,380,2.68,381,1.87,382,4.54,383,3.113,384,1.87,385,3.113,386,3.113,387,3.113,388,3.113,389,3.113,390,3.113,391,2.68,392,3.113,393,3.869,394,2.181,395,2.68,396,2.68,397,3.113,398,3.113,399,2.011,400,3.113]],["title/classes/DataClass.html",[71,0.081,401,2.643]],["body/classes/DataClass.html",[3,0.295,4,0.295,9,0.268,19,0.377,20,1.329,36,0.813,39,0.018,41,0.813,51,1.524,53,2.208,54,1.753,60,0.406,70,0.295,71,0.126,108,1.268,139,0.011,140,0.013,141,0.011,238,2.023,309,3.547,310,4.238,367,2.136,373,3.385,377,2.729,381,2.729,384,2.729,401,4.076,402,5.007,403,2.729,404,3.494,405,4.084,406,3.853,407,3.758,408,3.758,409,3.758,410,3.184,411,4.74,412,3.184,413,3.184,414,3.184,415,3.184,416,3.184]],["title/components/DataTableComponent.html",[0,0.493,107,1.137]],["body/components/DataTableComponent.html",[0,0.51,1,0.578,2,1.076,3,0.124,4,0.124,5,0.698,6,0.698,7,0.698,8,0.698,9,0.113,11,1.631,12,2.474,13,2.474,15,1.129,17,1.129,19,0.159,20,0.708,25,0.645,29,0.418,36,0.82,38,1.447,39,0.018,40,1.07,41,0.797,42,1.319,44,1.097,45,1.714,49,2.669,51,0.676,53,1.232,54,0.978,55,2.344,60,0.515,61,0.296,70,0.124,71,0.041,72,0.527,77,2.474,87,2.777,98,0.552,99,1.129,100,1.076,101,0.698,102,1.631,103,0.698,104,0.698,105,0.552,106,0.698,107,1.351,108,1.432,109,0.698,110,0.578,111,0.698,112,0.578,113,0.698,114,0.698,115,0.578,116,0.666,117,0.698,118,0.552,119,0.698,120,0.552,121,0.698,122,0.552,123,0.698,124,0.552,125,1.291,126,0.698,127,0.552,128,1.129,129,0.578,130,1.129,131,0.552,132,0.666,133,0.578,134,0.935,135,0.552,136,0.666,137,0.698,138,0.698,139,0.004,140,0.007,141,0.004,200,0.733,201,0.698,202,1.483,211,1.026,213,1.245,217,1.344,222,0.504,278,0.979,279,1.491,284,1.713,285,2.385,293,3.141,306,1.652,309,1.458,316,2.173,331,3.045,360,2.596,379,2.385,417,2.847,418,6.103,419,1.652,420,3.902,421,3.359,422,4.53,423,3.902,424,3.101,425,3.359,426,3.002,427,4.173,428,3.002,429,3.002,430,3.902,431,4.235,432,5.262,433,3.902,434,2.385,435,3.359,436,3.101,437,4.481,438,3.101,439,3.359,440,2.669,441,3.359,442,1.24,443,3.101,444,1.918,445,1.918,446,3.463,447,1.918,448,3.858,449,1.918,450,3.101,451,4.481,452,1.918,453,1.918,454,3.002,455,1.918,456,3.101,457,3.858,458,1.918,459,1.918,460,1.918,461,1.918,462,3.101,463,1.918,464,1.918,465,1.862,466,1.918,467,3.902,468,1.918,469,1.918,470,1.918,471,3.858,472,1.918,473,2.669,474,3.101,475,1.918,476,2.735,477,1.652,478,3.101,479,1.918,480,1.918,481,1.652,482,1.918,483,2.669,484,1.918,485,1.344,486,1.344,487,1.652,488,1.652,489,1.476,490,1.476,491,1.476,492,1.24,493,1.918,494,1.476,495,1.918,496,1.012,497,1.012,498,1.652,499,1.012,500,2.669,501,1.652,502,1.652,503,3.902,504,1.476,505,1.652,506,1.652,507,1.652,508,1.652,509,3.101,510,2.669,511,1.918,512,3.101,513,1.918,514,1.918,515,1.918,516,1.918,517,3.101,518,1.918,519,1.918,520,3.101,521,3.101,522,1.918,523,1.918,524,3.002,525,2.735,526,1.918,527,1.918,528,1.152,529,3.101,530,1.918,531,1.918,532,1.652,533,1.918,534,1.918,535,1.918,536,1.918,537,2.385,538,1.918,539,3.101,540,3.902,541,1.742,542,3.101,543,3.101,544,3.359,545,2.385,546,3.101,547,1.918,548,1.918,549,1.918,550,1.918,551,1.476,552,1.918,553,1.918,554,1.918,555,1.918,556,1.918]],["title/modules/DataTableModule.html",[142,1.773,557,2.266]],["body/modules/DataTableModule.html",[3,0.213,4,0.213,9,0.194,39,0.018,60,0.677,61,0.506,70,0.303,71,0.071,89,1.978,98,0.945,107,2.171,108,0.715,110,1.959,115,1.959,116,1.139,139,0.008,140,0.011,141,0.008,142,1.543,144,1.543,145,1.844,146,3.51,147,2.121,148,2.866,149,3.263,156,3.016,157,2.121,158,2.121,161,2.121,163,3.016,205,1.543,211,1.086,417,1.318,487,2.826,488,2.826,498,2.826,557,4.362,558,2.826,559,2.826,560,2.826,561,2.826,562,4.198,563,2.322,564,2.525,565,3.591,566,2.3,567,3.282,568,3.282,569,3.282,570,3.591,571,2.826,572,2.826,573,3.271,574,2.826,575,3.591,576,2.826,577,3.591,578,2.826,579,4.019,580,3.591,581,1.972,582,1.972,583,4.019,584,3.282,585,4.019,586,4.019,587,2.525,588,3.282,589,3.591,590,3.591,591,4.668,592,2.525,593,2.525,594,4.019,595,3.282,596,4.019,597,3.282,598,4.019,599,4.668,600,4.668,601,4.668,602,1.844,603,2.826,604,2.826,605,4.668,606,4.668,607,4.668,608,3.282,609,3.282,610,3.282,611,3.282,612,3.282,613,3.282,614,3.591,615,4.019,616,5.382,617,5.094,618,4.677,619,2.525,620,2.826,621,2.826,622,2.826,623,2.826,624,3.271,625,3.271,626,4.668,627,3.282,628,3.282,629,3.282]],["title/injectables/DataTableService.html",[197,1.137,562,2.437]],["body/injectables/DataTableService.html",[3,0.362,4,0.362,9,0.33,14,2.361,29,1.533,36,0.649,39,0.018,60,0.499,61,0.861,70,0.362,71,0.121,139,0.013,140,0.015,141,0.013,197,1.991,206,2.626,417,2.653,562,4.268,563,3.285,630,3.138,631,4.809,632,5.586]],["title/interfaces/DataWithCount.html",[192,1.309,633,2.643]],["body/interfaces/DataWithCount.html",[3,0.189,4,0.189,9,0.172,19,0.241,20,0.977,31,2.85,39,0.018,40,0.523,41,0.497,51,1.404,56,1.447,60,0.557,61,0.448,66,1.009,70,0.277,71,0.063,72,0.8,77,2.385,87,1.535,89,2.036,95,2.403,108,1.404,139,0.007,140,0.01,141,0.007,192,1.009,194,1.634,197,1.29,199,2.039,200,2.658,201,1.059,202,0.963,211,1.416,213,1.718,222,1.955,226,2.039,228,1.747,246,2.238,305,1.88,307,1.634,331,2.629,360,3.145,373,1.535,374,2.238,378,2.238,394,2.039,406,3.047,434,2.238,446,3.744,454,3.291,465,3.744,496,1.535,497,1.535,504,2.238,524,3.291,525,2.998,528,1.747,633,2.998,634,2.039,635,5.131,636,2.504,637,2.504,638,2.504,639,2.504,640,2.504,641,2.039,642,2.504,643,1.747,644,2.039,645,2.039,646,2.238,647,2.504,648,2.504,649,2.504,650,2.504,651,2.998,652,2.504,653,2.504,654,3.682,655,2.504,656,2.504,657,2.504,658,2.504,659,5.691,660,5.691,661,3.682,662,2.504,663,2.504,664,2.504,665,3.682,666,3.682,667,3.682,668,2.504,669,3.682,670,2.504,671,2.504,672,2.504,673,2.504,674,2.504,675,1.367,676,2.504,677,2.504,678,2.504,679,2.504,680,2.504,681,2.504,682,2.504,683,2.504,684,2.504,685,2.504,686,2.504,687,2.504,688,2.504,689,2.504,690,3.682,691,2.504,692,2.504,693,2.504,694,2.504,695,2.504,696,2.238,697,2.504,698,2.238,699,3.291,700,2.504,701,2.504,702,2.504,703,2.504,704,2.504,705,2.504,706,2.504]],["title/components/DetailsComponent.html",[0,0.493,110,1.137]],["body/components/DetailsComponent.html",[0,0.796,1,1.228,2,1.879,3,0.264,4,0.264,5,1.483,6,1.483,7,1.483,8,1.483,9,0.24,11,1.483,12,2.78,13,2.78,15,1.971,17,1.971,19,0.338,25,1.126,29,1.326,36,0.63,39,0.018,40,0.973,44,0.807,45,1.173,60,0.364,61,0.628,70,0.264,71,0.088,98,1.173,99,1.971,100,1.879,101,1.483,102,2.36,103,1.483,104,1.483,105,1.173,106,1.483,107,1.228,108,1.326,109,1.483,110,1.955,111,1.483,112,1.228,113,1.483,114,1.483,115,1.228,116,1.413,117,1.483,118,1.173,119,1.483,120,1.173,121,1.483,122,1.173,123,1.483,124,1.173,125,1.772,126,1.483,127,1.173,128,1.971,129,1.228,130,1.971,131,1.173,132,1.413,133,1.228,134,1.633,135,1.173,136,1.413,137,1.483,138,1.483,139,0.009,140,0.013,141,0.009,278,1.711,279,2.325,284,2.478,417,2.444,541,3.042,707,3.507,708,6.484,709,6.084,710,5.416,711,4.073,712,4.073]],["title/interfaces/DialogDataInterface.html",[192,1.309,713,2.643]],["body/interfaces/DialogDataInterface.html",[3,0.363,4,0.363,9,0.331,19,0.465,20,1.511,39,0.017,41,0.651,42,1.658,60,0.5,70,0.363,139,0.013,140,0.015,141,0.013,192,1.944,194,3.146,211,2.19,321,3.42,465,4.229,713,4.637,714,4.822,715,4.822]],["title/components/FabButtonComponent.html",[0,0.493,112,1.137]],["body/components/FabButtonComponent.html",[0,0.78,1,1.181,2,1.831,3,0.254,4,0.254,5,1.426,6,1.426,7,1.426,8,1.426,9,0.231,11,1.426,12,2.768,13,2.768,15,1.921,17,1.921,19,0.325,25,1.097,29,1.3,36,0.613,39,0.018,40,0.948,44,0.776,45,1.128,60,0.35,61,0.604,70,0.254,71,0.085,98,1.128,99,1.921,100,1.831,101,1.426,102,2.324,103,1.426,104,1.426,105,1.128,106,1.426,107,1.181,108,1.3,109,1.426,110,1.181,111,1.426,112,1.925,113,2.63,114,1.426,115,1.181,116,1.359,117,1.426,118,1.128,119,1.426,120,1.128,121,1.426,122,1.128,123,1.426,124,1.128,125,1.749,126,1.426,127,1.128,128,1.921,129,1.181,130,1.921,131,1.128,132,1.359,133,1.181,134,1.591,135,1.128,136,1.359,137,1.426,138,1.426,139,0.009,140,0.012,141,0.009,187,4.589,278,1.666,279,2.28,284,2.44,716,5.136,717,3.372,718,5.136,719,5.966,720,5.276,721,3.917,722,3.917,723,5.276,724,3.917,725,3.917,726,2.745,727,5.276,728,3.013]],["title/components/FilterByColumComponent.html",[0,0.493,115,1.137]],["body/components/FilterByColumComponent.html",[0,0.518,1,0.591,2,1.095,3,0.127,4,0.127,5,0.714,6,0.714,7,0.714,8,0.714,9,0.116,11,0.714,12,2.485,13,2.485,15,1.149,17,1.149,19,0.163,20,0.721,25,0.656,29,0.427,36,0.786,38,1.248,39,0.018,40,1.004,41,0.716,42,1.138,44,1.152,45,1.53,53,0.619,54,1.332,55,1.178,60,0.499,61,0.302,70,0.127,71,0.068,72,0.539,73,0.829,76,1.688,77,0.922,78,3.907,89,2.116,98,0.564,99,1.149,100,1.095,101,0.714,102,1.652,103,0.714,104,0.714,105,0.564,106,0.714,107,0.591,108,0.863,109,0.714,110,0.591,111,0.714,112,0.591,113,0.714,114,0.714,115,1.368,116,2.017,117,0.714,118,0.564,119,0.714,120,0.564,121,0.714,122,0.564,123,0.714,124,0.564,125,1.306,126,0.714,127,0.564,128,1.149,129,0.591,130,1.149,131,0.564,132,0.68,133,0.591,134,0.951,135,0.564,136,0.68,137,0.714,138,0.714,139,0.005,140,0.007,141,0.005,202,1.502,204,2.794,205,0.922,211,1.646,213,1.59,217,1.374,222,1.467,230,2.379,266,3.78,278,0.997,279,1.513,284,1.734,285,2.427,293,2.212,307,1.101,316,2.212,331,2.82,382,2.717,406,1.178,417,2.741,425,3.409,440,2.717,441,3.409,446,2.988,448,3.907,481,1.688,483,2.717,499,1.035,500,3.409,501,1.688,502,1.688,505,1.688,506,2.717,507,2.717,508,1.688,525,2.212,528,1.178,551,3.491,587,5.251,644,1.374,675,2.133,699,1.508,729,4.784,730,1.688,731,3.156,732,3.96,733,3.156,734,3.96,735,3.96,736,4.974,737,2.427,738,4.538,739,4.538,740,4.538,741,4.538,742,3.156,743,1.688,744,3.611,745,3.156,746,2.559,747,1.961,748,1.961,749,2.717,750,1.961,751,1.961,752,1.961,753,4.088,754,1.961,755,1.961,756,1.961,757,3.156,758,1.961,759,1.961,760,3.181,761,1.961,762,1.961,763,1.961,764,1.961,765,1.267,766,1.101,767,1.374,768,1.961,769,1.961,770,1.374,771,1.508,772,1.688,773,2.212,774,5.812,775,1.374,776,2.717,777,1.961,778,1.961,779,1.688,780,2.039,781,1.961,782,1.961,783,1.961,784,1.961,785,1.961,786,1.961,787,1.961,788,1.961,789,1.961,790,1.961,791,1.961,792,1.961,793,4.538,794,1.961,795,3.156,796,3.156,797,3.156,798,1.961,799,1.961,800,1.374,801,1.374,802,1.961,803,1.961,804,1.267,805,1.961,806,1.961,807,1.508,808,1.961,809,1.374,810,1.961,811,1.961,812,3.96,813,3.156,814,1.961,815,1.961,816,3.156,817,3.156,818,4.538,819,3.156,820,3.192,821,5.812,822,6.157,823,3.725,824,3.725,825,3.156,826,3.156,827,3.156,828,3.156]],["title/classes/GenericClass.html",[71,0.081,405,2.119]],["body/classes/GenericClass.html",[3,0.289,4,0.289,9,0.263,19,0.37,20,1.312,36,0.78,39,0.018,41,0.78,51,1.463,53,2.12,54,1.683,70,0.289,71,0.096,139,0.01,140,0.013,141,0.01,238,1.984,309,3.602,310,4.304,367,3.402,373,3.666,377,3.45,381,3.45,384,3.45,399,3.711,403,2.676,405,3.226,407,4.107,408,4.107,409,4.107,410,3.122,829,5.982,830,3.835,831,4.455,832,4.455,833,3.835,834,4.455,835,4.455,836,4.455]],["title/components/LoginComponent.html",[0,0.493,118,1.086]],["body/components/LoginComponent.html",[0,0.621,1,0.784,2,1.366,3,0.169,4,0.169,5,0.947,6,0.947,7,0.947,8,0.947,9,0.154,11,0.947,12,2.617,13,2.617,15,1.433,17,1.433,19,0.216,20,0.899,23,3.327,25,0.818,29,0.567,31,3.489,36,0.776,38,1.082,39,0.018,40,0.951,41,0.695,42,0.987,44,1.049,45,1.367,51,0.858,53,1.499,54,1.19,55,2.364,56,1.957,60,0.555,61,0.401,66,0.903,70,0.169,71,0.085,72,0.715,73,2.006,77,1.223,80,4.087,95,2.211,98,0.749,99,1.433,100,1.366,101,0.947,102,1.927,103,0.947,104,0.947,105,0.749,106,0.947,107,0.784,108,1.239,109,0.947,110,0.784,111,0.947,112,0.784,113,0.947,114,0.947,115,0.784,116,0.903,117,0.947,118,1.524,119,0.947,120,0.749,121,0.947,122,0.749,123,0.947,124,0.749,125,1.631,126,0.947,127,0.749,128,1.433,129,0.784,130,1.433,131,0.749,132,0.903,133,0.784,134,1.187,135,0.749,136,0.903,137,0.947,138,0.947,139,0.006,140,0.009,141,0.006,198,4.353,202,1.752,204,2.667,205,1.223,211,1.571,222,1.033,228,2.364,230,2.852,266,2.852,278,1.243,279,1.814,284,2.023,289,2.758,395,4.894,499,1.373,651,3.709,675,1.85,737,3.028,743,2.24,744,4.013,746,2.543,765,1.681,770,1.823,771,2.001,773,2.758,775,1.823,804,2.543,807,3.028,820,2.364,823,3.709,824,2.758,837,2.24,838,4.747,839,3.936,840,3.652,841,4.747,842,4.747,843,5.293,844,5.293,845,3.936,846,3.936,847,2.602,848,2.602,849,2.602,850,2.602,851,2.602,852,2.602,853,3.327,854,2.602,855,2.602,856,2.602,857,4.087,858,6.547,859,1.461,860,2.602,861,2.24,862,2.001,863,2.001,864,2.602,865,2.602,866,2.602,867,2.602,868,2.24,869,2.602,870,2.602,871,2.602,872,2.602,873,2.001,874,2.24,875,2.602,876,2.602,877,2.602,878,4.747,879,1.563,880,3.936,881,2.602,882,3.936,883,3.936,884,3.936]],["title/guards/LoginResolverService.html",[257,2.643,885,2.437]],["body/guards/LoginResolverService.html",[3,0.301,4,0.301,9,0.274,14,1.959,19,0.385,25,1.225,29,1.011,31,4.103,33,2.446,36,0.685,38,1.62,39,0.018,40,1.059,41,0.685,42,1.477,44,0.919,60,0.609,61,0.715,66,1.609,70,0.301,71,0.1,72,1.275,73,1.959,108,1.011,125,1.217,139,0.011,140,0.014,141,0.011,197,1.776,200,2.475,201,1.688,202,2.255,206,2.18,211,1.95,222,1.217,228,2.785,257,4.129,264,4.403,278,1.464,442,2.996,499,2.446,886,2.996,887,5.575,888,2.996,889,3.992,890,4.129,891,4.775,892,4.539,893,4.775,894,4.637,895,4.637,896,4.637]],["title/components/NotFoundComponent.html",[0,0.493,120,1.086]],["body/components/NotFoundComponent.html",[0,0.787,1,1.202,2,1.852,3,0.258,4,0.258,5,1.451,6,1.451,7,1.451,8,1.451,9,0.235,11,1.451,12,2.773,13,2.773,15,1.943,17,1.943,19,0.331,25,1.11,29,1.312,36,0.621,39,0.018,40,0.959,44,0.79,45,1.147,60,0.356,61,0.614,70,0.258,71,0.086,98,1.147,99,1.943,100,1.852,101,1.451,102,2.34,103,1.451,104,1.451,105,1.147,106,1.451,107,1.202,108,1.312,109,1.451,110,1.202,111,1.451,112,1.202,113,1.451,114,1.451,115,1.202,116,1.383,117,1.451,118,1.147,119,1.451,120,1.851,121,1.451,122,1.147,123,1.451,124,1.147,125,1.76,126,1.451,127,1.147,128,1.943,129,1.202,130,1.943,131,1.147,132,1.383,133,1.202,134,1.609,135,1.147,136,1.383,137,1.451,138,1.451,139,0.009,140,0.012,141,0.009,172,4.218,278,1.686,279,2.3,284,2.457,897,5.181,898,3.431,899,5.338,900,6.019,901,5.338,902,3.986,903,3.986,904,4.596,905,5.338,906,5.338,907,4.596,908,5.338]],["title/components/NotifierComponent.html",[0,0.493,122,1.086]],["body/components/NotifierComponent.html",[0,0.724,1,1.024,2,1.66,3,0.22,4,0.22,5,1.236,6,1.236,7,1.236,8,1.236,9,0.201,11,1.236,12,2.72,13,2.72,15,1.741,17,1.741,19,0.282,20,1.093,25,0.994,29,0.74,36,0.764,38,0.934,39,0.018,40,0.995,41,0.764,42,0.852,44,1.097,45,1.594,51,1.042,60,0.494,61,0.524,70,0.22,71,0.073,73,1.435,98,0.978,99,1.741,100,1.66,101,1.236,102,2.187,103,1.236,104,1.236,105,0.978,106,1.236,107,1.024,108,1.38,109,1.236,110,1.024,111,1.236,112,1.024,113,1.236,114,1.236,115,1.024,116,1.179,117,1.236,118,0.978,119,1.236,120,0.978,121,1.236,122,1.73,123,1.236,124,0.978,125,1.663,126,1.236,127,0.978,128,1.741,129,1.024,130,1.741,131,0.978,132,1.179,133,1.024,134,1.442,135,0.978,136,1.179,137,1.236,138,1.236,139,0.008,140,0.011,141,0.008,248,2.924,278,1.511,279,2.116,284,2.296,304,5.172,544,2.924,545,2.613,602,1.908,619,3.679,718,2.924,879,3.804,909,2.924,910,4.783,911,5.535,912,4.783,913,4.622,914,6.75,915,3.397,916,5.535,917,5.172,918,4.783,919,3.397,920,3.397,921,3.397,922,3.397,923,4.258,924,2.924,925,3.397,926,2.924,927,3.397,928,3.397,929,3.397,930,3.397,931,3.397,932,2.381,933,3.397,934,3.397,935,2.613,936,3.397,937,3.397,938,2.613,939,3.397,940,3.397]],["title/classes/NotifierConfigModel.html",[71,0.081,941,2.643]],["body/classes/NotifierConfigModel.html",[0,0.842,3,0.297,4,0.297,9,0.27,19,0.38,20,1.334,36,0.833,39,0.018,41,0.883,42,1.904,51,1.273,60,0.409,70,0.379,71,0.099,139,0.011,140,0.014,141,0.011,238,2.037,360,3.082,726,3.206,728,3.519,801,3.206,879,3.866,923,4.95,932,3.206,938,3.519,941,4.094,942,3.519,943,5.54,944,5.54,945,5.54,946,6.435,947,4.574,948,4.574,949,5.54,950,4.574,951,4.574,952,4.574,953,5.54,954,4.574,955,4.574,956,3.519,957,3.938,958,3.938,959,3.938,960,3.519]],["title/modules/NotifierModule.html",[142,1.773,961,2.437]],["body/modules/NotifierModule.html",[3,0.286,4,0.286,9,0.261,25,0.918,36,0.513,39,0.018,44,0.875,60,0.645,61,0.681,70,0.37,71,0.095,98,1.271,122,2.107,139,0.01,140,0.013,141,0.01,142,2.076,144,2.076,145,2.481,146,4.09,147,2.854,148,3.339,149,2.653,156,3.69,157,2.854,158,2.854,160,4.916,161,2.854,163,4.09,222,1.159,309,2.684,367,2.076,565,4.393,566,3.095,573,4.002,602,2.481,859,3.987,862,3.397,863,3.397,961,4.78,962,3.802,963,3.802,964,3.802,965,3.397,966,5.449,967,4.416,968,5.449,969,3.802,970,4.416,971,5.711,972,4.416,973,4.393,974,2.653,975,3.802]],["title/injectables/NotifierService.html",[197,1.137,859,2.119]],["body/injectables/NotifierService.html",[3,0.197,4,0.197,9,0.179,14,1.282,19,0.252,25,0.917,29,0.661,36,0.816,38,1.667,39,0.018,40,1.089,41,0.816,42,1.52,44,1.373,45,1.496,51,1.547,60,0.51,61,0.468,70,0.197,71,0.066,72,0.834,108,0.661,122,0.873,139,0.007,140,0.01,141,0.007,197,1.33,206,1.426,213,1.772,222,1.714,229,4.664,602,1.704,630,1.704,726,2.126,800,2.126,801,3.999,820,1.822,859,2.478,861,4.913,879,4.018,917,4.475,926,2.612,932,3.092,941,4.249,943,2.612,944,2.612,945,2.612,956,2.334,960,2.334,969,2.612,976,2.612,977,5.707,978,5.707,979,5.707,980,5.707,981,4.411,982,4.411,983,4.411,984,4.411,985,5.707,986,5.707,987,3.034,988,3.034,989,4.411,990,3.034,991,3.034,992,3.034,993,3.034,994,4.411,995,6.326,996,3.034,997,2.126,998,4.411,999,3.034,1000,6.326,1001,4.411,1002,3.034,1003,4.411,1004,3.034,1005,3.034,1006,3.034,1007,4.411,1008,3.034,1009,3.034,1010,2.612,1011,3.034,1012,3.034,1013,3.034,1014,3.034,1015,3.034,1016,3.034,1017,3.034,1018,3.034,1019,3.034,1020,5.198,1021,3.034,1022,3.034,1023,3.034,1024,3.034,1025,5.198]],["title/injectables/ParseService.html",[197,1.137,202,1.248]],["body/injectables/ParseService.html",[3,0.142,4,0.142,9,0.129,19,0.182,20,0.786,25,0.716,29,0.477,30,1.683,31,3.132,36,0.811,38,1.661,39,0.018,40,1.117,41,0.703,42,1.515,44,1.198,45,0.63,51,1.52,53,2.01,54,1.595,56,1.088,60,0.498,61,0.337,66,0.759,70,0.223,71,0.047,72,0.601,77,2.269,87,1.154,89,1.757,95,2.712,108,1.144,139,0.005,140,0.008,141,0.005,192,0.759,197,1.038,199,1.533,200,2.617,201,0.796,202,1.139,211,1.139,213,1.383,222,1.88,226,3.383,228,1.314,246,2.648,305,1.413,307,1.229,331,2.841,360,3.078,373,2.246,374,3.274,378,2.648,394,1.533,406,3.63,434,3.274,446,3.898,454,3.714,465,3.504,496,1.154,497,1.154,504,1.683,524,3.714,525,3.383,528,1.314,630,1.229,633,1.533,634,1.533,635,4.156,636,1.883,637,1.883,638,1.883,639,1.883,640,1.883,641,1.533,642,1.883,643,1.314,644,1.533,645,1.533,646,1.683,647,1.883,648,1.883,649,1.883,650,1.883,651,2.413,652,1.883,653,3.665,654,2.964,655,3.665,656,1.883,657,3.665,658,1.883,659,5.203,660,5.203,661,2.964,662,1.883,663,1.883,664,3.665,665,3.665,666,2.964,667,2.964,668,2.964,669,2.964,670,1.883,671,1.883,672,3.665,673,1.883,674,3.665,675,1.028,676,1.883,677,1.883,678,2.964,679,1.883,680,1.883,681,1.883,682,2.964,683,3.665,684,1.883,685,2.964,686,1.883,687,2.964,688,1.883,689,2.964,690,2.964,691,1.883,692,1.883,693,1.883,694,1.883,695,1.883,696,1.683,697,1.883,698,1.683,699,2.648,700,1.883,701,1.883,702,2.964,703,3.665,704,1.883,705,1.883,706,1.883,873,1.683,997,2.413,1026,3.442,1027,3.442,1028,3.442,1029,3.442,1030,3.442,1031,2.187,1032,2.187,1033,2.187,1034,2.187,1035,2.187,1036,2.187,1037,2.187,1038,2.187,1039,2.187,1040,2.187,1041,2.187,1042,2.187,1043,2.187,1044,2.187,1045,2.187,1046,2.187,1047,2.187]],["title/interfaces/PropertySortFns.html",[192,1.309,1048,2.643]],["body/interfaces/PropertySortFns.html",[0,0.505,3,0.164,4,0.164,9,0.15,36,0.295,39,0.018,40,0.455,45,0.73,51,0.841,53,1.218,60,0.466,70,0.384,71,0.055,72,0.697,77,1.814,87,1.337,88,3.938,89,1.701,139,0.006,140,0.009,141,0.006,192,0.879,194,1.423,200,2.783,201,1.901,213,1.018,222,1.879,305,3.019,321,1.191,360,2.036,399,1.637,404,1.522,417,1.55,426,2.968,427,3.938,428,1.949,429,1.949,476,3.274,485,3.274,486,4.789,492,1.637,496,2.036,497,1.337,563,1.919,602,1.423,643,1.522,675,2.783,800,1.776,935,1.949,974,3.904,1048,3.66,1049,1.637,1050,2.534,1051,3.321,1052,4.88,1053,2.534,1054,4.022,1055,2.182,1056,4.022,1057,4.022,1058,4.022,1059,2.182,1060,1.949,1061,2.182,1062,1.776,1063,5.461,1064,2.182,1065,2.182,1066,2.182,1067,2.182,1068,1.949,1069,5.319,1070,2.182,1071,2.182,1072,2.182,1073,5.096,1074,3.594,1075,2.704,1076,1.949,1077,4.017,1078,2.182,1079,2.182,1080,5.299,1081,4.022,1082,2.968,1083,2.182,1084,3.321,1085,2.182,1086,2.182,1087,2.182,1088,2.182,1089,2.182,1090,2.182,1091,2.968,1092,2.968,1093,3.594,1094,1.949,1095,2.182,1096,2.182,1097,2.968,1098,2.968,1099,1.949,1100,3.321,1101,2.182,1102,3.321,1103,3.321,1104,2.182,1105,1.776,1106,2.182,1107,2.182,1108,2.182,1109,2.182,1110,2.182,1111,2.182,1112,2.182,1113,2.182,1114,2.182,1115,2.182,1116,2.182,1117,2.182,1118,2.182,1119,2.182,1120,2.182,1121,2.182,1122,2.182,1123,2.182,1124,3.321,1125,2.182,1126,2.182,1127,4.022,1128,4.022,1129,4.022,1130,4.496,1131,4.022,1132,3.321,1133,1.949,1134,2.182,1135,2.182,1136,1.949,1137,1.949,1138,2.968,1139,2.182,1140,2.182]],["title/interfaces/SelectValue.html",[192,1.309,760,2.643]],["body/interfaces/SelectValue.html",[3,0.343,4,0.343,9,0.313,19,0.44,20,1.462,39,0.018,41,0.744,51,1.638,54,1.79,56,3.182,70,0.415,139,0.012,140,0.015,141,0.012,192,1.838,194,2.975,321,3.008,417,2.127,729,3.712,753,4.075,760,4.484,809,5.005,879,3.182,1141,4.075,1142,5.297,1143,5.508]],["title/interfaces/SelectValueModel.html",[192,1.309,1144,2.437]],["body/interfaces/SelectValueModel.html",[3,0.359,4,0.359,9,0.327,19,0.46,20,1.502,39,0.017,41,0.764,51,1.636,54,1.855,70,0.359,139,0.013,140,0.015,141,0.013,192,1.923,194,3.112,809,5.08,1144,4.247,1145,4.77,1146,4.77]],["title/modules/SharedModule.html",[142,1.773,155,2.437]],["body/modules/SharedModule.html",[3,0.211,4,0.211,9,0.193,25,0.678,35,3.047,36,0.379,39,0.018,44,0.646,60,0.674,61,0.503,66,1.132,69,2.286,70,0.211,71,0.07,89,2.27,98,0.939,105,2.05,108,0.711,139,0.008,140,0.011,141,0.008,142,1.533,144,2.773,145,1.832,146,3.498,147,2.107,148,3.52,149,3.252,155,4.779,156,3.003,157,2.107,158,2.107,161,3.003,163,3.498,202,2.146,205,1.533,222,0.856,253,3.575,309,2.184,499,1.721,557,4.278,563,1.622,565,3.575,566,2.286,570,3.575,571,2.808,572,2.808,573,3.257,574,2.808,575,3.575,576,2.808,577,3.575,578,2.808,580,3.575,581,1.959,582,1.959,589,3.575,590,3.575,592,2.509,593,2.509,624,3.794,625,3.794,859,1.832,862,2.509,863,3.575,961,4.311,966,4.66,968,4.66,973,3.575,1147,2.808,1148,2.808,1149,3.261,1150,2.808,1151,2.808,1152,2.509,1153,3.261,1154,4,1155,4,1156,3.261,1157,3.261,1158,3.261,1159,4,1160,3.261,1161,3.261,1162,3.261,1163,4,1164,4.647,1165,4,1166,3.261,1167,3.261,1168,4.164,1169,3.261]],["title/injectables/SharedService.html",[35,1.773,197,1.137]],["body/injectables/SharedService.html",[3,0.221,4,0.221,9,0.201,14,1.438,19,0.282,20,1.094,23,2.385,25,0.995,29,0.742,30,2.617,31,3.692,35,2.251,36,0.826,38,1.653,39,0.018,40,1.08,41,0.785,42,1.507,44,1.191,45,1.595,51,1.381,53,1.075,54,1.648,56,3.151,60,0.566,61,0.524,66,1.181,70,0.31,71,0.074,72,0.935,73,2.678,89,1.743,95,1.911,139,0.008,140,0.011,141,0.008,192,1.181,193,2.385,195,2.617,196,2.929,197,1.444,198,4.732,199,3.883,200,2.117,201,1.239,202,1.99,203,2.617,204,3.377,205,1.599,206,1.599,207,4.77,208,4.77,209,4.77,210,4.122,211,1.834,212,2.929,213,1.367,214,2.929,215,2.929,216,2.929,217,3.356,218,2.929,219,4.122,220,4.122,221,4.77,222,1.455,223,2.929,224,4.122,225,4.77,226,4.214,227,2.929,228,2.044,229,2.617,230,2.876,231,4.122,232,4.77,233,4.625,234,4.77,235,2.929,236,2.929,316,3.356,630,1.911,1170,4.788,1171,4.788,1172,3.402,1173,3.402,1174,3.402,1175,3.402,1176,3.402,1177,3.402,1178,3.402,1179,3.402,1180,3.402,1181,3.402,1182,3.402,1183,3.402]],["title/classes/SimpleDataSource.html",[71,0.081,1062,2.643]],["body/classes/SimpleDataSource.html",[0,0.483,3,0.155,4,0.155,9,0.141,19,0.199,25,0.768,29,0.522,36,0.524,38,1.24,39,0.018,40,0.911,41,0.524,42,1.131,44,0.732,45,1.063,51,0.522,53,1.167,60,0.453,70,0.375,71,0.052,72,0.658,77,1.737,87,1.263,88,3.839,89,1.642,139,0.006,140,0.009,141,0.006,192,0.831,200,2.799,201,1.846,213,0.962,222,1.861,238,1.066,305,2.914,321,1.126,360,1.949,399,1.547,404,2.219,417,2.036,426,3.469,427,3.839,428,1.842,429,1.842,476,3.161,485,3.161,486,4.727,492,1.547,496,1.949,497,1.263,563,2.521,602,1.345,643,1.438,675,2.721,800,1.678,935,1.842,974,3.84,1048,3.161,1049,1.547,1051,2.062,1052,4.641,1054,5.503,1055,2.062,1056,3.883,1057,3.883,1058,3.883,1059,2.062,1060,1.842,1061,2.062,1062,2.589,1063,5.503,1064,2.062,1065,3.18,1066,2.062,1067,3.18,1068,1.842,1069,5.255,1070,2.062,1071,2.062,1072,2.062,1073,4.983,1074,3.469,1075,2.589,1076,1.842,1077,3.9,1078,2.062,1079,2.062,1080,5.194,1081,3.883,1082,2.842,1083,2.062,1084,3.18,1085,2.062,1086,2.062,1087,2.062,1088,2.062,1089,2.062,1090,2.062,1091,2.842,1092,2.842,1093,3.469,1094,1.842,1095,2.062,1096,2.062,1097,2.842,1098,2.842,1099,1.842,1100,3.18,1101,2.062,1102,3.18,1103,3.18,1104,2.062,1105,1.678,1106,2.062,1107,2.062,1108,2.062,1109,2.062,1110,2.062,1111,2.062,1112,2.062,1113,2.062,1114,2.062,1115,2.062,1116,2.062,1117,2.062,1118,2.062,1119,2.062,1120,2.062,1121,2.062,1122,2.062,1123,2.062,1124,3.18,1125,2.062,1126,2.062,1127,3.883,1128,3.883,1129,3.883,1130,4.365,1131,3.883,1132,3.18,1133,1.842,1134,2.062,1135,2.062,1136,1.842,1137,1.842,1138,2.842,1139,2.062,1140,2.062,1184,3.694,1185,3.694,1186,2.395,1187,2.395,1188,2.395,1189,2.395]],["title/classes/SnifferClass.html",[71,0.081,766,2.119]],["body/classes/SnifferClass.html",[3,0.253,4,0.253,9,0.23,19,0.323,20,1.201,36,0.828,39,0.018,40,1.195,41,0.828,51,1.552,53,2.249,54,1.785,60,0.47,70,0.253,71,0.114,125,1.38,139,0.009,140,0.012,141,0.009,238,1.734,309,3.604,310,4.307,355,4.66,367,2.994,373,3.139,377,2.34,379,5.116,381,2.34,384,2.34,403,2.34,404,3.157,405,3.934,406,3.573,407,3.396,408,3.396,409,3.396,411,4.463,412,2.73,413,2.73,414,2.73,415,2.73,416,2.73,766,2.952,1190,5.725,1191,3.895,1192,3.895,1193,2.996,1194,3.353,1195,4.043,1196,3.895,1197,3.895]],["title/components/SnifferDataDetailComponent.html",[0,0.493,124,1.086]],["body/components/SnifferDataDetailComponent.html",[0,0.773,1,1.159,2,1.807,3,0.249,4,0.249,5,1.399,6,1.399,7,1.399,8,1.399,9,0.227,11,1.399,12,2.762,13,2.762,15,1.896,17,1.896,19,0.319,25,1.083,29,1.288,36,0.606,39,0.018,40,0.936,44,0.762,45,1.107,60,0.343,61,0.592,70,0.249,71,0.083,98,1.107,99,1.896,100,1.807,101,1.399,102,2.306,103,1.399,104,1.399,105,1.107,106,1.399,107,1.159,108,1.659,109,1.399,110,1.159,111,1.399,112,1.159,113,1.399,114,1.399,115,1.159,116,1.334,117,1.399,118,1.107,119,1.399,120,1.107,121,1.399,122,1.107,123,1.399,124,1.823,125,1.966,126,1.399,127,1.107,128,1.896,129,1.159,130,1.896,131,1.107,132,1.334,133,1.159,134,1.57,135,1.107,136,1.334,137,1.399,138,1.399,139,0.009,140,0.012,141,0.009,180,3.818,181,4.141,270,5.453,278,1.645,279,2.258,284,2.421,541,2.926,1198,3.818,1199,3.309,1200,5.909,1201,5.209,1202,3.844,1203,3.844]],["title/components/SnifferDataListComponent.html",[0,0.493,127,1.086]],["body/components/SnifferDataListComponent.html",[0,0.747,1,1.085,2,1.728,3,0.233,4,0.233,5,1.31,6,1.31,7,1.31,8,1.31,9,0.213,11,1.31,12,2.74,13,2.74,15,1.813,17,1.813,19,0.299,20,1.138,25,1.035,29,0.785,33,2.628,34,4.319,36,0.664,38,0.99,39,0.018,40,1.026,41,0.579,42,0.902,44,0.713,45,1.036,60,0.445,61,0.555,66,1.249,70,0.233,71,0.078,72,0.99,98,1.036,99,1.813,100,1.728,101,1.31,102,2.243,103,1.31,104,1.31,105,1.036,106,1.31,107,1.085,108,1.658,109,1.31,110,1.085,111,1.31,112,1.085,113,1.31,114,1.31,115,1.085,116,1.249,117,1.31,118,1.036,119,1.31,120,1.036,121,1.31,122,1.036,123,1.31,124,1.036,125,1.948,126,1.31,127,1.774,128,1.813,129,1.085,130,1.813,131,1.036,132,1.249,133,1.085,134,1.502,135,1.036,136,2.245,137,1.31,138,1.31,139,0.008,140,0.012,141,0.008,176,3.982,180,3.982,278,1.573,279,2.182,284,2.355,331,2.684,446,2.992,541,2.798,780,2.326,1198,3.982,1204,2.523,1205,4.393,1206,3.831,1207,2.769,1208,4.981,1209,3.099,1210,2.769]],["title/guards/SnifferDataResolverService.html",[261,2.643,885,2.437]],["body/guards/SnifferDataResolverService.html",[3,0.288,4,0.288,9,0.262,14,1.878,19,0.369,25,1.192,29,0.969,33,2.345,36,0.738,38,1.577,39,0.018,40,1.03,41,0.667,42,1.438,44,1.136,60,0.635,61,0.685,66,1.542,70,0.288,71,0.124,72,1.222,108,1.462,139,0.01,140,0.013,141,0.01,197,1.729,200,2.654,201,1.618,202,2.22,206,2.09,211,2.22,222,1.667,261,4.019,264,4.334,278,1.404,331,3.153,401,3.115,442,2.872,499,2.345,537,3.419,780,2.872,886,2.872,888,2.872,890,4.019,891,4.701,892,4.449,893,4.701,1211,5.775,1212,3.827,1213,4.445,1214,3.827,1215,4.445,1216,3.419,1217,3.827,1218,4.445]],["title/components/SnifferFormComponent.html",[0,0.493,129,1.137]],["body/components/SnifferFormComponent.html",[0,0.572,1,0.688,2,1.235,3,0.148,4,0.148,5,0.831,6,0.831,7,0.831,8,0.831,9,0.135,11,0.831,12,2.559,13,2.559,15,1.296,17,1.296,19,0.189,20,0.813,25,0.74,29,0.497,35,2.787,36,0.786,38,1.203,39,0.018,40,0.963,41,0.623,42,1.097,44,1.249,45,1.765,53,0.721,54,0.572,60,0.563,61,0.352,69,1.6,70,0.148,71,0.077,72,0.627,73,1.849,89,1.296,98,0.657,99,1.296,100,1.235,101,0.831,102,1.799,103,0.831,104,0.831,105,0.657,106,0.831,107,0.688,108,1.431,109,0.831,110,0.688,111,0.831,112,0.688,113,0.831,114,0.831,115,0.688,116,0.792,117,0.831,118,0.657,119,0.831,120,0.657,121,0.831,122,0.657,123,0.831,124,0.657,125,1.75,126,0.831,127,0.657,128,1.296,129,1.49,130,1.296,131,0.657,132,0.792,133,0.688,134,1.073,135,0.657,136,0.792,137,0.831,138,0.831,139,0.005,140,0.008,141,0.005,178,4.108,198,1.6,202,1.635,204,2.458,205,1.073,211,1.448,222,0.599,230,3.218,278,1.124,279,1.672,284,1.888,289,3.463,307,1.282,321,1.073,355,3.978,367,2.057,380,4.254,465,2.628,477,1.965,499,1.204,528,1.371,581,1.371,582,1.371,644,1.6,675,2.057,713,3.755,737,2.738,744,3.83,746,3.193,749,3.064,765,1.475,766,2.458,767,1.6,770,1.6,771,1.756,772,1.965,773,3.066,775,1.6,776,1.965,804,3.668,807,3.801,820,2.138,823,4.297,824,2.494,840,3.366,857,3.064,873,1.756,874,1.965,913,3.801,924,1.965,1010,3.064,1105,2.494,1219,5.887,1220,1.756,1221,3.766,1222,3.064,1223,4.254,1224,4.941,1225,4.941,1226,4.941,1227,3.559,1228,4.941,1229,2.282,1230,4.254,1231,3.559,1232,3.064,1233,1.965,1234,2.282,1235,2.282,1236,2.282,1237,2.282,1238,2.282,1239,2.282,1240,3.559,1241,2.282,1242,2.282,1243,3.559,1244,1.965,1245,2.282,1246,2.282,1247,2.282,1248,2.282,1249,2.738,1250,2.282,1251,2.282,1252,3.559,1253,2.282,1254,1.965,1255,2.282,1256,2.282,1257,4.375,1258,2.282,1259,2.282,1260,2.282,1261,2.282,1262,2.282,1263,2.282,1264,2.282,1265,2.282,1266,2.282,1267,2.282,1268,3.559,1269,3.559,1270,3.559,1271,3.064,1272,3.064]],["title/injectables/SnifferService.html",[197,1.137,1273,2.901]],["body/injectables/SnifferService.html",[3,0.366,4,0.366,9,0.333,14,2.387,29,1.54,36,0.657,39,0.018,60,0.505,61,0.871,70,0.366,71,0.122,139,0.013,140,0.015,141,0.013,197,2.004,206,2.655,630,3.173,1273,5.114,1274,4.862,1275,5.648]],["title/components/SnifferTokenFormComponent.html",[0,0.493,133,1.137]],["body/components/SnifferTokenFormComponent.html",[0,0.59,1,0.723,2,1.283,3,0.155,4,0.155,5,0.873,6,0.873,7,0.873,8,0.873,9,0.142,11,0.873,12,2.581,13,2.581,15,1.346,17,1.346,19,0.199,20,0.845,25,1.055,29,0.523,36,0.759,38,1.241,39,0.018,40,0.985,41,0.637,42,1.131,44,1.086,45,1.299,51,0.984,53,1.168,54,1.131,55,2.711,60,0.557,61,0.37,70,0.155,71,0.08,72,0.659,73,1.563,98,0.69,99,1.346,100,1.76,101,0.873,102,1.847,103,0.873,104,0.873,105,0.69,106,0.873,107,0.723,108,0.984,109,0.873,110,0.723,111,0.873,112,0.723,113,0.873,114,0.873,115,0.723,116,0.832,117,0.873,118,0.69,119,0.873,120,0.69,121,0.873,122,0.69,123,0.873,124,0.69,125,1.874,126,0.873,127,0.69,128,1.346,129,0.723,130,1.346,131,0.69,132,0.832,133,1.53,134,2.272,135,0.69,136,0.832,137,0.873,138,0.873,139,0.006,140,0.009,141,0.006,148,1.951,175,4.295,178,3.993,200,2.095,201,0.873,204,2.535,205,1.127,222,1.185,230,3.625,233,1.844,278,1.168,279,1.725,284,1.939,293,1.68,494,1.844,496,1.265,497,1.265,541,2.077,551,3.903,581,1.44,582,1.44,641,1.68,643,1.44,675,1.738,744,3.278,746,2.916,765,1.549,770,1.68,775,1.68,820,2.711,823,2.591,824,2.591,840,3.472,868,2.064,907,2.064,913,3.903,1060,2.844,1144,3.278,1198,4.295,1220,1.844,1221,3.886,1222,3.183,1223,4.367,1230,4.367,1232,3.886,1233,2.064,1244,2.064,1254,2.064,1271,2.064,1272,2.064,1276,4.059,1277,4.513,1278,4.513,1279,3.698,1280,3.698,1281,2.397,1282,3.698,1283,3.698,1284,2.397,1285,3.698,1286,2.397,1287,3.698,1288,3.698,1289,4.718,1290,2.397,1291,2.397,1292,2.397,1293,2.916,1294,2.397,1295,2.064,1296,2.064,1297,2.064,1298,2.397,1299,2.397,1300,2.397,1301,2.397,1302,2.397,1303,2.064,1304,2.397,1305,2.397,1306,2.397,1307,2.397,1308,2.397,1309,3.698,1310,3.698,1311,2.397,1312,2.397,1313,2.064,1314,2.397,1315,2.397,1316,2.397,1317,2.397,1318,2.397,1319,1.844,1320,2.397,1321,2.397,1322,3.698,1323,2.397]],["title/components/SnifferTokenListComponent.html",[0,0.493,135,1.086]],["body/components/SnifferTokenListComponent.html",[0,0.71,1,0.99,2,1.62,3,0.213,4,0.213,5,1.195,6,1.195,7,1.195,8,1.195,9,0.194,11,1.195,12,2.708,13,2.708,15,1.699,17,1.699,19,0.272,20,1.066,25,0.97,29,0.715,33,2.463,34,4.147,36,0.688,38,1.283,39,0.018,40,1.063,41,0.632,42,1.17,44,0.925,45,1.344,51,1.184,60,0.529,61,0.506,66,1.139,70,0.213,71,0.071,72,0.902,73,1.387,77,1.543,98,0.945,99,1.699,100,1.62,101,1.195,102,2.154,103,1.195,104,1.195,105,0.945,106,1.195,107,0.99,108,1.416,109,1.195,110,0.99,111,1.195,112,0.99,113,1.195,114,1.195,115,0.99,116,1.139,117,1.195,118,0.945,119,1.195,120,0.945,121,1.195,122,0.945,123,1.195,124,0.945,125,1.933,126,1.195,127,0.945,128,1.699,129,0.99,130,1.699,131,0.945,132,1.139,133,1.407,134,2.29,135,1.703,136,2.169,137,1.195,138,1.195,139,0.008,140,0.011,141,0.008,175,4.04,176,4.04,178,1.972,179,2.525,278,1.474,279,2.076,284,2.261,532,2.826,541,2.622,581,1.972,582,1.972,997,2.3,1198,4.04,1204,2.3,1205,4.179,1206,3.591,1207,2.525,1210,2.525,1324,4.019,1325,4.677,1326,5.094,1327,4.019,1328,3.282,1329,4.668,1330,3.282,1331,2.826,1332,3.282,1333,3.282,1334,2.826,1335,2.826,1336,2.826]],["title/injectables/SnifferTokenService.html",[197,1.137,1276,2.643]],["body/injectables/SnifferTokenService.html",[3,0.25,4,0.25,9,0.227,14,1.627,19,0.32,25,1.084,29,0.839,36,0.688,38,1.434,39,0.018,40,0.937,41,0.606,42,1.307,44,1.033,51,1.289,54,1.712,60,0.635,61,0.594,70,0.25,71,0.128,72,1.059,73,1.627,89,1.402,139,0.009,140,0.012,141,0.009,197,1.572,200,2.26,201,1.402,202,2.098,203,2.962,204,3.322,205,1.81,206,1.81,211,1.726,213,1.547,222,1.739,331,1.81,442,2.488,494,2.962,496,2.032,497,2.032,528,2.313,630,2.163,641,2.699,643,2.313,675,2.78,696,2.962,698,2.962,744,4.096,746,3.822,765,2.488,766,2.163,767,2.699,773,2.699,779,3.315,809,2.699,1144,2.488,1276,3.655,1289,3.315,1293,2.488,1295,3.315,1296,3.315,1297,3.315,1303,3.315,1337,5.457,1338,3.315,1339,6.339,1340,5.216,1341,3.851,1342,3.851,1343,5.216,1344,3.851,1345,3.851,1346,3.851,1347,3.851,1348,3.851,1349,3.851,1350,3.851,1351,3.851,1352,3.851,1353,3.851,1354,3.851]],["title/components/SniffersListComponent.html",[0,0.493,131,1.086]],["body/components/SniffersListComponent.html",[0,0.696,1,0.953,2,1.577,3,0.205,4,0.205,5,1.151,6,1.151,7,1.151,8,1.151,9,0.187,11,1.151,12,2.694,13,2.694,15,1.654,17,1.654,19,0.262,20,1.038,25,0.945,29,0.689,33,2.397,34,4.076,36,0.716,38,1.249,39,0.018,40,1.107,41,0.676,42,1.139,44,0.9,45,1.308,51,0.99,60,0.52,61,0.487,66,1.097,70,0.205,71,0.068,72,0.869,73,1.336,98,0.91,99,1.654,100,1.577,101,1.151,102,2.117,103,1.151,104,1.151,105,0.91,106,1.151,107,0.953,108,1.268,109,1.151,110,0.953,111,1.151,112,0.953,113,1.151,114,1.151,115,0.953,116,1.097,117,1.151,118,0.91,119,1.151,120,0.91,121,1.151,122,0.91,123,1.151,124,0.91,125,1.776,126,1.151,127,0.91,128,1.654,129,1.37,130,1.654,131,1.674,132,2.426,133,0.953,134,1.37,135,0.91,136,2.138,137,1.151,138,1.151,139,0.007,140,0.011,141,0.007,178,1.899,179,2.431,184,4.496,265,3.912,266,2.729,278,1.435,279,2.033,284,2.223,321,2.136,331,2.501,355,2.215,399,2.042,421,2.721,439,4.579,446,2.729,457,2.721,465,3.195,510,2.721,541,2.552,581,1.899,582,1.899,780,2.042,804,2.042,997,2.215,1204,2.215,1205,4.092,1206,3.495,1207,2.431,1209,3.912,1210,2.431,1319,2.431,1324,3.912,1325,4.579,1326,5.007,1327,2.721,1331,2.721,1334,2.721,1335,2.721,1336,2.721,1355,3.161,1356,5.523,1357,3.161,1358,4.544,1359,3.161,1360,3.161,1361,3.161,1362,2.721,1363,3.161,1364,3.161,1365,2.721,1366,3.161,1367,2.721,1368,3.161,1369,3.161,1370,3.161,1371,3.161,1372,3.161]],["title/guards/SniffersResolverService.html",[259,2.643,885,2.437]],["body/guards/SniffersResolverService.html",[3,0.274,4,0.274,9,0.249,14,1.785,19,0.351,25,1.153,29,0.921,33,2.229,36,0.765,38,1.525,39,0.018,40,0.997,41,0.645,42,1.391,44,1.228,60,0.626,61,0.651,66,1.466,70,0.274,71,0.12,72,1.161,89,1.538,139,0.01,140,0.013,141,0.01,197,1.673,200,2.731,201,1.538,202,2.177,206,1.986,211,2.177,213,1.697,222,1.727,259,3.888,264,4.251,278,1.334,331,3.092,435,5.663,442,2.73,499,2.229,537,3.25,766,2.373,767,2.961,780,2.73,886,2.73,888,2.73,890,3.888,891,4.61,892,4.341,893,4.61,1105,2.961,1212,3.637,1214,3.637,1216,3.25,1217,3.637,1365,3.637,1373,5.882,1374,4.225,1375,4.225,1376,4.225,1377,4.225,1378,4.225,1379,4.225,1380,4.225,1381,4.225,1382,5.548,1383,4.225]],["title/classes/Texts.html",[71,0.081,1384,2.901]],["body/classes/Texts.html",[3,0.348,4,0.348,9,0.317,19,0.445,20,1.473,36,0.75,39,0.018,41,0.834,70,0.348,71,0.116,125,1.815,139,0.012,140,0.015,141,0.012,238,2.39,309,3.25,310,3.884,367,2.523,431,5.952,904,4.62,1384,4.961,1385,4.62,1386,6.449,1387,5.366,1388,5.366,1389,5.366,1390,5.366]],["title/classes/TokenClass.html",[71,0.081,1293,2.437]],["body/classes/TokenClass.html",[3,0.246,4,0.246,9,0.224,19,0.315,20,1.181,36,0.835,39,0.018,41,0.835,51,1.565,53,2.268,54,1.8,60,0.34,70,0.246,71,0.112,125,1.731,134,1.559,139,0.009,140,0.012,141,0.009,238,1.693,309,3.62,310,4.326,367,3.1,373,3.1,377,2.283,381,2.283,384,2.283,391,5.677,393,5.677,403,2.283,404,3.105,405,3.909,406,3.529,407,3.34,408,3.34,409,3.34,410,2.664,411,4.418,412,2.664,413,2.664,414,2.664,415,2.664,416,2.664,833,5.057,1193,2.924,1194,3.272,1293,3.34,1391,5.856,1392,5.169,1393,3.801,1394,3.272]],["title/guards/TokensResolverService.html",[254,2.643,885,2.437]],["body/guards/TokensResolverService.html",[3,0.313,4,0.313,9,0.285,14,2.043,19,0.401,25,1.257,29,1.439,33,2.55,36,0.703,38,1.329,39,0.018,40,0.869,41,0.562,42,1.212,44,0.958,60,0.618,61,0.745,66,1.677,70,0.313,71,0.104,88,3.388,139,0.011,140,0.014,141,0.011,197,1.824,200,2.523,201,1.76,206,2.272,222,1.733,254,4.239,264,4.47,278,1.527,497,2.55,886,3.123,888,3.123,889,4.161,890,4.239,891,4.848,892,4.626,893,4.848,1216,3.718,1395,5.683,1396,4.834,1397,4.834,1398,4.834,1399,4.834]],["title/classes/UserClass.html",[71,0.081,853,2.643]],["body/classes/UserClass.html",[3,0.257,4,0.257,9,0.234,19,0.329,20,1.215,36,0.831,39,0.018,40,1.202,41,0.831,51,1.559,53,2.258,54,1.792,60,0.354,70,0.257,71,0.115,139,0.009,140,0.012,141,0.009,238,1.765,309,3.61,310,4.314,367,3.015,373,3.166,377,2.38,381,2.38,384,2.38,394,3.726,396,5.759,403,2.38,404,3.194,405,3.952,407,3.436,408,3.436,409,3.436,410,2.777,411,4.495,412,2.777,413,2.777,414,2.777,415,2.777,416,2.777,651,4.688,830,3.412,853,3.726,1193,3.048,1394,3.412,1400,5.759,1401,6.001]],["title/changelog.html",[1402,2.425,1403,2.425,1404,3.152]],["body/changelog.html",[39,0.016,139,0.014,140,0.016,141,0.014]],["title/coverage.html",[1405,4.427]],["body/coverage.html",[0,0.923,1,0.767,9,0.15,10,2.19,35,1.196,39,0.018,41,0.296,54,0.638,71,0.143,87,4.103,105,0.732,107,0.767,108,1.227,110,0.767,112,0.767,115,0.767,118,0.732,120,0.732,122,0.732,124,0.732,127,0.732,129,0.767,131,0.732,133,0.767,134,1.577,135,0.732,139,0.006,140,0.009,141,0.006,144,1.196,148,1.342,172,1.783,175,2.5,176,2.5,178,2.324,180,2.5,181,1.783,184,1.783,187,1.957,192,2.057,193,1.783,195,2.976,197,1.787,202,0.842,213,1.022,237,1.957,239,2.19,254,1.783,257,1.783,259,1.783,261,1.783,276,2.19,277,2.19,307,1.429,308,2.976,328,1.783,401,1.783,402,2.19,403,3.381,405,1.429,417,2.856,418,2.19,419,2.19,422,2.19,489,1.957,490,1.957,491,1.957,492,1.644,545,4.56,562,1.644,563,3.401,564,3.602,587,1.957,614,1.957,624,2.711,625,2.711,631,2.19,633,1.783,634,3.281,645,1.783,707,2.19,713,1.783,714,2.19,715,2.19,716,2.19,717,2.19,729,2.711,730,2.19,760,1.783,766,1.429,829,2.19,837,2.19,853,1.783,859,1.429,885,3.381,887,2.19,888,3.381,897,2.19,898,2.19,909,2.19,941,1.783,942,1.957,965,1.957,974,3.815,976,2.19,1048,1.783,1049,4.104,1062,1.783,1141,1.957,1144,1.644,1145,2.19,1146,2.19,1152,4.33,1168,1.957,1190,2.19,1195,1.957,1198,3.381,1199,2.19,1204,3.281,1211,2.19,1219,2.19,1220,2.976,1249,1.957,1273,1.957,1274,2.19,1276,1.783,1293,1.644,1337,2.19,1338,2.19,1356,2.19,1373,2.19,1384,1.957,1385,2.19,1391,2.19,1395,2.19,1400,2.19,1405,2.19,1406,2.544,1407,2.544,1408,2.544,1409,6.838,1410,4.682,1411,5.232,1412,4.682,1413,2.19,1414,7.207,1415,4.682,1416,2.544,1417,7.055,1418,5.232,1419,2.19,1420,5.928,1421,2.19,1422,2.544,1423,2.19,1424,2.544,1425,4.682,1426,2.19,1427,2.544,1428,2.544,1429,2.19,1430,2.19,1431,2.544,1432,2.544,1433,2.544,1434,2.544,1435,2.19,1436,3.331,1437,2.19,1438,3.331,1439,2.19,1440,2.19,1441,2.544]],["title/dependencies.html",[145,2.547,1442,3.152]],["body/dependencies.html",[39,0.018,61,0.778,66,1.752,67,4.78,68,4.015,139,0.012,140,0.014,141,0.012,145,2.836,201,1.838,205,2.373,211,1.671,566,3.538,592,3.884,593,3.884,602,3.49,603,5.349,604,4.346,1075,3.538,1443,5.049,1444,7.515,1445,5.049,1446,6.214,1447,5.049,1448,5.049,1449,5.049,1450,5.049,1451,5.049,1452,5.049,1453,5.049,1454,5.049,1455,5.049,1456,5.049,1457,5.049,1458,5.049,1459,5.049,1460,5.049,1461,5.049,1462,5.049,1463,5.049,1464,5.049,1465,5.049]],["title/miscellaneous/enumerations.html",[1466,1.663,1467,3.904]],["body/miscellaneous/enumerations.html",[19,0.471,39,0.017,51,1.238,54,1.832,56,3.317,139,0.013,140,0.015,141,0.013,321,3.135,417,2.281,729,3.98,753,5.131,879,3.411,1141,4.369,1143,5.742,1466,2.997,1467,4.889,1468,5.679]],["title/miscellaneous/functions.html",[1466,1.663,1469,3.904]],["body/miscellaneous/functions.html",[0,0.722,19,0.348,38,1.99,39,0.018,40,1.301,41,0.487,42,1.815,44,1.386,139,0.01,140,0.013,141,0.01,200,2.799,201,2.246,321,1.97,360,2.211,417,1.683,427,3.867,476,2.937,485,2.937,486,4.999,489,4.245,490,4.245,491,4.245,492,3.566,496,2.211,563,2.084,965,3.223,974,2.517,975,3.607,1049,4.609,1068,3.223,1069,4.245,1074,4.746,1075,3.867,1076,3.223,1077,5.044,1082,4.746,1091,4.245,1092,4.245,1093,4.746,1094,3.223,1097,4.245,1098,4.245,1099,3.223,1133,3.223,1136,3.223,1137,3.223,1138,3.223,1195,4.245,1413,3.607,1419,4.75,1421,4.75,1426,4.75,1466,2.211,1469,3.607,1470,5.382,1471,4.19,1472,4.19,1473,4.19,1474,4.19,1475,4.19,1476,4.19,1477,4.19]],["title/index.html",[19,0.262,1402,2.425,1403,2.425]],["body/index.html",[39,0.016,125,1.287,139,0.011,140,0.014,141,0.011,266,4.442,267,3.772,328,3.436,804,4.293,820,4.176,1313,6.157,1319,4.694,1362,5.986,1367,4.221,1478,4.903,1479,4.903,1480,4.903,1481,6.644,1482,4.903,1483,4.903,1484,4.903,1485,4.903,1486,4.903,1487,4.903,1488,4.903,1489,4.903,1490,6.103,1491,6.103,1492,6.103,1493,6.103,1494,6.103,1495,4.903,1496,4.903,1497,4.903,1498,4.903,1499,4.903,1500,4.903,1501,4.903,1502,4.903,1503,4.903,1504,6.103,1505,4.903,1506,4.903,1507,4.903,1508,4.903,1509,4.903,1510,6.103,1511,4.903,1512,4.903,1513,4.903,1514,4.903,1515,4.903,1516,4.903,1517,4.903,1518,4.903,1519,4.903]],["title/license.html",[1402,2.425,1403,2.425,1520,3.152]],["body/license.html",[39,0.016,139,0.014,140,0.016,141,0.014]],["title/modules.html",[144,2.417]],["body/modules.html",[39,0.015,68,4.721,139,0.013,140,0.015,141,0.013,143,3.98,144,2.67,154,3.67,155,3.67,557,3.411,961,3.67,1521,7.307,1522,7.307,1523,7.449,1524,5.679,1525,5.679]],["title/overview.html",[1526,4.427]],["body/overview.html",[1,2.094,2,1.309,35,2.751,39,0.018,98,1.086,105,2,107,2.094,110,1.764,112,1.764,115,1.764,118,1.685,120,1.685,122,1.685,124,1.685,127,1.685,129,1.764,131,1.685,133,1.764,135,1.685,139,0.009,140,0.012,141,0.009,142,1.773,143,5.432,144,1.773,145,2.119,146,2.438,147,2.438,148,1.991,149,2.266,150,3.248,151,3.248,152,3.248,153,3.248,154,3.782,155,4.827,156,3.324,157,2.438,158,2.438,194,2.119,202,1.937,238,1.68,252,2.644,471,3.248,473,3.248,557,4.53,558,3.248,559,3.248,560,3.248,561,3.248,562,3.782,630,2.119,859,3.287,886,2.438,961,4.685,962,3.248,963,3.248,964,3.248,1147,3.248,1148,3.248,1150,3.248,1151,3.248,1423,3.248,1526,3.248,1527,5.143,1528,3.773,1529,3.773]],["title/routes.html",[252,3.604]],["body/routes.html",[39,0.016,139,0.014,140,0.016,141,0.014,252,4.264]],["title/miscellaneous/typealiases.html",[1466,1.663,1530,4.535]],["body/miscellaneous/typealiases.html",[19,0.454,39,0.018,41,0.636,139,0.013,140,0.015,141,0.013,417,2.196,563,2.719,726,3.831,728,4.205,801,3.831,923,5.016,932,3.831,938,4.205,942,4.205,949,5.614,953,5.614,956,4.205,957,4.706,958,4.706,959,4.706,960,4.205,974,3.284,1049,4.214,1052,5.016,1466,2.884,1470,4.205,1531,5.467,1532,6.969]],["title/miscellaneous/variables.html",[1466,1.663,1533,3.904]],["body/miscellaneous/variables.html",[19,0.288,35,1.632,39,0.018,41,0.846,51,1.059,53,2.331,54,1.85,55,2.085,56,1.727,77,2.633,105,0.999,139,0.008,140,0.011,141,0.008,144,2.283,148,2.562,202,1.149,211,1.149,222,1.275,253,2.671,308,2.671,321,2.633,328,3.403,367,1.632,368,2.989,372,2.989,417,1.394,557,2.085,563,1.727,564,4.666,570,3.736,573,3.403,575,3.736,577,3.736,579,2.989,580,3.736,583,2.989,585,2.989,586,2.989,589,3.736,590,3.736,594,2.989,596,2.989,598,2.989,614,3.736,615,4.181,616,5.496,617,5.222,618,4.822,619,2.671,620,2.989,621,2.989,622,2.989,623,2.989,624,4.251,625,4.251,634,2.433,645,3.403,646,2.671,675,1.632,973,2.671,1152,2.671,1154,2.989,1155,2.989,1159,2.989,1163,2.989,1165,2.989,1168,3.736,1249,3.736,1429,2.989,1430,4.181,1435,2.989,1436,5.222,1437,2.989,1438,2.989,1439,4.181,1440,4.181,1466,1.832,1470,4.309,1533,2.989,1534,4.856,1535,6.384,1536,3.472,1537,3.472,1538,3.472,1539,3.472,1540,3.472,1541,3.472,1542,3.472,1543,4.856,1544,3.472,1545,3.472,1546,3.472,1547,3.472,1548,3.472,1549,3.472,1550,3.472,1551,3.472]]],"invertedIndex":[["",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"classes/Consts.html":{},"classes/DataClass.html":{},"components/DataTableComponent.html":{},"modules/DataTableModule.html":{},"injectables/DataTableService.html":{},"interfaces/DataWithCount.html":{},"components/DetailsComponent.html":{},"interfaces/DialogDataInterface.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"classes/GenericClass.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"classes/NotifierConfigModel.html":{},"modules/NotifierModule.html":{},"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"interfaces/SelectValue.html":{},"interfaces/SelectValueModel.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"classes/SimpleDataSource.html":{},"classes/SnifferClass.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferFormComponent.html":{},"injectables/SnifferService.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"injectables/SnifferTokenService.html":{},"components/SniffersListComponent.html":{},"guards/SniffersResolverService.html":{},"classes/Texts.html":{},"classes/TokenClass.html":{},"guards/TokensResolverService.html":{},"classes/UserClass.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"classes/Consts.html":{},"components/DataTableComponent.html":{},"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"coverage.html":{}}}],["0)(?!.*\\.$)((1?\\d?\\d|25[0",{"_index":356,"title":{},"body":{"classes/Consts.html":{}}}],["0.0.2",{"_index":319,"title":{},"body":{"classes/Consts.html":{}}}],["0.10.0",{"_index":1460,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":1455,"title":{},"body":{"dependencies.html":{}}}],["0.9.1",{"_index":1465,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1414,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1416,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1431,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1427,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1434,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1422,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1428,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1415,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1409,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1418,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1411,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1412,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1425,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1410,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":305,"title":{},"body":{"components/AppToolbarComponent.html":{},"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["1.10.0",{"_index":1463,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1420,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":1433,"title":{},"body":{"coverage.html":{}}}],["1/22",{"_index":1424,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1528,"title":{},"body":{"overview.html":{}}}],["100",{"_index":545,"title":{},"body":{"components/DataTableComponent.html":{},"components/NotifierComponent.html":{},"coverage.html":{}}}],["100px",{"_index":556,"title":{},"body":{"components/DataTableComponent.html":{}}}],["10px",{"_index":555,"title":{},"body":{"components/DataTableComponent.html":{}}}],["15",{"_index":473,"title":{},"body":{"components/DataTableComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":1453,"title":{},"body":{"dependencies.html":{}}}],["2.10.0",{"_index":1457,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":1456,"title":{},"body":{"dependencies.html":{}}}],["200px",{"_index":548,"title":{},"body":{"components/DataTableComponent.html":{}}}],["209",{"_index":705,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["25",{"_index":474,"title":{},"body":{"components/DataTableComponent.html":{}}}],["3000",{"_index":361,"title":{},"body":{"classes/Consts.html":{}}}],["30px",{"_index":727,"title":{},"body":{"components/FabButtonComponent.html":{}}}],["4",{"_index":1423,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["4]\\d)(\\.|$)){4",{"_index":358,"title":{},"body":{"classes/Consts.html":{}}}],["5",{"_index":471,"title":{},"body":{"components/DataTableComponent.html":{},"overview.html":{}}}],["5000",{"_index":1013,"title":{},"body":{"injectables/NotifierService.html":{}}}],["5]|2[0",{"_index":357,"title":{},"body":{"classes/Consts.html":{}}}],["6",{"_index":1527,"title":{},"body":{"overview.html":{}}}],["6.4.0",{"_index":1461,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1529,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":1448,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":1446,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":1450,"title":{},"body":{"dependencies.html":{}}}],["8.2.7",{"_index":1444,"title":{},"body":{"dependencies.html":{}}}],["8.3.5",{"_index":1489,"title":{},"body":{"index.html":{}}}],["9",{"_index":1432,"title":{},"body":{"coverage.html":{}}}],["9]+\\.)+[a",{"_index":350,"title":{},"body":{"classes/Consts.html":{}}}],["9]{1,3}\\.[0",{"_index":346,"title":{},"body":{"classes/Consts.html":{}}}],["9]{1,3}])|(([a",{"_index":347,"title":{},"body":{"classes/Consts.html":{}}}],["_filter_columns",{"_index":323,"title":{},"body":{"classes/Consts.html":{}}}],["_limit",{"_index":786,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["_query",{"_index":425,"title":{},"body":{"components/DataTableComponent.html":{},"components/FilterByColumComponent.html":{}}}],["a.length",{"_index":1111,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["a.pageindex",{"_index":1115,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["a.pagesize",{"_index":1113,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["abstractcontrol",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ac",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessors",{"_index":316,"title":{},"body":{"classes/Consts.html":{},"components/DataTableComponent.html":{},"components/FilterByColumComponent.html":{},"injectables/SharedService.html":{}}}],["acl",{"_index":373,"title":{},"body":{"classes/Consts.html":{},"classes/DataClass.html":{},"interfaces/DataWithCount.html":{},"classes/GenericClass.html":{},"injectables/ParseService.html":{},"classes/SnifferClass.html":{},"classes/TokenClass.html":{},"classes/UserClass.html":{}}}],["acl.setpublicreadaccess(true",{"_index":376,"title":{},"body":{"classes/Consts.html":{}}}],["acl.setpublicwriteaccess(true",{"_index":375,"title":{},"body":{"classes/Consts.html":{}}}],["action",{"_index":913,"title":{},"body":{"components/NotifierComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{}}}],["actions",{"_index":511,"title":{},"body":{"components/DataTableComponent.html":{}}}],["activatedroute",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["activatedroutesnapshot",{"_index":891,"title":{},"body":{"guards/LoginResolverService.html":{},"guards/SnifferDataResolverService.html":{},"guards/SniffersResolverService.html":{},"guards/TokensResolverService.html":{}}}],["active",{"_index":399,"title":{},"body":{"classes/Consts.html":{},"classes/GenericClass.html":{},"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"components/SniffersListComponent.html":{}}}],["activo",{"_index":400,"title":{},"body":{"classes/Consts.html":{}}}],["activos",{"_index":1368,"title":{},"body":{"components/SniffersListComponent.html":{}}}],["actual_component",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["actualización",{"_index":383,"title":{},"body":{"classes/Consts.html":{}}}],["adapter",{"_index":604,"title":{},"body":{"modules/DataTableModule.html":{},"dependencies.html":{}}}],["add",{"_index":723,"title":{},"body":{"components/FabButtonComponent.html":{}}}],["adicional",{"_index":1370,"title":{},"body":{"components/SniffersListComponent.html":{}}}],["afterdismissed().subscribe(res",{"_index":1334,"title":{},"body":{"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["al",{"_index":907,"title":{},"body":{"components/NotFoundComponent.html":{},"components/SnifferTokenFormComponent.html":{}}}],["aliases",{"_index":1531,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["almacenaran",{"_index":1513,"title":{},"body":{"index.html":{}}}],["alpha_expression",{"_index":354,"title":{},"body":{"classes/Consts.html":{}}}],["alphanum_space_expression",{"_index":352,"title":{},"body":{"classes/Consts.html":{}}}],["angular",{"_index":1486,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1443,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1445,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collections",{"_index":1055,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["angular/cdk/portal",{"_index":955,"title":{},"body":{"classes/NotifierConfigModel.html":{}}}],["angular/common",{"_index":566,"title":{},"body":{"modules/DataTableModule.html":{},"modules/NotifierModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":972,"title":{},"body":{"modules/NotifierModule.html":{}}}],["angular/compiler",{"_index":1447,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"modules/DataTableModule.html":{},"injectables/DataTableService.html":{},"interfaces/DataWithCount.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"modules/NotifierModule.html":{},"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferFormComponent.html":{},"injectables/SnifferService.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"injectables/SnifferTokenService.html":{},"components/SniffersListComponent.html":{},"guards/SniffersResolverService.html":{},"guards/TokensResolverService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":592,"title":{},"body":{"modules/DataTableModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":205,"title":{},"body":{"interfaces/AppOptions.html":{},"modules/DataTableModule.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"injectables/SnifferTokenService.html":{},"dependencies.html":{}}}],["angular/material",{"_index":602,"title":{},"body":{"modules/DataTableModule.html":{},"components/NotifierComponent.html":{},"modules/NotifierModule.html":{},"injectables/NotifierService.html":{},"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/bottom",{"_index":581,"title":{},"body":{"modules/DataTableModule.html":{},"modules/SharedModule.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["angular/material/button",{"_index":578,"title":{},"body":{"modules/DataTableModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/core",{"_index":599,"title":{},"body":{"modules/DataTableModule.html":{}}}],["angular/material/datepicker",{"_index":597,"title":{},"body":{"modules/DataTableModule.html":{}}}],["angular/material/expansion",{"_index":584,"title":{},"body":{"modules/DataTableModule.html":{}}}],["angular/material/form",{"_index":571,"title":{},"body":{"modules/DataTableModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/icon",{"_index":574,"title":{},"body":{"modules/DataTableModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/input",{"_index":576,"title":{},"body":{"modules/DataTableModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/paginator",{"_index":488,"title":{},"body":{"components/DataTableComponent.html":{},"modules/DataTableModule.html":{}}}],["angular/material/progress",{"_index":1164,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/select",{"_index":595,"title":{},"body":{"modules/DataTableModule.html":{}}}],["angular/material/snack",{"_index":862,"title":{},"body":{"components/LoginComponent.html":{},"modules/NotifierModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/sort",{"_index":487,"title":{},"body":{"components/DataTableComponent.html":{},"modules/DataTableModule.html":{}}}],["angular/material/table",{"_index":498,"title":{},"body":{"components/DataTableComponent.html":{},"modules/DataTableModule.html":{}}}],["angular/material/toolbar",{"_index":1160,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/tooltip",{"_index":1156,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/platform",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"modules/AppRoutingModule.html":{},"interfaces/DataWithCount.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"injectables/ParseService.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"components/SnifferDataListComponent.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{},"guards/SniffersResolverService.html":{},"guards/TokensResolverService.html":{},"dependencies.html":{}}}],["aplicacion",{"_index":1499,"title":{},"body":{"index.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["app.component",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app_version",{"_index":311,"title":{},"body":{"classes/Consts.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appdefaultoptions",{"_index":209,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SharedService.html":{}}}],["applicationid",{"_index":325,"title":{},"body":{"classes/Consts.html":{}}}],["apploading",{"_index":221,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SharedService.html":{}}}],["apploading(value",{"_index":218,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SharedService.html":{}}}],["apploadingmode",{"_index":225,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SharedService.html":{}}}],["apploadingmode(value",{"_index":223,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SharedService.html":{}}}],["appmodule",{"_index":143,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appoptions",{"_index":193,"title":{"interfaces/AppOptions.html":{}},"body":{"interfaces/AppOptions.html":{},"injectables/SharedService.html":{},"coverage.html":{}}}],["appoptionsobservable",{"_index":208,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SharedService.html":{}}}],["appoptionssubject",{"_index":207,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SharedService.html":{}}}],["apppage",{"_index":237,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":154,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["apptoolbarcomponent",{"_index":105,"title":{"components/AppToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"modules/SharedModule.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["archivos",{"_index":1505,"title":{},"body":{"index.html":{}}}],["arrancar",{"_index":1495,"title":{},"body":{"index.html":{}}}],["array",{"_index":1097,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"miscellaneous/functions.html":{}}}],["artefactos",{"_index":1511,"title":{},"body":{"index.html":{}}}],["asc",{"_index":1089,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["assume",{"_index":1085,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["attribute",{"_index":774,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["auto",{"_index":306,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{}}}],["autocomplete",{"_index":1287,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["automaticamente",{"_index":1501,"title":{},"body":{"index.html":{}}}],["available",{"_index":1525,"title":{},"body":{"modules.html":{}}}],["b",{"_index":1069,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"miscellaneous/functions.html":{}}}],["b.length",{"_index":1112,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["b.pageindex",{"_index":1116,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["b.pagesize",{"_index":1114,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["back.ddns.net",{"_index":370,"title":{},"body":{"classes/Consts.html":{}}}],["backend",{"_index":329,"title":{},"body":{"classes/Consts.html":{}}}],["bandera",{"_index":1517,"title":{},"body":{"index.html":{}}}],["bar",{"_index":863,"title":{},"body":{"components/LoginComponent.html":{},"modules/NotifierModule.html":{},"modules/SharedModule.html":{}}}],["bartitle",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["based",{"_index":1098,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"miscellaneous/functions.html":{}}}],["behaviorsubject",{"_index":199,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{},"injectables/SharedService.html":{}}}],["behaviorsubject(this.appdefaultoptions",{"_index":214,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SharedService.html":{}}}],["beta.27",{"_index":1449,"title":{},"body":{"dependencies.html":{}}}],["black",{"_index":940,"title":{},"body":{"components/NotifierComponent.html":{}}}],["boolean",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/DataWithCount.html":{},"components/LoginComponent.html":{},"injectables/ParseService.html":{},"interfaces/SelectValue.html":{},"injectables/SharedService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"modules/DataTableModule.html":{},"modules/NotifierModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["bottom",{"_index":728,"title":{},"body":{"components/FabButtonComponent.html":{},"classes/NotifierConfigModel.html":{},"miscellaneous/typealiases.html":{}}}],["bottomsheetref",{"_index":1232,"title":{},"body":{"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{}}}],["bottonsheet",{"_index":1325,"title":{},"body":{"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["break",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["browse",{"_index":1523,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":245,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1509,"title":{},"body":{"index.html":{}}}],["builder",{"_index":848,"title":{},"body":{"components/LoginComponent.html":{}}}],["builder.group",{"_index":865,"title":{},"body":{"components/LoginComponent.html":{}}}],["buildform",{"_index":737,"title":{},"body":{"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/SnifferFormComponent.html":{}}}],["buildform(builder",{"_index":846,"title":{},"body":{"components/LoginComponent.html":{}}}],["buildform(fb",{"_index":749,"title":{},"body":{"components/FilterByColumComponent.html":{},"components/SnifferFormComponent.html":{}}}],["buildquery",{"_index":738,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["buildsniffertokenform",{"_index":1339,"title":{},"body":{"injectables/SnifferTokenService.html":{}}}],["busque",{"_index":1379,"title":{},"body":{"guards/SniffersResolverService.html":{}}}],["busqueda",{"_index":822,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["button",{"_index":718,"title":{},"body":{"components/FabButtonComponent.html":{},"components/NotifierComponent.html":{}}}],["button'},{'name",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["button.component",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["button.component.html",{"_index":720,"title":{},"body":{"components/FabButtonComponent.html":{}}}],["button.component.scss",{"_index":719,"title":{},"body":{"components/FabButtonComponent.html":{}}}],["button.component.ts",{"_index":717,"title":{},"body":{"components/FabButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:12",{"_index":722,"title":{},"body":{"components/FabButtonComponent.html":{}}}],["button.component.ts:8",{"_index":721,"title":{},"body":{"components/FabButtonComponent.html":{}}}],["button/fab",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"components/FabButtonComponent.html":{},"coverage.html":{}}}],["c",{"_index":542,"title":{},"body":{"components/DataTableComponent.html":{}}}],["c.label",{"_index":819,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["cambio",{"_index":1503,"title":{},"body":{"index.html":{}}}],["cancel",{"_index":1223,"title":{},"body":{"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{}}}],["cancelar",{"_index":1272,"title":{},"body":{"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{}}}],["canshowtoolbar",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["case",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/FilterByColumComponent.html":{}}}],["catch",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catcherror",{"_index":639,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["catcherror(err",{"_index":701,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["cell",{"_index":553,"title":{},"body":{"components/DataTableComponent.html":{}}}],["center",{"_index":958,"title":{},"body":{"classes/NotifierConfigModel.html":{},"miscellaneous/typealiases.html":{}}}],["changelog",{"_index":1404,"title":{"changelog.html":{}},"body":{}}],["changes",{"_index":459,"title":{},"body":{"components/DataTableComponent.html":{}}}],["changes.query.currentvalue",{"_index":515,"title":{},"body":{"components/DataTableComponent.html":{}}}],["class",{"_index":71,"title":{"classes/AppPage.html":{},"classes/Consts.html":{},"classes/DataClass.html":{},"classes/GenericClass.html":{},"classes/NotifierConfigModel.html":{},"classes/SimpleDataSource.html":{},"classes/SnifferClass.html":{},"classes/Texts.html":{},"classes/TokenClass.html":{},"classes/UserClass.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"classes/Consts.html":{},"classes/DataClass.html":{},"components/DataTableComponent.html":{},"modules/DataTableModule.html":{},"injectables/DataTableService.html":{},"interfaces/DataWithCount.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"classes/GenericClass.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"classes/NotifierConfigModel.html":{},"modules/NotifierModule.html":{},"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"classes/SimpleDataSource.html":{},"classes/SnifferClass.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferFormComponent.html":{},"injectables/SnifferService.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"injectables/SnifferTokenService.html":{},"components/SniffersListComponent.html":{},"guards/SniffersResolverService.html":{},"classes/Texts.html":{},"classes/TokenClass.html":{},"guards/TokensResolverService.html":{},"classes/UserClass.html":{},"coverage.html":{}}}],["class.ts",{"_index":403,"title":{},"body":{"classes/DataClass.html":{},"classes/GenericClass.html":{},"classes/SnifferClass.html":{},"classes/TokenClass.html":{},"classes/UserClass.html":{},"coverage.html":{}}}],["class.ts:10",{"_index":1194,"title":{},"body":{"classes/SnifferClass.html":{},"classes/TokenClass.html":{}}}],["class.ts:12",{"_index":1192,"title":{},"body":{"classes/SnifferClass.html":{}}}],["class.ts:14",{"_index":1191,"title":{},"body":{"classes/SnifferClass.html":{}}}],["class.ts:3",{"_index":831,"title":{},"body":{"classes/GenericClass.html":{}}}],["class.ts:4",{"_index":832,"title":{},"body":{"classes/GenericClass.html":{}}}],["class.ts:5",{"_index":410,"title":{},"body":{"classes/DataClass.html":{},"classes/GenericClass.html":{},"classes/TokenClass.html":{},"classes/UserClass.html":{}}}],["class.ts:6",{"_index":830,"title":{},"body":{"classes/GenericClass.html":{},"classes/UserClass.html":{}}}],["class.ts:7",{"_index":1394,"title":{},"body":{"classes/TokenClass.html":{},"classes/UserClass.html":{}}}],["class.ts:8",{"_index":1193,"title":{},"body":{"classes/SnifferClass.html":{},"classes/TokenClass.html":{},"classes/UserClass.html":{}}}],["class.ts:9",{"_index":1393,"title":{},"body":{"classes/TokenClass.html":{}}}],["classes",{"_index":238,"title":{},"body":{"classes/AppPage.html":{},"classes/Consts.html":{},"classes/DataClass.html":{},"classes/GenericClass.html":{},"classes/NotifierConfigModel.html":{},"classes/SimpleDataSource.html":{},"classes/SnifferClass.html":{},"classes/Texts.html":{},"classes/TokenClass.html":{},"classes/UserClass.html":{},"overview.html":{}}}],["classname",{"_index":406,"title":{},"body":{"classes/DataClass.html":{},"interfaces/DataWithCount.html":{},"components/FilterByColumComponent.html":{},"injectables/ParseService.html":{},"classes/SnifferClass.html":{},"classes/TokenClass.html":{}}}],["clave",{"_index":805,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["cli",{"_index":1487,"title":{},"body":{"index.html":{}}}],["click",{"_index":1318,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["close",{"_index":914,"title":{},"body":{"components/NotifierComponent.html":{}}}],["cloud_function",{"_index":312,"title":{},"body":{"classes/Consts.html":{}}}],["cluster_appmodule",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_datatablemodule",{"_index":558,"title":{},"body":{"modules/DataTableModule.html":{},"overview.html":{}}}],["cluster_datatablemodule_declarations",{"_index":559,"title":{},"body":{"modules/DataTableModule.html":{},"overview.html":{}}}],["cluster_datatablemodule_exports",{"_index":560,"title":{},"body":{"modules/DataTableModule.html":{},"overview.html":{}}}],["cluster_datatablemodule_providers",{"_index":561,"title":{},"body":{"modules/DataTableModule.html":{},"overview.html":{}}}],["cluster_notifiermodule",{"_index":962,"title":{},"body":{"modules/NotifierModule.html":{},"overview.html":{}}}],["cluster_notifiermodule_declarations",{"_index":963,"title":{},"body":{"modules/NotifierModule.html":{},"overview.html":{}}}],["cluster_notifiermodule_providers",{"_index":964,"title":{},"body":{"modules/NotifierModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1147,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1148,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1150,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":1149,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_sharedmodule_providers",{"_index":1151,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["codigo",{"_index":1506,"title":{},"body":{"index.html":{}}}],["collectionviewer",{"_index":1054,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["color",{"_index":939,"title":{},"body":{"components/NotifierComponent.html":{}}}],["colum",{"_index":731,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["colum'},{'name",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["colum.component",{"_index":588,"title":{},"body":{"modules/DataTableModule.html":{}}}],["colum.component.html",{"_index":733,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["colum.component.scss",{"_index":732,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["colum.component.ts",{"_index":730,"title":{},"body":{"components/FilterByColumComponent.html":{},"coverage.html":{}}}],["colum.component.ts:114",{"_index":752,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["colum.component.ts:17",{"_index":747,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["colum.component.ts:21",{"_index":764,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["colum.component.ts:28",{"_index":748,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["colum.component.ts:31",{"_index":759,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["colum.component.ts:33",{"_index":762,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["colum.component.ts:35",{"_index":761,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["colum.component.ts:36",{"_index":763,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["colum.component.ts:38",{"_index":745,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["colum.component.ts:42",{"_index":755,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["colum.component.ts:47",{"_index":750,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["colum.component.ts:55",{"_index":751,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["colum.component.ts:70",{"_index":756,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["colum.component.ts:86",{"_index":754,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["colum.component.ts:97",{"_index":758,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["colum/filter",{"_index":587,"title":{},"body":{"modules/DataTableModule.html":{},"components/FilterByColumComponent.html":{},"coverage.html":{}}}],["colum/filterbycolumnmodels.ts",{"_index":1141,"title":{},"body":{"interfaces/SelectValue.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["column",{"_index":936,"title":{},"body":{"components/NotifierComponent.html":{}}}],["columna",{"_index":818,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["columns",{"_index":439,"title":{},"body":{"components/DataTableComponent.html":{},"components/SniffersListComponent.html":{}}}],["columns_name",{"_index":318,"title":{},"body":{"classes/Consts.html":{}}}],["columntype",{"_index":734,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["colums",{"_index":735,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["comando",{"_index":1493,"title":{},"body":{"index.html":{}}}],["combinelatest",{"_index":1056,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["commonmodule",{"_index":565,"title":{},"body":{"modules/DataTableModule.html":{},"modules/NotifierModule.html":{},"modules/SharedModule.html":{}}}],["compilación",{"_index":1508,"title":{},"body":{"index.html":{}}}],["compilar",{"_index":1510,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"classes/NotifierConfigModel.html":{},"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["component_template",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{},"overview.html":{}}}],["components/fab",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["components/toolbar/app",{"_index":1161,"title":{},"body":{"modules/SharedModule.html":{}}}],["componenttype",{"_index":946,"title":{},"body":{"classes/NotifierConfigModel.html":{}}}],["con",{"_index":1367,"title":{},"body":{"components/SniffersListComponent.html":{},"index.html":{}}}],["concat",{"_index":1057,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["conf",{"_index":995,"title":{},"body":{"injectables/NotifierService.html":{}}}],["conf.duration",{"_index":1012,"title":{},"body":{"injectables/NotifierService.html":{}}}],["conf.horizontalposition",{"_index":1014,"title":{},"body":{"injectables/NotifierService.html":{}}}],["conf.text",{"_index":1007,"title":{},"body":{"injectables/NotifierService.html":{}}}],["conf.type",{"_index":1017,"title":{},"body":{"injectables/NotifierService.html":{}}}],["conf.verticalposition",{"_index":1015,"title":{},"body":{"injectables/NotifierService.html":{}}}],["config",{"_index":379,"title":{},"body":{"classes/Consts.html":{},"components/DataTableComponent.html":{},"classes/SnifferClass.html":{}}}],["configuración",{"_index":380,"title":{},"body":{"classes/Consts.html":{},"components/SnifferFormComponent.html":{}}}],["connect",{"_index":1184,"title":{},"body":{"classes/SimpleDataSource.html":{}}}],["connect(collectionviewer",{"_index":1065,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["conpilacion",{"_index":1512,"title":{},"body":{"index.html":{}}}],["console.log($event",{"_index":519,"title":{},"body":{"components/DataTableComponent.html":{}}}],["console.log('sheet",{"_index":1335,"title":{},"body":{"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["console.log(changes",{"_index":514,"title":{},"body":{"components/DataTableComponent.html":{}}}],["console.log(changes.query.currentvalue",{"_index":516,"title":{},"body":{"components/DataTableComponent.html":{}}}],["console.log(control",{"_index":1305,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["console.log(err",{"_index":874,"title":{},"body":{"components/LoginComponent.html":{},"components/SnifferFormComponent.html":{}}}],["console.log(object",{"_index":1267,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["console.log(query",{"_index":502,"title":{},"body":{"components/DataTableComponent.html":{},"components/FilterByColumComponent.html":{}}}],["console.log(res",{"_index":528,"title":{},"body":{"components/DataTableComponent.html":{},"interfaces/DataWithCount.html":{},"components/FilterByColumComponent.html":{},"injectables/ParseService.html":{},"components/SnifferFormComponent.html":{},"injectables/SnifferTokenService.html":{}}}],["console.log(res.data",{"_index":531,"title":{},"body":{"components/DataTableComponent.html":{}}}],["console.log(response",{"_index":870,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(route.data",{"_index":1216,"title":{},"body":{"guards/SnifferDataResolverService.html":{},"guards/SniffersResolverService.html":{},"guards/TokensResolverService.html":{}}}],["console.log(schematype",{"_index":814,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["console.log(sort",{"_index":1095,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["console.log(this.data",{"_index":1331,"title":{},"body":{"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["console.log(this.form.value",{"_index":868,"title":{},"body":{"components/LoginComponent.html":{},"components/SnifferTokenFormComponent.html":{}}}],["console.log(this.pageevent.pagesize",{"_index":538,"title":{},"body":{"components/DataTableComponent.html":{}}}],["console.log(this.query",{"_index":777,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["const",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"modules/AppRoutingModule.html":{},"classes/Consts.html":{},"modules/DataTableModule.html":{},"interfaces/DataWithCount.html":{},"components/FilterByColumComponent.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"classes/SimpleDataSource.html":{},"components/SnifferFormComponent.html":{},"injectables/SnifferTokenService.html":{},"guards/SniffersResolverService.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"injectables/DataTableService.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"injectables/SharedService.html":{},"classes/SimpleDataSource.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferFormComponent.html":{},"injectables/SnifferService.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"injectables/SnifferTokenService.html":{},"components/SniffersListComponent.html":{},"guards/SniffersResolverService.html":{},"guards/TokensResolverService.html":{}}}],["constructor(@inject(mat_snack_bar_data",{"_index":927,"title":{},"body":{"components/NotifierComponent.html":{}}}],["constructor(bottomsheetref",{"_index":1229,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["constructor(data",{"_index":915,"title":{},"body":{"components/NotifierComponent.html":{}}}],["constructor(fb",{"_index":743,"title":{},"body":{"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{}}}],["constructor(parse",{"_index":442,"title":{},"body":{"components/DataTableComponent.html":{},"guards/LoginResolverService.html":{},"guards/SnifferDataResolverService.html":{},"injectables/SnifferTokenService.html":{},"guards/SniffersResolverService.html":{}}}],["constructor(private",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"interfaces/DataWithCount.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"injectables/SharedService.html":{},"classes/SimpleDataSource.html":{},"components/SnifferDataListComponent.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"injectables/SnifferTokenService.html":{},"components/SniffersListComponent.html":{},"guards/SniffersResolverService.html":{}}}],["constructor(route",{"_index":1207,"title":{},"body":{"components/SnifferDataListComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["constructor(router",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/ParseService.html":{},"injectables/SharedService.html":{}}}],["constructor(rows",{"_index":1186,"title":{},"body":{"classes/SimpleDataSource.html":{}}}],["constructor(service",{"_index":1281,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["constructor(shared",{"_index":286,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["constructor(snackbar",{"_index":987,"title":{},"body":{"injectables/NotifierService.html":{}}}],["consts",{"_index":307,"title":{"classes/Consts.html":{}},"body":{"classes/Consts.html":{},"interfaces/DataWithCount.html":{},"components/FilterByColumComponent.html":{},"injectables/ParseService.html":{},"components/SnifferFormComponent.html":{},"coverage.html":{}}}],["consts.columns_name",{"_index":797,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["consts.parseconf.serverurl",{"_index":649,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["consts.public_acl",{"_index":1260,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["contacts",{"_index":302,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["contaier",{"_index":934,"title":{},"body":{"components/NotifierComponent.html":{}}}],["container",{"_index":549,"title":{},"body":{"components/DataTableComponent.html":{}}}],["content",{"_index":248,"title":{},"body":{"classes/AppPage.html":{},"components/NotifierComponent.html":{}}}],["context",{"_index":1439,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contextpathtitle",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["continue",{"_index":236,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SharedService.html":{}}}],["contraseña",{"_index":858,"title":{},"body":{"components/LoginComponent.html":{}}}],["control",{"_index":233,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SharedService.html":{},"components/SnifferTokenFormComponent.html":{}}}],["control.valuechanges.pipe",{"_index":1306,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["controls",{"_index":1109,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["copy",{"_index":1102,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["copy.sort(sortfn",{"_index":1104,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["copy.splice(startindex",{"_index":1140,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["corre",{"_index":1492,"title":{},"body":{"index.html":{}}}],["correo",{"_index":397,"title":{},"body":{"classes/Consts.html":{}}}],["count",{"_index":635,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["count(query",{"_index":687,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["coverage",{"_index":1405,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creación",{"_index":385,"title":{},"body":{"classes/Consts.html":{}}}],["create",{"_index":1224,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["createby",{"_index":1392,"title":{},"body":{"classes/TokenClass.html":{}}}],["created",{"_index":977,"title":{},"body":{"injectables/NotifierService.html":{}}}],["created_at",{"_index":407,"title":{},"body":{"classes/DataClass.html":{},"classes/GenericClass.html":{},"classes/SnifferClass.html":{},"classes/TokenClass.html":{},"classes/UserClass.html":{}}}],["created_by",{"_index":833,"title":{},"body":{"classes/GenericClass.html":{},"classes/TokenClass.html":{}}}],["createdat",{"_index":384,"title":{},"body":{"classes/Consts.html":{},"classes/DataClass.html":{},"classes/GenericClass.html":{},"classes/SnifferClass.html":{},"classes/TokenClass.html":{},"classes/UserClass.html":{}}}],["createdby",{"_index":834,"title":{},"body":{"classes/GenericClass.html":{}}}],["createerror",{"_index":978,"title":{},"body":{"injectables/NotifierService.html":{}}}],["createobject",{"_index":1026,"title":{},"body":{"injectables/ParseService.html":{}}}],["createobject(data",{"_index":678,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["createobjectwithoutdata",{"_index":1027,"title":{},"body":{"injectables/ParseService.html":{}}}],["createobjectwithoutdata(id",{"_index":668,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["creates",{"_index":1091,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"miscellaneous/functions.html":{}}}],["currentroute",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["currentroute.children",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["currentroute.snapshot.data.title",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["dar",{"_index":1317,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["data",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"classes/DataClass.html":{},"components/DataTableComponent.html":{},"modules/DataTableModule.html":{},"interfaces/DataWithCount.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"modules/SharedModule.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{},"coverage.html":{}}}],["data)).pipe(catcherror(err",{"_index":677,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["data.active",{"_index":680,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["data.interface",{"_index":1248,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["data.interface.ts",{"_index":715,"title":{},"body":{"interfaces/DialogDataInterface.html":{},"coverage.html":{}}}],["data.text",{"_index":929,"title":{},"body":{"components/NotifierComponent.html":{}}}],["data.type",{"_index":931,"title":{},"body":{"components/NotifierComponent.html":{}}}],["data/detail/:id",{"_index":268,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["data/sniffer",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"coverage.html":{}}}],["dataclass",{"_index":401,"title":{"classes/DataClass.html":{}},"body":{"classes/DataClass.html":{},"guards/SnifferDataResolverService.html":{},"coverage.html":{}}}],["datasource",{"_index":426,"title":{},"body":{"components/DataTableComponent.html":{},"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["datatablecomponent",{"_index":107,"title":{"components/DataTableComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"modules/DataTableModule.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datatablemodule",{"_index":557,"title":{"modules/DataTableModule.html":{}},"body":{"modules/DataTableModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["datatableservice",{"_index":562,"title":{"injectables/DataTableService.html":{}},"body":{"modules/DataTableModule.html":{},"injectables/DataTableService.html":{},"coverage.html":{},"overview.html":{}}}],["datatoupdate",{"_index":232,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SharedService.html":{}}}],["datawithcount",{"_index":633,"title":{"interfaces/DataWithCount.html":{}},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{},"coverage.html":{}}}],["date",{"_index":1143,"title":{},"body":{"interfaces/SelectValue.html":{},"miscellaneous/enumerations.html":{}}}],["datea11ylabel",{"_index":621,"title":{},"body":{"modules/DataTableModule.html":{},"miscellaneous/variables.html":{}}}],["dateadapter",{"_index":605,"title":{},"body":{"modules/DataTableModule.html":{}}}],["dateinput",{"_index":615,"title":{},"body":{"modules/DataTableModule.html":{},"miscellaneous/variables.html":{}}}],["datos",{"_index":267,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"index.html":{}}}],["dd",{"_index":618,"title":{},"body":{"modules/DataTableModule.html":{},"miscellaneous/variables.html":{}}}],["de",{"_index":266,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Consts.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/SniffersListComponent.html":{},"index.html":{}}}],["debouncetime",{"_index":494,"title":{},"body":{"components/DataTableComponent.html":{},"components/SnifferTokenFormComponent.html":{},"injectables/SnifferTokenService.html":{}}}],["debouncetime(400",{"_index":1311,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["declaration",{"_index":1168,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/DataTableModule.html":{},"modules/NotifierModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["decorators",{"_index":477,"title":{},"body":{"components/DataTableComponent.html":{},"components/SnifferFormComponent.html":{}}}],["decorators.util",{"_index":1196,"title":{},"body":{"classes/SnifferClass.html":{}}}],["default",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"classes/Consts.html":{},"classes/DataClass.html":{},"components/DataTableComponent.html":{},"components/FilterByColumComponent.html":{},"classes/GenericClass.html":{},"components/LoginComponent.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"injectables/SharedService.html":{},"classes/SimpleDataSource.html":{},"classes/SnifferClass.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"classes/TokenClass.html":{},"classes/UserClass.html":{},"miscellaneous/variables.html":{}}}],["defaultifempty",{"_index":640,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["defaultlimit",{"_index":661,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["defaultsort",{"_index":1419,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["defaultsort((a",{"_index":1088,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["defaultsort(a",{"_index":1068,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"miscellaneous/functions.html":{}}}],["defer",{"_index":1058,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["defined",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AppToolbarComponent.html":{},"classes/Consts.html":{},"classes/DataClass.html":{},"components/DataTableComponent.html":{},"injectables/DataTableService.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"classes/GenericClass.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"classes/NotifierConfigModel.html":{},"modules/NotifierModule.html":{},"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"classes/SimpleDataSource.html":{},"classes/SnifferClass.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferFormComponent.html":{},"injectables/SnifferService.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"injectables/SnifferTokenService.html":{},"components/SniffersListComponent.html":{},"guards/SniffersResolverService.html":{},"classes/Texts.html":{},"classes/TokenClass.html":{},"guards/TokensResolverService.html":{},"classes/UserClass.html":{}}}],["delay",{"_index":1397,"title":{},"body":{"guards/TokensResolverService.html":{}}}],["dependencies",{"_index":145,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DataTableModule.html":{},"modules/NotifierModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":628,"title":{},"body":{"modules/DataTableModule.html":{}}}],["desarrollo",{"_index":1491,"title":{},"body":{"index.html":{}}}],["desplegar",{"_index":1314,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["detail",{"_index":270,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SnifferDataDetailComponent.html":{}}}],["detail'},{'name",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["detail.component",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["detail.component.html",{"_index":1201,"title":{},"body":{"components/SnifferDataDetailComponent.html":{}}}],["detail.component.scss",{"_index":1200,"title":{},"body":{"components/SnifferDataDetailComponent.html":{}}}],["detail.component.ts",{"_index":1199,"title":{},"body":{"components/SnifferDataDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:12",{"_index":1203,"title":{},"body":{"components/SnifferDataDetailComponent.html":{}}}],["detail.component.ts:8",{"_index":1202,"title":{},"body":{"components/SnifferDataDetailComponent.html":{}}}],["detail/sniffer",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SnifferDataDetailComponent.html":{},"coverage.html":{}}}],["details",{"_index":708,"title":{},"body":{"components/DetailsComponent.html":{}}}],["details'},{'name",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["details.component.html",{"_index":710,"title":{},"body":{"components/DetailsComponent.html":{}}}],["details.component.scss",{"_index":709,"title":{},"body":{"components/DetailsComponent.html":{}}}],["details/details.component",{"_index":567,"title":{},"body":{"modules/DataTableModule.html":{}}}],["detailscomponent",{"_index":110,"title":{"components/DetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"modules/DataTableModule.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["detalles",{"_index":269,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["dialogdatainterface",{"_index":713,"title":{"interfaces/DialogDataInterface.html":{}},"body":{"interfaces/DialogDataInterface.html":{},"components/SnifferFormComponent.html":{},"coverage.html":{}}}],["direction",{"_index":935,"title":{},"body":{"components/NotifierComponent.html":{},"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["directive",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["directives",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["directorio",{"_index":1514,"title":{},"body":{"index.html":{}}}],["dirty",{"_index":235,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SharedService.html":{}}}],["disableclose",{"_index":1333,"title":{},"body":{"components/SnifferTokenListComponent.html":{}}}],["disconnect",{"_index":1185,"title":{},"body":{"classes/SimpleDataSource.html":{}}}],["disconnect(collectionviewer",{"_index":1067,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["dismiss",{"_index":1336,"title":{},"body":{"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["display",{"_index":619,"title":{},"body":{"modules/DataTableModule.html":{},"components/NotifierComponent.html":{},"miscellaneous/variables.html":{}}}],["displayautocomplete",{"_index":1279,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["displayautocomplete(element",{"_index":1285,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["disponibles",{"_index":1369,"title":{},"body":{"components/SniffersListComponent.html":{}}}],["dist",{"_index":1515,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":1059,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["distinctuntilchanged(isequalpageevents",{"_index":1124,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["docs",{"_index":610,"title":{},"body":{"modules/DataTableModule.html":{}}}],["documentation",{"_index":1406,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["don't",{"_index":337,"title":{},"body":{"classes/Consts.html":{}}}],["duration",{"_index":943,"title":{},"body":{"classes/NotifierConfigModel.html":{},"injectables/NotifierService.html":{}}}],["dynamic",{"_index":1451,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e2e/src/app.po.ts",{"_index":239,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":243,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":242,"title":{},"body":{"classes/AppPage.html":{}}}],["easily",{"_index":300,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["el",{"_index":820,"title":{},"body":{"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"injectables/NotifierService.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"index.html":{}}}],["electrónico",{"_index":398,"title":{},"body":{"classes/Consts.html":{}}}],["element",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["element(by.css('app",{"_index":247,"title":{},"body":{"classes/AppPage.html":{}}}],["element.attributes[c",{"_index":543,"title":{},"body":{"components/DataTableComponent.html":{}}}],["element.label",{"_index":1304,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["email",{"_index":396,"title":{},"body":{"classes/Consts.html":{},"classes/UserClass.html":{}}}],["emailexpression",{"_index":344,"title":{},"body":{"classes/Consts.html":{}}}],["emitevent",{"_index":782,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["en",{"_index":1319,"title":{},"body":{"components/SnifferTokenFormComponent.html":{},"components/SniffersListComponent.html":{},"index.html":{}}}],["encontrada",{"_index":905,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["encontrar",{"_index":1364,"title":{},"body":{"components/SniffersListComponent.html":{}}}],["end",{"_index":938,"title":{},"body":{"components/NotifierComponent.html":{},"classes/NotifierConfigModel.html":{},"miscellaneous/typealiases.html":{}}}],["entrycomponents",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/NotifierModule.html":{}}}],["enum",{"_index":1142,"title":{},"body":{"interfaces/SelectValue.html":{}}}],["enumerations",{"_index":1467,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enviroment",{"_index":342,"title":{},"body":{"classes/Consts.html":{}}}],["environment",{"_index":1436,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":873,"title":{},"body":{"components/LoginComponent.html":{},"injectables/ParseService.html":{},"components/SnifferFormComponent.html":{}}}],["err.code",{"_index":704,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["error",{"_index":801,"title":{},"body":{"components/FilterByColumComponent.html":{},"classes/NotifierConfigModel.html":{},"injectables/NotifierService.html":{},"miscellaneous/typealiases.html":{}}}],["error('es",{"_index":1008,"title":{},"body":{"injectables/NotifierService.html":{}}}],["error(`unknown",{"_index":1083,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["es",{"_index":823,"title":{},"body":{"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{}}}],["esquema",{"_index":806,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["esta",{"_index":1360,"title":{},"body":{"components/SniffersListComponent.html":{}}}],["este",{"_index":1483,"title":{},"body":{"index.html":{}}}],["event",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/DataTableComponent.html":{}}}],["event.pageindex",{"_index":523,"title":{},"body":{"components/DataTableComponent.html":{}}}],["event.pagesize",{"_index":522,"title":{},"body":{"components/DataTableComponent.html":{}}}],["eventemitter",{"_index":448,"title":{},"body":{"components/DataTableComponent.html":{},"components/FilterByColumComponent.html":{}}}],["events",{"_index":1099,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"miscellaneous/functions.html":{}}}],["exceptions",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["exceptions.includes(event.url",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["exit",{"_index":283,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["expiración",{"_index":392,"title":{},"body":{"classes/Consts.html":{}}}],["expiry",{"_index":391,"title":{},"body":{"classes/Consts.html":{},"classes/TokenClass.html":{}}}],["export",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"classes/Consts.html":{},"classes/DataClass.html":{},"components/DataTableComponent.html":{},"modules/DataTableModule.html":{},"injectables/DataTableService.html":{},"interfaces/DataWithCount.html":{},"components/DetailsComponent.html":{},"interfaces/DialogDataInterface.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"classes/GenericClass.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"classes/NotifierConfigModel.html":{},"modules/NotifierModule.html":{},"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"interfaces/SelectValue.html":{},"interfaces/SelectValueModel.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"classes/SimpleDataSource.html":{},"classes/SnifferClass.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferFormComponent.html":{},"injectables/SnifferService.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"injectables/SnifferTokenService.html":{},"components/SniffersListComponent.html":{},"guards/SniffersResolverService.html":{},"classes/Texts.html":{},"classes/TokenClass.html":{},"guards/TokensResolverService.html":{},"classes/UserClass.html":{}}}],["exports",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataTableModule.html":{},"modules/NotifierModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["extends",{"_index":404,"title":{},"body":{"classes/DataClass.html":{},"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"classes/SnifferClass.html":{},"classes/TokenClass.html":{},"classes/UserClass.html":{}}}],["fab",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["fabbuttoncomponent",{"_index":112,"title":{"components/FabButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["false",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/DataTableComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/SnifferTokenFormComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":746,"title":{},"body":{"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"injectables/SnifferTokenService.html":{}}}],["fb.group",{"_index":772,"title":{},"body":{"components/FilterByColumComponent.html":{},"components/SnifferFormComponent.html":{}}}],["fecha",{"_index":382,"title":{},"body":{"classes/Consts.html":{},"components/FilterByColumComponent.html":{}}}],["fechdata",{"_index":1225,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["fetch",{"_index":1028,"title":{},"body":{"injectables/ParseService.html":{}}}],["fetch(ob",{"_index":682,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["field",{"_index":572,"title":{},"body":{"modules/DataTableModule.html":{},"modules/SharedModule.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"classes/Consts.html":{},"classes/DataClass.html":{},"components/DataTableComponent.html":{},"modules/DataTableModule.html":{},"injectables/DataTableService.html":{},"interfaces/DataWithCount.html":{},"components/DetailsComponent.html":{},"interfaces/DialogDataInterface.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"classes/GenericClass.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"classes/NotifierConfigModel.html":{},"modules/NotifierModule.html":{},"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"interfaces/SelectValue.html":{},"interfaces/SelectValueModel.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"classes/SimpleDataSource.html":{},"classes/SnifferClass.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferFormComponent.html":{},"injectables/SnifferService.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"injectables/SnifferTokenService.html":{},"components/SniffersListComponent.html":{},"guards/SniffersResolverService.html":{},"classes/Texts.html":{},"classes/TokenClass.html":{},"guards/TokensResolverService.html":{},"classes/UserClass.html":{},"coverage.html":{}}}],["filter",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"modules/DataTableModule.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["filter_columns",{"_index":322,"title":{},"body":{"classes/Consts.html":{}}}],["filterapplicationlist",{"_index":1280,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["filterapplicationlist(control",{"_index":1288,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["filterapplicationlistcallback",{"_index":1340,"title":{},"body":{"injectables/SnifferTokenService.html":{}}}],["filterapplicationlistcallback(value",{"_index":1343,"title":{},"body":{"injectables/SnifferTokenService.html":{}}}],["filterbycolumcomponent",{"_index":115,"title":{"components/FilterByColumComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"modules/DataTableModule.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filterbycolumnmodels",{"_index":768,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["filtercolumntype",{"_index":753,"title":{},"body":{"components/FilterByColumComponent.html":{},"interfaces/SelectValue.html":{},"miscellaneous/enumerations.html":{}}}],["filtercolumntype.boolean",{"_index":817,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["filtercolumntype.date",{"_index":816,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["filtercolumntype.object",{"_index":815,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["filtercolumntype.text",{"_index":812,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["filteredlelist",{"_index":1277,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["filtrar",{"_index":826,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["filtros",{"_index":828,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["findbyquery",{"_index":434,"title":{},"body":{"components/DataTableComponent.html":{},"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["findbyquery(query",{"_index":450,"title":{},"body":{"components/DataTableComponent.html":{}}}],["finddata",{"_index":435,"title":{},"body":{"components/DataTableComponent.html":{},"guards/SniffersResolverService.html":{}}}],["finddata(undefined",{"_index":453,"title":{},"body":{"components/DataTableComponent.html":{}}}],["findfirstbyquery",{"_index":672,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["findwithcount",{"_index":1029,"title":{},"body":{"injectables/ParseService.html":{}}}],["findwithcount(query",{"_index":689,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["firstpagelabel",{"_index":1389,"title":{},"body":{"classes/Texts.html":{}}}],["fixed",{"_index":725,"title":{},"body":{"components/FabButtonComponent.html":{}}}],["flatmap",{"_index":495,"title":{},"body":{"components/DataTableComponent.html":{}}}],["flex",{"_index":304,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/NotifierComponent.html":{}}}],["flexlayoutmodule",{"_index":1154,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["flexmodule",{"_index":591,"title":{},"body":{"modules/DataTableModule.html":{}}}],["fontface",{"_index":1459,"title":{},"body":{"dependencies.html":{}}}],["forget",{"_index":338,"title":{},"body":{"classes/Consts.html":{}}}],["forkjoin",{"_index":636,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["forkjoin(observables).pipe",{"_index":697,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["form",{"_index":230,"title":{},"body":{"interfaces/AppOptions.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"injectables/SharedService.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{}}}],["form'},{'name",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["form.component",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["form.component.html",{"_index":1222,"title":{},"body":{"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{}}}],["form.component.scss",{"_index":1221,"title":{},"body":{"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{}}}],["form.component.ts",{"_index":1220,"title":{},"body":{"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:18",{"_index":1245,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["form.component.ts:19",{"_index":1231,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["form.component.ts:21",{"_index":1294,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["form.component.ts:22",{"_index":1244,"title":{},"body":{"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{}}}],["form.component.ts:24",{"_index":1292,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["form.component.ts:26",{"_index":1282,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["form.component.ts:33",{"_index":1238,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["form.component.ts:35",{"_index":1291,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["form.component.ts:37",{"_index":1235,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["form.component.ts:41",{"_index":1233,"title":{},"body":{"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{}}}],["form.component.ts:45",{"_index":1284,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["form.component.ts:52",{"_index":1236,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["form.component.ts:63",{"_index":1286,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["form.component.ts:65",{"_index":1242,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["form.component.ts:71",{"_index":1234,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["form.component.ts:72",{"_index":1290,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["form.component.ts:80",{"_index":1241,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["form.component.ts:85",{"_index":1239,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["form.component.ts:89",{"_index":1237,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["form.controls",{"_index":234,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SharedService.html":{}}}],["form/sniffer",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{},"coverage.html":{}}}],["formats",{"_index":612,"title":{},"body":{"modules/DataTableModule.html":{}}}],["formbuilder",{"_index":744,"title":{},"body":{"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"injectables/SnifferTokenService.html":{}}}],["formcontrol",{"_index":1289,"title":{},"body":{"components/SnifferTokenFormComponent.html":{},"injectables/SnifferTokenService.html":{}}}],["formfield",{"_index":840,"title":{},"body":{"components/LoginComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{}}}],["formgroup",{"_index":204,"title":{},"body":{"interfaces/AppOptions.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"injectables/SharedService.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"injectables/SnifferTokenService.html":{}}}],["formsmodule",{"_index":589,"title":{},"body":{"modules/DataTableModule.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["forroot",{"_index":966,"title":{},"body":{"modules/NotifierModule.html":{},"modules/SharedModule.html":{}}}],["found",{"_index":899,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found'},{'name",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["found.component",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.html",{"_index":901,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":900,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":898,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":903,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":902,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["from(ob.fetchwithinclude(includes",{"_index":684,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["from(ob.save()).pipe(catcherror(err",{"_index":667,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["from(parse.cloud.run(name",{"_index":676,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["from(parse.user.login(username",{"_index":652,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["from(query.count()).pipe(catcherror(err",{"_index":688,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["from(query.find()).pipe(catcherror(err",{"_index":663,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["from(query.first()).pipe(catcherror(err",{"_index":673,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["from(query.get(id)).pipe(catcherror(err",{"_index":658,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["frommatpaginator",{"_index":489,"title":{},"body":{"components/DataTableComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["frommatpaginator(p))).pipe",{"_index":1123,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["frommatpaginator(pager",{"_index":1133,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"miscellaneous/functions.html":{}}}],["frommatpaginators(pagers",{"_index":1117,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["frommatsort",{"_index":490,"title":{},"body":{"components/DataTableComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["frommatsort(sort",{"_index":1094,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"miscellaneous/functions.html":{}}}],["frontend",{"_index":1478,"title":{},"body":{"index.html":{}}}],["fue",{"_index":1484,"title":{},"body":{"index.html":{}}}],["fuente",{"_index":1507,"title":{},"body":{"index.html":{}}}],["full",{"_index":273,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["funcion",{"_index":1377,"title":{},"body":{"guards/SniffersResolverService.html":{}}}],["function",{"_index":974,"title":{},"body":{"modules/NotifierModule.html":{},"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":1469,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generado",{"_index":1485,"title":{},"body":{"index.html":{}}}],["generic",{"_index":416,"title":{},"body":{"classes/DataClass.html":{},"classes/SnifferClass.html":{},"classes/TokenClass.html":{},"classes/UserClass.html":{}}}],["genericclass",{"_index":405,"title":{"classes/GenericClass.html":{}},"body":{"classes/DataClass.html":{},"classes/GenericClass.html":{},"classes/SnifferClass.html":{},"classes/TokenClass.html":{},"classes/UserClass.html":{},"coverage.html":{}}}],["genericclass:3",{"_index":413,"title":{},"body":{"classes/DataClass.html":{},"classes/SnifferClass.html":{},"classes/TokenClass.html":{},"classes/UserClass.html":{}}}],["genericclass:4",{"_index":415,"title":{},"body":{"classes/DataClass.html":{},"classes/SnifferClass.html":{},"classes/TokenClass.html":{},"classes/UserClass.html":{}}}],["genericclass:5",{"_index":414,"title":{},"body":{"classes/DataClass.html":{},"classes/SnifferClass.html":{},"classes/TokenClass.html":{},"classes/UserClass.html":{}}}],["genericclass:6",{"_index":412,"title":{},"body":{"classes/DataClass.html":{},"classes/SnifferClass.html":{},"classes/TokenClass.html":{},"classes/UserClass.html":{}}}],["genericerror",{"_index":979,"title":{},"body":{"injectables/NotifierService.html":{}}}],["getapploading",{"_index":1176,"title":{},"body":{"injectables/SharedService.html":{}}}],["getapploadingmode",{"_index":1180,"title":{},"body":{"injectables/SharedService.html":{}}}],["getcolumns_name",{"_index":365,"title":{},"body":{"classes/Consts.html":{}}}],["getcolumtype",{"_index":739,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["getobjectbyidwithquery",{"_index":657,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["getpublic_acl",{"_index":363,"title":{},"body":{"classes/Consts.html":{}}}],["getschema",{"_index":740,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["getting",{"_index":1402,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettitletext",{"_index":240,"title":{},"body":{"classes/AppPage.html":{}}}],["getuser",{"_index":655,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["grado",{"_index":1482,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1524,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":885,"title":{"guards/LoginResolverService.html":{},"guards/SnifferDataResolverService.html":{},"guards/SniffersResolverService.html":{},"guards/TokensResolverService.html":{}},"body":{"coverage.html":{}}}],["guardar",{"_index":1271,"title":{},"body":{"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{}}}],["guardarcancelar",{"_index":1323,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["guards",{"_index":886,"title":{},"body":{"guards/LoginResolverService.html":{},"guards/SnifferDataResolverService.html":{},"guards/SniffersResolverService.html":{},"guards/TokensResolverService.html":{},"overview.html":{}}}],["hacer",{"_index":1376,"title":{},"body":{"guards/SniffersResolverService.html":{}}}],["hammerjs",{"_index":1452,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":1106,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["handleerrors",{"_index":1030,"title":{},"body":{"injectables/ParseService.html":{}}}],["handleerrors(err",{"_index":702,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["handlerouter",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["hash",{"_index":393,"title":{},"body":{"classes/Consts.html":{},"classes/TokenClass.html":{}}}],["height",{"_index":547,"title":{},"body":{"components/DataTableComponent.html":{}}}],["helps",{"_index":299,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["horizontal",{"_index":949,"title":{},"body":{"classes/NotifierConfigModel.html":{},"miscellaneous/typealiases.html":{}}}],["horizontalposition",{"_index":944,"title":{},"body":{"classes/NotifierConfigModel.html":{},"injectables/NotifierService.html":{}}}],["html",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["http",{"_index":1475,"title":{},"body":{"miscellaneous/functions.html":{}}}],["http://localhost:4200",{"_index":1498,"title":{},"body":{"index.html":{}}}],["http://localhost:5337",{"_index":372,"title":{},"body":{"classes/Consts.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":971,"title":{},"body":{"modules/NotifierModule.html":{}}}],["httploaderfactory",{"_index":1426,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["httploaderfactory(http",{"_index":975,"title":{},"body":{"modules/NotifierModule.html":{},"miscellaneous/functions.html":{}}}],["https://momentjs.com/docs/#/displaying/format",{"_index":613,"title":{},"body":{"modules/DataTableModule.html":{}}}],["https://sniffer",{"_index":369,"title":{},"body":{"classes/Consts.html":{}}}],["icons",{"_index":1454,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":378,"title":{},"body":{"classes/Consts.html":{},"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["identifier",{"_index":1407,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":278,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{},"guards/SniffersResolverService.html":{},"guards/TokensResolverService.html":{}}}],["import",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"classes/Consts.html":{},"classes/DataClass.html":{},"components/DataTableComponent.html":{},"modules/DataTableModule.html":{},"injectables/DataTableService.html":{},"interfaces/DataWithCount.html":{},"components/DetailsComponent.html":{},"interfaces/DialogDataInterface.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"classes/NotifierConfigModel.html":{},"modules/NotifierModule.html":{},"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"classes/SimpleDataSource.html":{},"classes/SnifferClass.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferFormComponent.html":{},"injectables/SnifferService.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"injectables/SnifferTokenService.html":{},"components/SniffersListComponent.html":{},"guards/SniffersResolverService.html":{},"classes/TokenClass.html":{},"guards/TokensResolverService.html":{},"classes/UserClass.html":{}}}],["importante",{"_index":1312,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["imports",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataTableModule.html":{},"modules/NotifierModule.html":{},"modules/SharedModule.html":{}}}],["includes",{"_index":683,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["incorrectas",{"_index":877,"title":{},"body":{"components/LoginComponent.html":{}}}],["indeterminate",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"classes/AppPage.html":{},"components/AppToolbarComponent.html":{},"classes/Consts.html":{},"classes/DataClass.html":{},"components/DataTableComponent.html":{},"interfaces/DataWithCount.html":{},"components/DetailsComponent.html":{},"interfaces/DialogDataInterface.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"classes/GenericClass.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"classes/NotifierConfigModel.html":{},"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"interfaces/SelectValue.html":{},"interfaces/SelectValueModel.html":{},"injectables/SharedService.html":{},"classes/SimpleDataSource.html":{},"classes/SnifferClass.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"injectables/SnifferTokenService.html":{},"components/SniffersListComponent.html":{},"guards/SniffersResolverService.html":{},"classes/Texts.html":{},"classes/TokenClass.html":{},"guards/TokensResolverService.html":{},"classes/UserClass.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":1050,"title":{},"body":{"interfaces/PropertySortFns.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"classes/Consts.html":{},"classes/DataClass.html":{},"components/DataTableComponent.html":{},"modules/DataTableModule.html":{},"injectables/DataTableService.html":{},"interfaces/DataWithCount.html":{},"components/DetailsComponent.html":{},"interfaces/DialogDataInterface.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"classes/GenericClass.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"classes/NotifierConfigModel.html":{},"modules/NotifierModule.html":{},"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"interfaces/SelectValue.html":{},"interfaces/SelectValueModel.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"classes/SimpleDataSource.html":{},"classes/SnifferClass.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferFormComponent.html":{},"injectables/SnifferService.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"injectables/SnifferTokenService.html":{},"components/SniffersListComponent.html":{},"guards/SniffersResolverService.html":{},"classes/Texts.html":{},"classes/TokenClass.html":{},"guards/TokensResolverService.html":{},"classes/UserClass.html":{}}}],["ingresar",{"_index":884,"title":{},"body":{"components/LoginComponent.html":{}}}],["ingreso",{"_index":882,"title":{},"body":{"components/LoginComponent.html":{}}}],["inherited",{"_index":411,"title":{},"body":{"classes/DataClass.html":{},"classes/SnifferClass.html":{},"classes/TokenClass.html":{},"classes/UserClass.html":{}}}],["inicio",{"_index":908,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["inject",{"_index":924,"title":{},"body":{"components/NotifierComponent.html":{},"components/SnifferFormComponent.html":{}}}],["inject(mat_bottom_sheet_data",{"_index":1243,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["injectable",{"_index":197,"title":{"injectables/DataTableService.html":{},"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"injectables/SharedService.html":{},"injectables/SnifferService.html":{},"injectables/SnifferTokenService.html":{}},"body":{"interfaces/AppOptions.html":{},"injectables/DataTableService.html":{},"interfaces/DataWithCount.html":{},"guards/LoginResolverService.html":{},"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"injectables/SharedService.html":{},"guards/SnifferDataResolverService.html":{},"injectables/SnifferService.html":{},"injectables/SnifferTokenService.html":{},"guards/SniffersResolverService.html":{},"guards/TokensResolverService.html":{},"coverage.html":{}}}],["injectables",{"_index":630,"title":{},"body":{"injectables/DataTableService.html":{},"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"injectables/SharedService.html":{},"injectables/SnifferService.html":{},"injectables/SnifferTokenService.html":{},"overview.html":{}}}],["input",{"_index":293,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/FilterByColumComponent.html":{},"components/SnifferTokenFormComponent.html":{}}}],["inputs",{"_index":285,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/FilterByColumComponent.html":{}}}],["instanceof",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["interface",{"_index":192,"title":{"interfaces/AppOptions.html":{},"interfaces/DataWithCount.html":{},"interfaces/DialogDataInterface.html":{},"interfaces/PropertySortFns.html":{},"interfaces/SelectValue.html":{},"interfaces/SelectValueModel.html":{}},"body":{"interfaces/AppOptions.html":{},"interfaces/DataWithCount.html":{},"interfaces/DialogDataInterface.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"interfaces/SelectValue.html":{},"interfaces/SelectValueModel.html":{},"injectables/SharedService.html":{},"classes/SimpleDataSource.html":{},"coverage.html":{}}}],["interfaces",{"_index":194,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataWithCount.html":{},"interfaces/DialogDataInterface.html":{},"interfaces/PropertySortFns.html":{},"interfaces/SelectValue.html":{},"interfaces/SelectValueModel.html":{},"overview.html":{}}}],["invalidjson",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invalido",{"_index":1270,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["ip",{"_index":355,"title":{},"body":{"classes/Consts.html":{},"classes/SnifferClass.html":{},"components/SnifferFormComponent.html":{},"components/SniffersListComponent.html":{}}}],["isequalpageevents(a",{"_index":1110,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["isloadingautocomplete",{"_index":1278,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["islogin",{"_index":653,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["isnewquery",{"_index":451,"title":{},"body":{"components/DataTableComponent.html":{}}}],["json",{"_index":1269,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["json.parse(ac.value",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json.parse(data",{"_index":1258,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["jsonvalidator",{"_index":1249,"title":{},"body":{"components/SnifferFormComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["justify",{"_index":937,"title":{},"body":{"components/NotifierComponent.html":{}}}],["key",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["la",{"_index":804,"title":{},"body":{"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/SnifferFormComponent.html":{},"components/SniffersListComponent.html":{},"index.html":{}}}],["label",{"_index":809,"title":{},"body":{"components/FilterByColumComponent.html":{},"interfaces/SelectValue.html":{},"interfaces/SelectValueModel.html":{},"injectables/SnifferTokenService.html":{}}}],["las",{"_index":1315,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["layout",{"_index":593,"title":{},"body":{"modules/DataTableModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["left",{"_index":959,"title":{},"body":{"classes/NotifierConfigModel.html":{},"miscellaneous/typealiases.html":{}}}],["legend",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"modules/DataTableModule.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"modules/NotifierModule.html":{},"modules/SharedModule.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{},"overview.html":{}}}],["length",{"_index":1134,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["license",{"_index":1520,"title":{"license.html":{}},"body":{}}],["limit",{"_index":525,"title":{},"body":{"components/DataTableComponent.html":{},"interfaces/DataWithCount.html":{},"components/FilterByColumComponent.html":{},"injectables/ParseService.html":{}}}],["line:forin",{"_index":798,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["line:variable",{"_index":508,"title":{},"body":{"components/DataTableComponent.html":{},"components/FilterByColumComponent.html":{}}}],["list",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["list'},{'name",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["list.component",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["list.component.html",{"_index":1206,"title":{},"body":{"components/SnifferDataListComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["list.component.scss",{"_index":1205,"title":{},"body":{"components/SnifferDataListComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["list.component.ts",{"_index":1204,"title":{},"body":{"components/SnifferDataListComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{},"coverage.html":{}}}],["list.component.ts:11",{"_index":1208,"title":{},"body":{"components/SnifferDataListComponent.html":{}}}],["list.component.ts:13",{"_index":1327,"title":{},"body":{"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["list.component.ts:15",{"_index":1209,"title":{},"body":{"components/SnifferDataListComponent.html":{},"components/SniffersListComponent.html":{}}}],["list.component.ts:20",{"_index":1328,"title":{},"body":{"components/SnifferTokenListComponent.html":{}}}],["list.component.ts:22",{"_index":1357,"title":{},"body":{"components/SniffersListComponent.html":{}}}],["list.component.ts:27",{"_index":1330,"title":{},"body":{"components/SnifferTokenListComponent.html":{}}}],["list.component.ts:29",{"_index":1359,"title":{},"body":{"components/SniffersListComponent.html":{}}}],["list/sniffer",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferTokenListComponent.html":{},"coverage.html":{}}}],["list/sniffers",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SniffersListComponent.html":{},"coverage.html":{}}}],["lista",{"_index":265,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SniffersListComponent.html":{}}}],["literal",{"_index":1386,"title":{},"body":{"classes/Texts.html":{}}}],["live",{"_index":330,"title":{},"body":{"classes/Consts.html":{}}}],["livequeryurl",{"_index":335,"title":{},"body":{"classes/Consts.html":{}}}],["loaded",{"_index":980,"title":{},"body":{"injectables/NotifierService.html":{}}}],["loading",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/LoginComponent.html":{},"injectables/SharedService.html":{}}}],["loadingmode",{"_index":196,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SharedService.html":{}}}],["local",{"_index":371,"title":{},"body":{"classes/Consts.html":{}}}],["login",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"modules/AppRoutingModule.html":{},"interfaces/DataWithCount.html":{},"components/LoginComponent.html":{},"injectables/ParseService.html":{},"injectables/SharedService.html":{}}}],["login'},{'name",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["login.component.html",{"_index":839,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":838,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":118,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginresolverservice",{"_index":257,"title":{"guards/LoginResolverService.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/LoginResolverService.html":{},"coverage.html":{}}}],["logout",{"_index":226,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{},"injectables/SharedService.html":{}}}],["los",{"_index":1504,"title":{},"body":{"index.html":{}}}],["manage",{"_index":301,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["map",{"_index":496,"title":{},"body":{"components/DataTableComponent.html":{},"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"components/SnifferTokenFormComponent.html":{},"injectables/SnifferTokenService.html":{},"miscellaneous/functions.html":{}}}],["map(res",{"_index":698,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{},"injectables/SnifferTokenService.html":{}}}],["map(sort",{"_index":1079,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["map(x",{"_index":1307,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["margin",{"_index":554,"title":{},"body":{"components/DataTableComponent.html":{}}}],["mat",{"_index":552,"title":{},"body":{"components/DataTableComponent.html":{}}}],["mat_bottom_sheet_data",{"_index":1246,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["mat_date_formats",{"_index":606,"title":{},"body":{"modules/DataTableModule.html":{}}}],["mat_date_locale",{"_index":607,"title":{},"body":{"modules/DataTableModule.html":{}}}],["mat_moment_date_adapter_options",{"_index":601,"title":{},"body":{"modules/DataTableModule.html":{}}}],["mat_snack_bar_data",{"_index":925,"title":{},"body":{"components/NotifierComponent.html":{}}}],["matautocompletemodule",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["matbottomsheet",{"_index":1326,"title":{},"body":{"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["matbottomsheetmodule",{"_index":580,"title":{},"body":{"modules/DataTableModule.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["matbottomsheetref",{"_index":1230,"title":{},"body":{"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{}}}],["matbuttonmodule",{"_index":577,"title":{},"body":{"modules/DataTableModule.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"classes/Consts.html":{},"classes/DataClass.html":{},"components/DataTableComponent.html":{},"modules/DataTableModule.html":{},"injectables/DataTableService.html":{},"interfaces/DataWithCount.html":{},"components/DetailsComponent.html":{},"interfaces/DialogDataInterface.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"classes/GenericClass.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"classes/NotifierConfigModel.html":{},"modules/NotifierModule.html":{},"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"interfaces/SelectValue.html":{},"interfaces/SelectValueModel.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"classes/SimpleDataSource.html":{},"classes/SnifferClass.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferFormComponent.html":{},"injectables/SnifferService.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"injectables/SnifferTokenService.html":{},"components/SniffersListComponent.html":{},"guards/SniffersResolverService.html":{},"classes/Texts.html":{},"classes/TokenClass.html":{},"guards/TokensResolverService.html":{},"classes/UserClass.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":596,"title":{},"body":{"modules/DataTableModule.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1075,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["materialmodules",{"_index":624,"title":{},"body":{"modules/DataTableModule.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["matexpansionmodule",{"_index":583,"title":{},"body":{"modules/DataTableModule.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":570,"title":{},"body":{"modules/DataTableModule.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["maticonmodule",{"_index":573,"title":{},"body":{"modules/DataTableModule.html":{},"modules/NotifierModule.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["matinputmodule",{"_index":575,"title":{},"body":{"modules/DataTableModule.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["matnativedatemodule",{"_index":598,"title":{},"body":{"modules/DataTableModule.html":{},"miscellaneous/variables.html":{}}}],["matpager",{"_index":1108,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["matpaginator",{"_index":476,"title":{},"body":{"components/DataTableComponent.html":{},"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"miscellaneous/functions.html":{}}}],["matpaginatormodule",{"_index":585,"title":{},"body":{"modules/DataTableModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressbarmodule",{"_index":1163,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressspinnermodule",{"_index":1165,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["matselectmodule",{"_index":594,"title":{},"body":{"modules/DataTableModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbar",{"_index":861,"title":{},"body":{"components/LoginComponent.html":{},"injectables/NotifierService.html":{}}}],["matsnackbarmodule",{"_index":973,"title":{},"body":{"modules/NotifierModule.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbarref",{"_index":917,"title":{},"body":{"components/NotifierComponent.html":{},"injectables/NotifierService.html":{}}}],["matsort",{"_index":485,"title":{},"body":{"components/DataTableComponent.html":{},"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"miscellaneous/functions.html":{}}}],["matsortmodule",{"_index":586,"title":{},"body":{"modules/DataTableModule.html":{},"miscellaneous/variables.html":{}}}],["mattabledatasource",{"_index":467,"title":{},"body":{"components/DataTableComponent.html":{}}}],["mattabledatasource(res.data",{"_index":536,"title":{},"body":{"components/DataTableComponent.html":{}}}],["mattablemodule",{"_index":579,"title":{},"body":{"modules/DataTableModule.html":{},"miscellaneous/variables.html":{}}}],["mattoolbarmodule",{"_index":1159,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["mattooltipmodule",{"_index":1155,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["meaning",{"_index":611,"title":{},"body":{"modules/DataTableModule.html":{}}}],["mensaje",{"_index":1010,"title":{},"body":{"injectables/NotifierService.html":{},"components/SnifferFormComponent.html":{}}}],["mente",{"_index":1371,"title":{},"body":{"components/SniffersListComponent.html":{}}}],["menu",{"_index":295,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["merge(...pagers.map(p",{"_index":1122,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["mergemap",{"_index":641,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{},"components/SnifferTokenFormComponent.html":{},"injectables/SnifferTokenService.html":{}}}],["mergemap(x",{"_index":1320,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["message",{"_index":1000,"title":{},"body":{"injectables/NotifierService.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["methods",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"modules/NotifierModule.html":{},"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"classes/SimpleDataSource.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"injectables/SnifferTokenService.html":{},"components/SniffersListComponent.html":{},"guards/SniffersResolverService.html":{},"guards/TokensResolverService.html":{}}}],["min",{"_index":546,"title":{},"body":{"components/DataTableComponent.html":{}}}],["miscellaneous",{"_index":1466,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":617,"title":{},"body":{"modules/DataTableModule.html":{},"miscellaneous/variables.html":{}}}],["mmmm",{"_index":623,"title":{},"body":{"modules/DataTableModule.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":1296,"title":{},"body":{"components/SnifferTokenFormComponent.html":{},"injectables/SnifferTokenService.html":{}}}],["model.ts",{"_index":1146,"title":{},"body":{"interfaces/SelectValueModel.html":{},"coverage.html":{}}}],["models/data",{"_index":1215,"title":{},"body":{"guards/SnifferDataResolverService.html":{}}}],["models/dialog",{"_index":1247,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["models/select",{"_index":1295,"title":{},"body":{"components/SnifferTokenFormComponent.html":{},"injectables/SnifferTokenService.html":{}}}],["models/sniffer",{"_index":767,"title":{},"body":{"components/FilterByColumComponent.html":{},"components/SnifferFormComponent.html":{},"injectables/SnifferTokenService.html":{},"guards/SniffersResolverService.html":{}}}],["models/token",{"_index":1297,"title":{},"body":{"components/SnifferTokenFormComponent.html":{},"injectables/SnifferTokenService.html":{}}}],["models/user",{"_index":864,"title":{},"body":{"components/LoginComponent.html":{}}}],["module",{"_index":142,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataTableModule.html":{},"modules/NotifierModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DataTableModule.html":{},"modules/NotifierModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":144,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataTableModule.html":{},"modules/NotifierModule.html":{},"modules/SharedModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules/app",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/notifier/notifier.service",{"_index":860,"title":{},"body":{"components/LoginComponent.html":{}}}],["modules/shared.module",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["modulewithproviders",{"_index":968,"title":{},"body":{"modules/NotifierModule.html":{},"modules/SharedModule.html":{}}}],["moment",{"_index":603,"title":{},"body":{"modules/DataTableModule.html":{},"dependencies.html":{}}}],["moment.js",{"_index":609,"title":{},"body":{"modules/DataTableModule.html":{}}}],["momentdateadapter",{"_index":600,"title":{},"body":{"modules/DataTableModule.html":{}}}],["monthyeara11ylabel",{"_index":622,"title":{},"body":{"modules/DataTableModule.html":{},"miscellaneous/variables.html":{}}}],["monthyearlabel",{"_index":620,"title":{},"body":{"modules/DataTableModule.html":{},"miscellaneous/variables.html":{}}}],["mostrar",{"_index":857,"title":{},"body":{"components/LoginComponent.html":{},"components/SnifferFormComponent.html":{}}}],["my_formats",{"_index":614,"title":{},"body":{"modules/DataTableModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"classes/Consts.html":{},"components/DataTableComponent.html":{},"interfaces/DataWithCount.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"injectables/SharedService.html":{},"classes/SimpleDataSource.html":{},"classes/SnifferClass.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"injectables/SnifferTokenService.html":{},"components/SniffersListComponent.html":{},"guards/SniffersResolverService.html":{},"guards/TokensResolverService.html":{},"classes/UserClass.html":{},"miscellaneous/functions.html":{}}}],["names",{"_index":796,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["names.hasownproperty(x",{"_index":799,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["navega",{"_index":1497,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":241,"title":{},"body":{"classes/AppPage.html":{}}}],["navigationcancel",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationend",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationerror",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationstart",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["necesario",{"_index":1009,"title":{},"body":{"injectables/NotifierService.html":{}}}],["new",{"_index":213,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/Consts.html":{},"components/DataTableComponent.html":{},"interfaces/DataWithCount.html":{},"components/FilterByColumComponent.html":{},"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"injectables/SharedService.html":{},"classes/SimpleDataSource.html":{},"injectables/SnifferTokenService.html":{},"guards/SniffersResolverService.html":{},"coverage.html":{}}}],["next",{"_index":507,"title":{},"body":{"components/DataTableComponent.html":{},"components/FilterByColumComponent.html":{}}}],["ng",{"_index":1494,"title":{},"body":{"index.html":{}}}],["ngforms",{"_index":625,"title":{},"body":{"modules/DataTableModule.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngif'd",{"_index":1107,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["ngmodule",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataTableModule.html":{},"modules/NotifierModule.html":{},"modules/SharedModule.html":{}}}],["ngonchanges",{"_index":436,"title":{},"body":{"components/DataTableComponent.html":{}}}],["ngonchanges(changes",{"_index":456,"title":{},"body":{"components/DataTableComponent.html":{}}}],["ngondestroy",{"_index":437,"title":{},"body":{"components/DataTableComponent.html":{}}}],["ngoninit",{"_index":284,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["ngzone",{"_index":198,"title":{},"body":{"interfaces/AppOptions.html":{},"components/LoginComponent.html":{},"injectables/SharedService.html":{},"components/SnifferFormComponent.html":{}}}],["nombre",{"_index":289,"title":{},"body":{"components/AppToolbarComponent.html":{},"classes/Consts.html":{},"components/LoginComponent.html":{},"components/SnifferFormComponent.html":{}}}],["notfound",{"_index":274,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["notfoundcomponent",{"_index":120,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notificationtype",{"_index":923,"title":{},"body":{"components/NotifierComponent.html":{},"classes/NotifierConfigModel.html":{},"miscellaneous/typealiases.html":{}}}],["notifier",{"_index":910,"title":{},"body":{"components/NotifierComponent.html":{}}}],["notifier'},{'name",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["notifier.component",{"_index":969,"title":{},"body":{"modules/NotifierModule.html":{},"injectables/NotifierService.html":{}}}],["notifier.component.html",{"_index":912,"title":{},"body":{"components/NotifierComponent.html":{}}}],["notifier.component.scss",{"_index":911,"title":{},"body":{"components/NotifierComponent.html":{}}}],["notifier.service",{"_index":970,"title":{},"body":{"modules/NotifierModule.html":{}}}],["notifier/notifier.module",{"_index":1158,"title":{},"body":{"modules/SharedModule.html":{}}}],["notifier/notifier.service",{"_index":1157,"title":{},"body":{"modules/SharedModule.html":{}}}],["notifiercomponent",{"_index":122,"title":{"components/NotifierComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"modules/NotifierModule.html":{},"injectables/NotifierService.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notifierconfig.model",{"_index":926,"title":{},"body":{"components/NotifierComponent.html":{},"injectables/NotifierService.html":{}}}],["notifierconfigmodel",{"_index":941,"title":{"classes/NotifierConfigModel.html":{}},"body":{"classes/NotifierConfigModel.html":{},"injectables/NotifierService.html":{},"coverage.html":{}}}],["notifiermodule",{"_index":961,"title":{"modules/NotifierModule.html":{}},"body":{"modules/NotifierModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["notifiermodule.forroot",{"_index":1169,"title":{},"body":{"modules/SharedModule.html":{}}}],["notifierservice",{"_index":859,"title":{"injectables/NotifierService.html":{}},"body":{"components/LoginComponent.html":{},"modules/NotifierModule.html":{},"injectables/NotifierService.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["null",{"_index":675,"title":{},"body":{"interfaces/DataWithCount.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"injectables/SnifferTokenService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":360,"title":{},"body":{"classes/Consts.html":{},"components/DataTableComponent.html":{},"interfaces/DataWithCount.html":{},"classes/NotifierConfigModel.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"miscellaneous/functions.html":{}}}],["number.isinteger(limit",{"_index":690,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["number.isinteger(skip",{"_index":692,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["o",{"_index":876,"title":{},"body":{"components/LoginComponent.html":{}}}],["ob",{"_index":665,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["ob.set(data",{"_index":666,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["ob.setacl(acl",{"_index":681,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["object",{"_index":321,"title":{},"body":{"classes/Consts.html":{},"interfaces/DialogDataInterface.html":{},"interfaces/PropertySortFns.html":{},"interfaces/SelectValue.html":{},"classes/SimpleDataSource.html":{},"components/SnifferFormComponent.html":{},"components/SniffersListComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object_id",{"_index":408,"title":{},"body":{"classes/DataClass.html":{},"classes/GenericClass.html":{},"classes/SnifferClass.html":{},"classes/TokenClass.html":{},"classes/UserClass.html":{}}}],["objectid",{"_index":377,"title":{},"body":{"classes/Consts.html":{},"classes/DataClass.html":{},"classes/GenericClass.html":{},"classes/SnifferClass.html":{},"classes/TokenClass.html":{},"classes/UserClass.html":{}}}],["objects",{"_index":1093,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"miscellaneous/functions.html":{}}}],["obs",{"_index":1100,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["observable",{"_index":200,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DataTableComponent.html":{},"interfaces/DataWithCount.html":{},"guards/LoginResolverService.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"injectables/SharedService.html":{},"classes/SimpleDataSource.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferTokenFormComponent.html":{},"injectables/SnifferTokenService.html":{},"guards/SniffersResolverService.html":{},"guards/TokensResolverService.html":{},"miscellaneous/functions.html":{}}}],["observables",{"_index":694,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["ocultar",{"_index":881,"title":{},"body":{"components/LoginComponent.html":{}}}],["of(new",{"_index":1217,"title":{},"body":{"guards/SnifferDataResolverService.html":{},"guards/SniffersResolverService.html":{}}}],["of(null",{"_index":696,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{},"injectables/SnifferTokenService.html":{}}}],["of(route.data).pipe",{"_index":1399,"title":{},"body":{"guards/TokensResolverService.html":{}}}],["of(route.data).pipe(delay(3000",{"_index":1398,"title":{},"body":{"guards/TokensResolverService.html":{}}}],["of(undefined",{"_index":896,"title":{},"body":{"guards/LoginResolverService.html":{}}}],["onchangepage",{"_index":438,"title":{},"body":{"components/DataTableComponent.html":{}}}],["onchangepage($event",{"_index":462,"title":{},"body":{"components/DataTableComponent.html":{}}}],["onchanges",{"_index":421,"title":{},"body":{"components/DataTableComponent.html":{},"components/SniffersListComponent.html":{}}}],["ondestroy",{"_index":420,"title":{},"body":{"components/DataTableComponent.html":{}}}],["oninit",{"_index":279,"title":{},"body":{"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["onlyself",{"_index":783,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["opciones",{"_index":1316,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["open",{"_index":981,"title":{},"body":{"injectables/NotifierService.html":{}}}],["open(text",{"_index":994,"title":{},"body":{"injectables/NotifierService.html":{}}}],["openadddialog",{"_index":1324,"title":{},"body":{"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["openadddialog(object",{"_index":1358,"title":{},"body":{"components/SniffersListComponent.html":{}}}],["openadddialog(type",{"_index":1329,"title":{},"body":{"components/SnifferTokenListComponent.html":{}}}],["operator",{"_index":1074,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"miscellaneous/functions.html":{}}}],["option.label",{"_index":1322,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["optional",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"interfaces/DialogDataInterface.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"components/NotifierComponent.html":{},"classes/NotifierConfigModel.html":{},"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"injectables/SharedService.html":{},"classes/SimpleDataSource.html":{},"components/SnifferDataListComponent.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"injectables/SnifferTokenService.html":{},"components/SniffersListComponent.html":{},"guards/SniffersResolverService.html":{},"guards/TokensResolverService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/DataTableModule.html":{},"modules/NotifierModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["output",{"_index":483,"title":{},"body":{"components/DataTableComponent.html":{},"components/FilterByColumComponent.html":{}}}],["outputs",{"_index":440,"title":{},"body":{"components/DataTableComponent.html":{},"components/FilterByColumComponent.html":{}}}],["overflow",{"_index":550,"title":{},"body":{"components/DataTableComponent.html":{}}}],["overview",{"_index":1526,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1442,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":1138,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"miscellaneous/functions.html":{}}}],["page.length",{"_index":1132,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["page.pageindex",{"_index":1128,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["page.pagesize",{"_index":1130,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["pageevent",{"_index":427,"title":{},"body":{"components/DataTableComponent.html":{},"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"miscellaneous/functions.html":{}}}],["pageindex",{"_index":428,"title":{},"body":{"components/DataTableComponent.html":{},"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["pager",{"_index":1473,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pager.length",{"_index":1131,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["pager.page.asobservable",{"_index":1135,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["pager.pageindex",{"_index":1127,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["pager.pagesize",{"_index":1129,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["pagers.changes.pipe",{"_index":1119,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["pagers.foreach(pager",{"_index":1126,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["pagesize",{"_index":429,"title":{},"body":{"components/DataTableComponent.html":{},"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["pagesizeoptions",{"_index":430,"title":{},"body":{"components/DataTableComponent.html":{}}}],["pagina",{"_index":904,"title":{},"body":{"components/NotFoundComponent.html":{},"classes/Texts.html":{}}}],["paginado",{"_index":1380,"title":{},"body":{"guards/SniffersResolverService.html":{}}}],["paginate",{"_index":1136,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"miscellaneous/functions.html":{}}}],["paginaterows",{"_index":491,"title":{},"body":{"components/DataTableComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["paginaterows(page",{"_index":1137,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"miscellaneous/functions.html":{}}}],["paginator",{"_index":431,"title":{},"body":{"components/DataTableComponent.html":{},"classes/Texts.html":{}}}],["panelclass",{"_index":1016,"title":{},"body":{"injectables/NotifierService.html":{}}}],["pantalla",{"_index":290,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["para",{"_index":1313,"title":{},"body":{"components/SnifferTokenFormComponent.html":{},"index.html":{}}}],["param",{"_index":229,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/NotifierService.html":{},"injectables/SharedService.html":{}}}],["parameters",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"components/NotifierComponent.html":{},"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"injectables/SharedService.html":{},"classes/SimpleDataSource.html":{},"components/SnifferDataListComponent.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"injectables/SnifferTokenService.html":{},"components/SniffersListComponent.html":{},"guards/SniffersResolverService.html":{},"guards/TokensResolverService.html":{},"miscellaneous/functions.html":{}}}],["parse",{"_index":211,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/Consts.html":{},"components/DataTableComponent.html":{},"modules/DataTableModule.html":{},"interfaces/DataWithCount.html":{},"interfaces/DialogDataInterface.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"injectables/ParseService.html":{},"injectables/SharedService.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferFormComponent.html":{},"injectables/SnifferTokenService.html":{},"guards/SniffersResolverService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["parse.acl",{"_index":374,"title":{},"body":{"classes/Consts.html":{},"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["parse.error",{"_index":703,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["parse.initialize(consts.parseconf.applicationid",{"_index":647,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["parse.object",{"_index":465,"title":{},"body":{"components/DataTableComponent.html":{},"interfaces/DataWithCount.html":{},"interfaces/DialogDataInterface.html":{},"injectables/ParseService.html":{},"components/SnifferFormComponent.html":{},"components/SniffersListComponent.html":{}}}],["parse.object(classname",{"_index":679,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["parse.object.createwithoutdata(id",{"_index":670,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["parse.query",{"_index":446,"title":{},"body":{"components/DataTableComponent.html":{},"interfaces/DataWithCount.html":{},"components/FilterByColumComponent.html":{},"injectables/ParseService.html":{},"components/SnifferDataListComponent.html":{},"components/SniffersListComponent.html":{}}}],["parse.query(classname",{"_index":686,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["parse.query(dataclass.classname",{"_index":1218,"title":{},"body":{"guards/SnifferDataResolverService.html":{}}}],["parse.query(snifferclass.classname",{"_index":1382,"title":{},"body":{"guards/SniffersResolverService.html":{}}}],["parse.query(this.query.classname",{"_index":787,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["parse.service",{"_index":203,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SharedService.html":{},"injectables/SnifferTokenService.html":{}}}],["parse.user",{"_index":656,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["parse.user.current",{"_index":654,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["parse.user.logout",{"_index":650,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["parseconf",{"_index":313,"title":{},"body":{"classes/Consts.html":{}}}],["parseobject",{"_index":669,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["parseobject.classname",{"_index":671,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["parserequire",{"_index":645,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["parserequire.serverurl",{"_index":648,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["parseservice",{"_index":202,"title":{"injectables/ParseService.html":{}},"body":{"interfaces/AppOptions.html":{},"components/DataTableComponent.html":{},"interfaces/DataWithCount.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"injectables/ParseService.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferFormComponent.html":{},"injectables/SnifferTokenService.html":{},"guards/SniffersResolverService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["partial",{"_index":210,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SharedService.html":{}}}],["password",{"_index":651,"title":{},"body":{"interfaces/DataWithCount.html":{},"components/LoginComponent.html":{},"injectables/ParseService.html":{},"classes/UserClass.html":{}}}],["patchvalue",{"_index":1226,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["path",{"_index":263,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":272,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["patterns",{"_index":314,"title":{},"body":{"classes/Consts.html":{}}}],["pfiedtype",{"_index":841,"title":{},"body":{"components/LoginComponent.html":{}}}],["picontooltip",{"_index":842,"title":{},"body":{"components/LoginComponent.html":{}}}],["point",{"_index":1072,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["port",{"_index":389,"title":{},"body":{"classes/Consts.html":{}}}],["position",{"_index":724,"title":{},"body":{"components/FabButtonComponent.html":{}}}],["preparedata",{"_index":1227,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["preparedata(object",{"_index":1240,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["prepareobjecttoupdate",{"_index":1170,"title":{},"body":{"injectables/SharedService.html":{}}}],["prepareobjecttoupdate(form",{"_index":231,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SharedService.html":{}}}],["primera",{"_index":1390,"title":{},"body":{"classes/Texts.html":{}}}],["private",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"components/NotifierComponent.html":{},"injectables/SharedService.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"injectables/SnifferTokenService.html":{},"components/SniffersListComponent.html":{}}}],["prod",{"_index":1518,"title":{},"body":{"index.html":{}}}],["producción",{"_index":1519,"title":{},"body":{"index.html":{}}}],["production",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progressbarmode",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["promise",{"_index":246,"title":{},"body":{"classes/AppPage.html":{},"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["prop",{"_index":1051,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"classes/Consts.html":{},"classes/DataClass.html":{},"components/DataTableComponent.html":{},"interfaces/DataWithCount.html":{},"interfaces/DialogDataInterface.html":{},"components/FilterByColumComponent.html":{},"classes/GenericClass.html":{},"components/LoginComponent.html":{},"components/NotifierComponent.html":{},"classes/NotifierConfigModel.html":{},"injectables/ParseService.html":{},"interfaces/SelectValue.html":{},"interfaces/SelectValueModel.html":{},"injectables/SharedService.html":{},"classes/SnifferClass.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{},"classes/Texts.html":{},"classes/TokenClass.html":{},"classes/UserClass.html":{}}}],["property",{"_index":1084,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["propertysortfns",{"_index":1048,"title":{"interfaces/PropertySortFns.html":{}},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"coverage.html":{}}}],["protocol",{"_index":387,"title":{},"body":{"classes/Consts.html":{}}}],["protocolo",{"_index":388,"title":{},"body":{"classes/Consts.html":{}}}],["protractor",{"_index":244,"title":{},"body":{"classes/AppPage.html":{}}}],["provide",{"_index":626,"title":{},"body":{"modules/DataTableModule.html":{}}}],["providedin",{"_index":206,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/DataTableService.html":{},"guards/LoginResolverService.html":{},"injectables/NotifierService.html":{},"injectables/SharedService.html":{},"guards/SnifferDataResolverService.html":{},"injectables/SnifferService.html":{},"injectables/SnifferTokenService.html":{},"guards/SniffersResolverService.html":{},"guards/TokensResolverService.html":{}}}],["providers",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"modules/DataTableModule.html":{},"modules/NotifierModule.html":{},"modules/SharedModule.html":{},"components/SnifferTokenFormComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["proyecto",{"_index":1481,"title":{},"body":{"index.html":{}}}],["proyectogradosniffer",{"_index":326,"title":{},"body":{"classes/Consts.html":{}}}],["public",{"_index":367,"title":{},"body":{"classes/Consts.html":{},"classes/DataClass.html":{},"classes/GenericClass.html":{},"modules/NotifierModule.html":{},"classes/SnifferClass.html":{},"components/SnifferFormComponent.html":{},"classes/Texts.html":{},"classes/TokenClass.html":{},"classes/UserClass.html":{},"miscellaneous/variables.html":{}}}],["public_acl",{"_index":317,"title":{},"body":{"classes/Consts.html":{}}}],["puede",{"_index":802,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["pueden",{"_index":1363,"title":{},"body":{"components/SniffersListComponent.html":{}}}],["puerto",{"_index":390,"title":{},"body":{"classes/Consts.html":{}}}],["q",{"_index":1381,"title":{},"body":{"guards/SniffersResolverService.html":{}}}],["que",{"_index":1378,"title":{},"body":{"guards/SniffersResolverService.html":{}}}],["query",{"_index":331,"title":{},"body":{"classes/Consts.html":{},"components/DataTableComponent.html":{},"interfaces/DataWithCount.html":{},"components/FilterByColumComponent.html":{},"injectables/ParseService.html":{},"components/SnifferDataListComponent.html":{},"guards/SnifferDataResolverService.html":{},"injectables/SnifferTokenService.html":{},"components/SniffersListComponent.html":{},"guards/SniffersResolverService.html":{}}}],["query(classname",{"_index":685,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["query(query",{"_index":501,"title":{},"body":{"components/DataTableComponent.html":{},"components/FilterByColumComponent.html":{}}}],["query.limit(2000",{"_index":662,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["query.limit(limit",{"_index":691,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["query.limit(this.query",{"_index":789,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["query.matches(snifferclass.name",{"_index":1347,"title":{},"body":{"injectables/SnifferTokenService.html":{}}}],["query.select(snifferclass.name",{"_index":1346,"title":{},"body":{"injectables/SnifferTokenService.html":{}}}],["query.skip(0",{"_index":788,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["query.skip(skip",{"_index":693,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["querychange",{"_index":441,"title":{},"body":{"components/DataTableComponent.html":{},"components/FilterByColumComponent.html":{}}}],["querylist",{"_index":1118,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["rastreador",{"_index":386,"title":{},"body":{"classes/Consts.html":{}}}],["reactiveformsmodule",{"_index":590,"title":{},"body":{"modules/DataTableModule.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["readme",{"_index":1355,"title":{},"body":{"components/SniffersListComponent.html":{}}}],["readonly",{"_index":310,"title":{},"body":{"classes/Consts.html":{},"classes/DataClass.html":{},"classes/GenericClass.html":{},"classes/SnifferClass.html":{},"classes/Texts.html":{},"classes/TokenClass.html":{},"classes/UserClass.html":{}}}],["realizan",{"_index":1502,"title":{},"body":{"index.html":{}}}],["recargara",{"_index":1500,"title":{},"body":{"index.html":{}}}],["redirectto",{"_index":271,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ref",{"_index":916,"title":{},"body":{"components/NotifierComponent.html":{}}}],["regexp(value",{"_index":1348,"title":{},"body":{"injectables/SnifferTokenService.html":{}}}],["reiniciar",{"_index":827,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["requerida",{"_index":807,"title":{},"body":{"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/SnifferFormComponent.html":{}}}],["requerido",{"_index":824,"title":{},"body":{"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{}}}],["require",{"_index":1440,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require('parse",{"_index":646,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":699,"title":{},"body":{"interfaces/DataWithCount.html":{},"components/FilterByColumComponent.html":{},"injectables/ParseService.html":{}}}],["res.count",{"_index":529,"title":{},"body":{"components/DataTableComponent.html":{}}}],["res.data",{"_index":533,"title":{},"body":{"components/DataTableComponent.html":{}}}],["res.map(x",{"_index":1350,"title":{},"body":{"injectables/SnifferTokenService.html":{}}}],["reset",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/DataTableModule.html":{},"modules/NotifierModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["resetfilter",{"_index":741,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["resolve",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/LoginResolverService.html":{},"guards/SnifferDataResolverService.html":{},"guards/SniffersResolverService.html":{},"guards/TokensResolverService.html":{}}}],["resolve(route",{"_index":890,"title":{},"body":{"guards/LoginResolverService.html":{},"guards/SnifferDataResolverService.html":{},"guards/SniffersResolverService.html":{},"guards/TokensResolverService.html":{}}}],["resolver",{"_index":803,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["resolver.service",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["resolver.service.ts",{"_index":888,"title":{},"body":{"guards/LoginResolverService.html":{},"guards/SnifferDataResolverService.html":{},"guards/SniffersResolverService.html":{},"guards/TokensResolverService.html":{},"coverage.html":{}}}],["resolver.service.ts:11",{"_index":1212,"title":{},"body":{"guards/SnifferDataResolverService.html":{},"guards/SniffersResolverService.html":{}}}],["resolver.service.ts:14",{"_index":1396,"title":{},"body":{"guards/TokensResolverService.html":{}}}],["resolver.service.ts:15",{"_index":894,"title":{},"body":{"guards/LoginResolverService.html":{}}}],["resolver.service.ts:16",{"_index":1214,"title":{},"body":{"guards/SnifferDataResolverService.html":{},"guards/SniffersResolverService.html":{}}}],["resolver.service.ts:22",{"_index":1374,"title":{},"body":{"guards/SniffersResolverService.html":{}}}],["resolver.service.ts:23",{"_index":1213,"title":{},"body":{"guards/SnifferDataResolverService.html":{}}}],["resolver.service.ts:28",{"_index":1375,"title":{},"body":{"guards/SniffersResolverService.html":{}}}],["resolver.service.ts:9",{"_index":889,"title":{},"body":{"guards/LoginResolverService.html":{},"guards/TokensResolverService.html":{}}}],["resolvers/login",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["resolvers/sniffer",{"_index":262,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["resolvers/sniffers",{"_index":260,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["resolvers/tokens",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["result",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"classes/Consts.html":{},"classes/DataClass.html":{},"components/DataTableComponent.html":{},"modules/DataTableModule.html":{},"injectables/DataTableService.html":{},"interfaces/DataWithCount.html":{},"components/DetailsComponent.html":{},"interfaces/DialogDataInterface.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"classes/GenericClass.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"classes/NotifierConfigModel.html":{},"modules/NotifierModule.html":{},"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"interfaces/SelectValue.html":{},"interfaces/SelectValueModel.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"classes/SimpleDataSource.html":{},"classes/SnifferClass.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferFormComponent.html":{},"injectables/SnifferService.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"injectables/SnifferTokenService.html":{},"components/SniffersListComponent.html":{},"guards/SniffersResolverService.html":{},"classes/Texts.html":{},"classes/TokenClass.html":{},"guards/TokensResolverService.html":{},"classes/UserClass.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"classes/Consts.html":{},"classes/DataClass.html":{},"components/DataTableComponent.html":{},"modules/DataTableModule.html":{},"injectables/DataTableService.html":{},"interfaces/DataWithCount.html":{},"components/DetailsComponent.html":{},"interfaces/DialogDataInterface.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"classes/GenericClass.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"classes/NotifierConfigModel.html":{},"modules/NotifierModule.html":{},"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"interfaces/SelectValue.html":{},"interfaces/SelectValueModel.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"classes/SimpleDataSource.html":{},"classes/SnifferClass.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferFormComponent.html":{},"injectables/SnifferService.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"injectables/SnifferTokenService.html":{},"components/SniffersListComponent.html":{},"guards/SniffersResolverService.html":{},"classes/Texts.html":{},"classes/TokenClass.html":{},"guards/TokensResolverService.html":{},"classes/UserClass.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":222,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/AppPage.html":{},"classes/Consts.html":{},"components/DataTableComponent.html":{},"interfaces/DataWithCount.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"modules/NotifierModule.html":{},"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"classes/SimpleDataSource.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"injectables/SnifferTokenService.html":{},"guards/SniffersResolverService.html":{},"guards/TokensResolverService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"modules/NotifierModule.html":{},"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"classes/SimpleDataSource.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"injectables/SnifferTokenService.html":{},"components/SniffersListComponent.html":{},"guards/SniffersResolverService.html":{},"guards/TokensResolverService.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":726,"title":{},"body":{"components/FabButtonComponent.html":{},"classes/NotifierConfigModel.html":{},"injectables/NotifierService.html":{},"miscellaneous/typealiases.html":{}}}],["roboto",{"_index":1458,"title":{},"body":{"dependencies.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"classes/AppPage.html":{},"injectables/DataTableService.html":{},"guards/LoginResolverService.html":{},"injectables/NotifierService.html":{},"injectables/SharedService.html":{},"guards/SnifferDataResolverService.html":{},"injectables/SnifferService.html":{},"injectables/SnifferTokenService.html":{},"guards/SniffersResolverService.html":{},"guards/TokensResolverService.html":{}}}],["root'},{'name",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["route",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"guards/LoginResolverService.html":{},"components/SnifferDataListComponent.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{},"guards/SniffersResolverService.html":{},"guards/TokensResolverService.html":{}}}],["router",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/DataWithCount.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"injectables/ParseService.html":{},"injectables/SharedService.html":{}}}],["routerevent",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodule",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["routermodule.forroot(routes",{"_index":275,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":893,"title":{},"body":{"guards/LoginResolverService.html":{},"guards/SnifferDataResolverService.html":{},"guards/SniffersResolverService.html":{},"guards/TokensResolverService.html":{}}}],["routes",{"_index":252,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rows",{"_index":1063,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["rows.slice",{"_index":1103,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["runcloudfunction",{"_index":674,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["rxjs",{"_index":201,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DataTableComponent.html":{},"interfaces/DataWithCount.html":{},"guards/LoginResolverService.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"injectables/SharedService.html":{},"classes/SimpleDataSource.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferTokenFormComponent.html":{},"injectables/SnifferTokenService.html":{},"guards/SniffersResolverService.html":{},"guards/TokensResolverService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["rxjs/operators",{"_index":497,"title":{},"body":{"components/DataTableComponent.html":{},"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"components/SnifferTokenFormComponent.html":{},"injectables/SnifferTokenService.html":{},"guards/TokensResolverService.html":{}}}],["s",{"_index":795,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["s.push",{"_index":808,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0",{"_index":345,"title":{},"body":{"classes/Consts.html":{}}}],["salir",{"_index":297,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["schema",{"_index":736,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["schematype",{"_index":813,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["se",{"_index":1362,"title":{},"body":{"components/SniffersListComponent.html":{},"index.html":{}}}],["secure",{"_index":341,"title":{},"body":{"classes/Consts.html":{}}}],["see",{"_index":608,"title":{},"body":{"modules/DataTableModule.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["selectvalue",{"_index":760,"title":{"interfaces/SelectValue.html":{}},"body":{"components/FilterByColumComponent.html":{},"interfaces/SelectValue.html":{},"coverage.html":{}}}],["selectvaluemodel",{"_index":1144,"title":{"interfaces/SelectValueModel.html":{}},"body":{"interfaces/SelectValueModel.html":{},"components/SnifferTokenFormComponent.html":{},"injectables/SnifferTokenService.html":{},"coverage.html":{}}}],["send",{"_index":843,"title":{},"body":{"components/LoginComponent.html":{}}}],["serve",{"_index":328,"title":{},"body":{"classes/Consts.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["server",{"_index":368,"title":{},"body":{"classes/Consts.html":{},"miscellaneous/variables.html":{}}}],["serverurl",{"_index":327,"title":{},"body":{"classes/Consts.html":{}}}],["service",{"_index":1283,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["services/parse.service",{"_index":499,"title":{},"body":{"components/DataTableComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"modules/SharedModule.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferFormComponent.html":{},"guards/SniffersResolverService.html":{}}}],["services/shared.service",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"modules/SharedModule.html":{},"components/SnifferFormComponent.html":{}}}],["services/sniffer",{"_index":1298,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["servidor",{"_index":1490,"title":{},"body":{"index.html":{}}}],["set",{"_index":217,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DataTableComponent.html":{},"components/FilterByColumComponent.html":{},"injectables/SharedService.html":{}}}],["setapploading(value",{"_index":1178,"title":{},"body":{"injectables/SharedService.html":{}}}],["setapploadingmode(value",{"_index":1182,"title":{},"body":{"injectables/SharedService.html":{}}}],["setcanshowtoolbar",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["setcanshowtoolbar(event",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["setcolumns",{"_index":742,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["setcolumns(schema",{"_index":757,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["setquery(query",{"_index":481,"title":{},"body":{"components/DataTableComponent.html":{},"components/FilterByColumComponent.html":{}}}],["settitle",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["shared",{"_index":288,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["shared.toast.errortocreate",{"_index":1023,"title":{},"body":{"injectables/NotifierService.html":{}}}],["shared.toast.errortoupdate",{"_index":1022,"title":{},"body":{"injectables/NotifierService.html":{}}}],["shared.toast.genericerror",{"_index":1021,"title":{},"body":{"injectables/NotifierService.html":{}}}],["sharedmodule",{"_index":155,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["sharedmodule.forroot",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedservice",{"_index":35,"title":{"injectables/SharedService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppToolbarComponent.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"components/SnifferFormComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["sheet",{"_index":582,"title":{},"body":{"modules/DataTableModule.html":{},"modules/SharedModule.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["showerror",{"_index":982,"title":{},"body":{"injectables/NotifierService.html":{}}}],["showerror(message",{"_index":998,"title":{},"body":{"injectables/NotifierService.html":{}}}],["showpassword",{"_index":844,"title":{},"body":{"components/LoginComponent.html":{}}}],["showsuccess",{"_index":983,"title":{},"body":{"injectables/NotifierService.html":{}}}],["showsuccess(message",{"_index":1001,"title":{},"body":{"injectables/NotifierService.html":{}}}],["showwarning",{"_index":984,"title":{},"body":{"injectables/NotifierService.html":{}}}],["showwarning(message",{"_index":1003,"title":{},"body":{"injectables/NotifierService.html":{}}}],["si",{"_index":825,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["simplechanges",{"_index":457,"title":{},"body":{"components/DataTableComponent.html":{},"components/SniffersListComponent.html":{}}}],["simplecrm",{"_index":298,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["simpledatasource",{"_index":1062,"title":{"classes/SimpleDataSource.html":{}},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"coverage.html":{}}}],["skip",{"_index":524,"title":{},"body":{"components/DataTableComponent.html":{},"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["skipwhile",{"_index":642,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["snackbar",{"_index":989,"title":{},"body":{"injectables/NotifierService.html":{}}}],["snackbar_duration",{"_index":315,"title":{},"body":{"classes/Consts.html":{}}}],["sniffer",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"classes/Consts.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"classes/SnifferClass.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{},"classes/Texts.html":{},"classes/TokenClass.html":{},"index.html":{}}}],["snifferclass",{"_index":766,"title":{"classes/SnifferClass.html":{}},"body":{"components/FilterByColumComponent.html":{},"classes/SnifferClass.html":{},"components/SnifferFormComponent.html":{},"injectables/SnifferTokenService.html":{},"guards/SniffersResolverService.html":{},"coverage.html":{}}}],["snifferclass.classname).subscribe(res",{"_index":1261,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["snifferclass.config",{"_index":1257,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["snifferclass.ip",{"_index":1264,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["snifferclass.name",{"_index":1266,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["snifferdatadetailcomponent",{"_index":124,"title":{"components/SnifferDataDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["snifferdatalistcomponent",{"_index":127,"title":{"components/SnifferDataListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["snifferdataresolverservice",{"_index":261,"title":{"guards/SnifferDataResolverService.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/SnifferDataResolverService.html":{},"coverage.html":{}}}],["snifferformcomponent",{"_index":129,"title":{"components/SnifferFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sniffers",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["snifferservice",{"_index":1273,"title":{"injectables/SnifferService.html":{}},"body":{"injectables/SnifferService.html":{},"coverage.html":{}}}],["snifferslistcomponent",{"_index":131,"title":{"components/SniffersListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sniffersresolverservice",{"_index":259,"title":{"guards/SniffersResolverService.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/SniffersResolverService.html":{},"coverage.html":{}}}],["sniffertokenformcomponent",{"_index":133,"title":{"components/SnifferTokenFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sniffertokenlistcomponent",{"_index":135,"title":{"components/SnifferTokenListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sniffertokenservice",{"_index":1276,"title":{"injectables/SnifferTokenService.html":{}},"body":{"components/SnifferTokenFormComponent.html":{},"injectables/SnifferTokenService.html":{},"coverage.html":{}}}],["socket",{"_index":334,"title":{},"body":{"classes/Consts.html":{}}}],["sort",{"_index":486,"title":{},"body":{"components/DataTableComponent.html":{},"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"miscellaneous/functions.html":{}}}],["sort$.pipe",{"_index":1078,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["sort$.pipe(tosortfn(sortfns",{"_index":1101,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["sort.active",{"_index":1080,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["sort.direction",{"_index":1081,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["sort.sortchange.asobservable",{"_index":1096,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["sortfn",{"_index":1052,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"miscellaneous/typealiases.html":{}}}],["sortfn(b",{"_index":1090,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["sortfns",{"_index":1082,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"miscellaneous/functions.html":{}}}],["sorting",{"_index":1071,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["sortrows",{"_index":492,"title":{},"body":{"components/DataTableComponent.html":{},"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortrows(sort",{"_index":1474,"title":{},"body":{"miscellaneous/functions.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"classes/Consts.html":{},"classes/DataClass.html":{},"components/DataTableComponent.html":{},"modules/DataTableModule.html":{},"injectables/DataTableService.html":{},"interfaces/DataWithCount.html":{},"components/DetailsComponent.html":{},"interfaces/DialogDataInterface.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"classes/GenericClass.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"classes/NotifierConfigModel.html":{},"modules/NotifierModule.html":{},"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"interfaces/SelectValue.html":{},"interfaces/SelectValueModel.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"classes/SimpleDataSource.html":{},"classes/SnifferClass.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferFormComponent.html":{},"injectables/SnifferService.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"injectables/SnifferTokenService.html":{},"components/SniffersListComponent.html":{},"guards/SniffersResolverService.html":{},"classes/Texts.html":{},"classes/TokenClass.html":{},"guards/TokensResolverService.html":{},"classes/UserClass.html":{}}}],["spa",{"_index":1479,"title":{},"body":{"index.html":{}}}],["spacer",{"_index":303,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["span')).gettext",{"_index":249,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":1166,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/.../data",{"_index":1470,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../decorators.util.ts",{"_index":1472,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../filterbycolumnmodels.ts",{"_index":1468,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../index.ts",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../json",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../notifier.module.ts",{"_index":1471,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../notifierconfig.model.ts",{"_index":1532,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../parse.service.ts",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../shared.module.ts",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:21",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:63",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:75",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/fab",{"_index":716,"title":{},"body":{"components/FabButtonComponent.html":{},"coverage.html":{}}}],["src/app/components/toolbar/app",{"_index":276,"title":{},"body":{"components/AppToolbarComponent.html":{},"coverage.html":{}}}],["src/app/models/data",{"_index":402,"title":{},"body":{"classes/DataClass.html":{},"coverage.html":{}}}],["src/app/models/decorators.util.ts",{"_index":1413,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/models/dialog",{"_index":714,"title":{},"body":{"interfaces/DialogDataInterface.html":{},"coverage.html":{}}}],["src/app/models/generic",{"_index":829,"title":{},"body":{"classes/GenericClass.html":{},"coverage.html":{}}}],["src/app/models/select",{"_index":1145,"title":{},"body":{"interfaces/SelectValueModel.html":{},"coverage.html":{}}}],["src/app/models/sniffer",{"_index":1190,"title":{},"body":{"classes/SnifferClass.html":{},"coverage.html":{}}}],["src/app/models/token",{"_index":1391,"title":{},"body":{"classes/TokenClass.html":{},"coverage.html":{}}}],["src/app/models/user",{"_index":1400,"title":{},"body":{"classes/UserClass.html":{},"coverage.html":{}}}],["src/app/modules/app",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/modules/data",{"_index":417,"title":{},"body":{"components/DataTableComponent.html":{},"modules/DataTableModule.html":{},"injectables/DataTableService.html":{},"components/DetailsComponent.html":{},"components/FilterByColumComponent.html":{},"interfaces/PropertySortFns.html":{},"interfaces/SelectValue.html":{},"classes/SimpleDataSource.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/notifier/notifier.component.ts",{"_index":909,"title":{},"body":{"components/NotifierComponent.html":{},"coverage.html":{}}}],["src/app/modules/notifier/notifier.component.ts:12",{"_index":922,"title":{},"body":{"components/NotifierComponent.html":{}}}],["src/app/modules/notifier/notifier.component.ts:13",{"_index":918,"title":{},"body":{"components/NotifierComponent.html":{}}}],["src/app/modules/notifier/notifier.component.ts:21",{"_index":921,"title":{},"body":{"components/NotifierComponent.html":{}}}],["src/app/modules/notifier/notifier.component.ts:24",{"_index":920,"title":{},"body":{"components/NotifierComponent.html":{}}}],["src/app/modules/notifier/notifier.component.ts:28",{"_index":919,"title":{},"body":{"components/NotifierComponent.html":{}}}],["src/app/modules/notifier/notifier.module.ts",{"_index":965,"title":{},"body":{"modules/NotifierModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/modules/notifier/notifier.module.ts:33",{"_index":967,"title":{},"body":{"modules/NotifierModule.html":{}}}],["src/app/modules/notifier/notifier.service.ts",{"_index":976,"title":{},"body":{"injectables/NotifierService.html":{},"coverage.html":{}}}],["src/app/modules/notifier/notifier.service.ts:104",{"_index":1002,"title":{},"body":{"injectables/NotifierService.html":{}}}],["src/app/modules/notifier/notifier.service.ts:113",{"_index":1004,"title":{},"body":{"injectables/NotifierService.html":{}}}],["src/app/modules/notifier/notifier.service.ts:19",{"_index":996,"title":{},"body":{"injectables/NotifierService.html":{}}}],["src/app/modules/notifier/notifier.service.ts:43",{"_index":990,"title":{},"body":{"injectables/NotifierService.html":{}}}],["src/app/modules/notifier/notifier.service.ts:50",{"_index":1005,"title":{},"body":{"injectables/NotifierService.html":{}}}],["src/app/modules/notifier/notifier.service.ts:57",{"_index":992,"title":{},"body":{"injectables/NotifierService.html":{}}}],["src/app/modules/notifier/notifier.service.ts:67",{"_index":1006,"title":{},"body":{"injectables/NotifierService.html":{}}}],["src/app/modules/notifier/notifier.service.ts:77",{"_index":991,"title":{},"body":{"injectables/NotifierService.html":{}}}],["src/app/modules/notifier/notifier.service.ts:87",{"_index":993,"title":{},"body":{"injectables/NotifierService.html":{}}}],["src/app/modules/notifier/notifier.service.ts:9",{"_index":988,"title":{},"body":{"injectables/NotifierService.html":{}}}],["src/app/modules/notifier/notifier.service.ts:96",{"_index":999,"title":{},"body":{"injectables/NotifierService.html":{}}}],["src/app/modules/notifier/notifierconfig.model.ts",{"_index":942,"title":{},"body":{"classes/NotifierConfigModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/modules/notifier/notifierconfig.model.ts:10",{"_index":947,"title":{},"body":{"classes/NotifierConfigModel.html":{}}}],["src/app/modules/notifier/notifierconfig.model.ts:5",{"_index":951,"title":{},"body":{"classes/NotifierConfigModel.html":{}}}],["src/app/modules/notifier/notifierconfig.model.ts:6",{"_index":952,"title":{},"body":{"classes/NotifierConfigModel.html":{}}}],["src/app/modules/notifier/notifierconfig.model.ts:7",{"_index":954,"title":{},"body":{"classes/NotifierConfigModel.html":{}}}],["src/app/modules/notifier/notifierconfig.model.ts:8",{"_index":950,"title":{},"body":{"classes/NotifierConfigModel.html":{}}}],["src/app/modules/notifier/notifierconfig.model.ts:9",{"_index":948,"title":{},"body":{"classes/NotifierConfigModel.html":{}}}],["src/app/modules/shared.module.ts",{"_index":1152,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/shared.module.ts:78",{"_index":1153,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/resolvers/login",{"_index":887,"title":{},"body":{"guards/LoginResolverService.html":{},"coverage.html":{}}}],["src/app/resolvers/sniffer",{"_index":1211,"title":{},"body":{"guards/SnifferDataResolverService.html":{},"coverage.html":{}}}],["src/app/resolvers/sniffers",{"_index":1373,"title":{},"body":{"guards/SniffersResolverService.html":{},"coverage.html":{}}}],["src/app/resolvers/tokens",{"_index":1395,"title":{},"body":{"guards/TokensResolverService.html":{},"coverage.html":{}}}],["src/app/services/parse.service.ts",{"_index":634,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/parse.service.ts:104",{"_index":1035,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/parse.service.ts:109",{"_index":1039,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/parse.service.ts:114",{"_index":1032,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/parse.service.ts:12",{"_index":1031,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/parse.service.ts:121",{"_index":1036,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/parse.service.ts:141",{"_index":1037,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/parse.service.ts:19",{"_index":1038,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/parse.service.ts:24",{"_index":1045,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/parse.service.ts:29",{"_index":1044,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/parse.service.ts:30",{"_index":1043,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/parse.service.ts:33",{"_index":1042,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/parse.service.ts:43",{"_index":1040,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/parse.service.ts:56",{"_index":1047,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/parse.service.ts:65",{"_index":1034,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/parse.service.ts:72",{"_index":1041,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/parse.service.ts:81",{"_index":1046,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/parse.service.ts:90",{"_index":1033,"title":{},"body":{"injectables/ParseService.html":{}}}],["src/app/services/shared.service.ts",{"_index":195,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SharedService.html":{},"coverage.html":{}}}],["src/app/services/shared.service.ts:12",{"_index":1175,"title":{},"body":{"injectables/SharedService.html":{}}}],["src/app/services/shared.service.ts:13",{"_index":1174,"title":{},"body":{"injectables/SharedService.html":{}}}],["src/app/services/shared.service.ts:15",{"_index":1171,"title":{},"body":{"injectables/SharedService.html":{}}}],["src/app/services/shared.service.ts:25",{"_index":1179,"title":{},"body":{"injectables/SharedService.html":{}}}],["src/app/services/shared.service.ts:30",{"_index":1177,"title":{},"body":{"injectables/SharedService.html":{}}}],["src/app/services/shared.service.ts:34",{"_index":1183,"title":{},"body":{"injectables/SharedService.html":{}}}],["src/app/services/shared.service.ts:39",{"_index":1181,"title":{},"body":{"injectables/SharedService.html":{}}}],["src/app/services/shared.service.ts:45",{"_index":1172,"title":{},"body":{"injectables/SharedService.html":{}}}],["src/app/services/shared.service.ts:55",{"_index":1173,"title":{},"body":{"injectables/SharedService.html":{}}}],["src/app/services/sniffer",{"_index":1337,"title":{},"body":{"injectables/SnifferTokenService.html":{},"coverage.html":{}}}],["src/app/services/sniffer.service.ts",{"_index":1274,"title":{},"body":{"injectables/SnifferService.html":{},"coverage.html":{}}}],["src/app/services/sniffer.service.ts:6",{"_index":1275,"title":{},"body":{"injectables/SnifferService.html":{}}}],["src/app/utli/index.ts",{"_index":308,"title":{},"body":{"classes/Consts.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utli/index.ts:15",{"_index":320,"title":{},"body":{"classes/Consts.html":{}}}],["src/app/utli/index.ts:17",{"_index":359,"title":{},"body":{"classes/Consts.html":{}}}],["src/app/utli/index.ts:25",{"_index":343,"title":{},"body":{"classes/Consts.html":{}}}],["src/app/utli/index.ts:32",{"_index":362,"title":{},"body":{"classes/Consts.html":{}}}],["src/app/utli/index.ts:34",{"_index":364,"title":{},"body":{"classes/Consts.html":{}}}],["src/app/utli/index.ts:41",{"_index":366,"title":{},"body":{"classes/Consts.html":{}}}],["src/app/utli/index.ts:65",{"_index":324,"title":{},"body":{"classes/Consts.html":{}}}],["src/app/utli/json",{"_index":1429,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utli/texts.ts",{"_index":1385,"title":{},"body":{"classes/Texts.html":{},"coverage.html":{}}}],["src/app/utli/texts.ts:3",{"_index":1388,"title":{},"body":{"classes/Texts.html":{}}}],["src/app/utli/texts.ts:7",{"_index":1387,"title":{},"body":{"classes/Texts.html":{}}}],["src/app/views/login/login.component.ts",{"_index":837,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/views/login/login.component.ts:16",{"_index":852,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/views/login/login.component.ts:17",{"_index":855,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/views/login/login.component.ts:18",{"_index":854,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/views/login/login.component.ts:19",{"_index":856,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/views/login/login.component.ts:20",{"_index":845,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/views/login/login.component.ts:30",{"_index":849,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/views/login/login.component.ts:34",{"_index":847,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/views/login/login.component.ts:41",{"_index":850,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/views/login/login.component.ts:61",{"_index":851,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/views/not",{"_index":897,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/views/sniffer",{"_index":1198,"title":{},"body":{"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"coverage.html":{}}}],["src/app/views/sniffers/sniffer",{"_index":1219,"title":{},"body":{"components/SnifferFormComponent.html":{},"coverage.html":{}}}],["src/app/views/sniffers/sniffers",{"_index":1356,"title":{},"body":{"components/SniffersListComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1435,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1437,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1438,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":957,"title":{},"body":{"classes/NotifierConfigModel.html":{},"miscellaneous/typealiases.html":{}}}],["started",{"_index":1403,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["startindex",{"_index":1139,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["startwith",{"_index":1060,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"components/SnifferTokenFormComponent.html":{}}}],["startwith(pagers",{"_index":1120,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["state",{"_index":892,"title":{},"body":{"guards/LoginResolverService.html":{},"guards/SnifferDataResolverService.html":{},"guards/SniffersResolverService.html":{},"guards/TokensResolverService.html":{}}}],["statements",{"_index":1408,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":309,"title":{},"body":{"classes/Consts.html":{},"classes/DataClass.html":{},"components/DataTableComponent.html":{},"classes/GenericClass.html":{},"modules/NotifierModule.html":{},"modules/SharedModule.html":{},"classes/SnifferClass.html":{},"classes/Texts.html":{},"classes/TokenClass.html":{},"classes/UserClass.html":{}}}],["stream",{"_index":1092,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"miscellaneous/functions.html":{}}}],["string",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"classes/Consts.html":{},"classes/DataClass.html":{},"components/DataTableComponent.html":{},"interfaces/DataWithCount.html":{},"classes/GenericClass.html":{},"components/LoginComponent.html":{},"components/NotifierComponent.html":{},"classes/NotifierConfigModel.html":{},"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"interfaces/SelectValue.html":{},"interfaces/SelectValueModel.html":{},"injectables/SharedService.html":{},"classes/SimpleDataSource.html":{},"classes/SnifferClass.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"injectables/SnifferTokenService.html":{},"components/SniffersListComponent.html":{},"classes/TokenClass.html":{},"classes/UserClass.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["subject",{"_index":637,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["subscribe(res",{"_index":792,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["subscription",{"_index":432,"title":{},"body":{"components/DataTableComponent.html":{}}}],["success",{"_index":932,"title":{},"body":{"components/NotifierComponent.html":{},"classes/NotifierConfigModel.html":{},"injectables/NotifierService.html":{},"miscellaneous/typealiases.html":{}}}],["super",{"_index":1064,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["support",{"_index":1521,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1522,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/FilterByColumComponent.html":{}}}],["switchmap",{"_index":1061,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["switchmap(_",{"_index":1121,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["tabla",{"_index":1366,"title":{},"body":{"components/SniffersListComponent.html":{}}}],["table",{"_index":422,"title":{},"body":{"components/DataTableComponent.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["table.component",{"_index":568,"title":{},"body":{"modules/DataTableModule.html":{}}}],["table.component.html",{"_index":424,"title":{},"body":{"components/DataTableComponent.html":{}}}],["table.component.scss",{"_index":423,"title":{},"body":{"components/DataTableComponent.html":{}}}],["table.component.ts",{"_index":419,"title":{},"body":{"components/DataTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:107",{"_index":455,"title":{},"body":{"components/DataTableComponent.html":{}}}],["table.component.ts:123",{"_index":452,"title":{},"body":{"components/DataTableComponent.html":{}}}],["table.component.ts:27",{"_index":466,"title":{},"body":{"components/DataTableComponent.html":{}}}],["table.component.ts:30",{"_index":444,"title":{},"body":{"components/DataTableComponent.html":{}}}],["table.component.ts:33",{"_index":445,"title":{},"body":{"components/DataTableComponent.html":{}}}],["table.component.ts:37",{"_index":447,"title":{},"body":{"components/DataTableComponent.html":{}}}],["table.component.ts:41",{"_index":482,"title":{},"body":{"components/DataTableComponent.html":{}}}],["table.component.ts:51",{"_index":449,"title":{},"body":{"components/DataTableComponent.html":{}}}],["table.component.ts:54",{"_index":464,"title":{},"body":{"components/DataTableComponent.html":{}}}],["table.component.ts:56",{"_index":468,"title":{},"body":{"components/DataTableComponent.html":{}}}],["table.component.ts:62",{"_index":475,"title":{},"body":{"components/DataTableComponent.html":{}}}],["table.component.ts:63",{"_index":472,"title":{},"body":{"components/DataTableComponent.html":{}}}],["table.component.ts:64",{"_index":480,"title":{},"body":{"components/DataTableComponent.html":{}}}],["table.component.ts:65",{"_index":469,"title":{},"body":{"components/DataTableComponent.html":{}}}],["table.component.ts:66",{"_index":470,"title":{},"body":{"components/DataTableComponent.html":{}}}],["table.component.ts:68",{"_index":479,"title":{},"body":{"components/DataTableComponent.html":{}}}],["table.component.ts:70",{"_index":443,"title":{},"body":{"components/DataTableComponent.html":{}}}],["table.component.ts:74",{"_index":461,"title":{},"body":{"components/DataTableComponent.html":{}}}],["table.component.ts:80",{"_index":460,"title":{},"body":{"components/DataTableComponent.html":{}}}],["table.component.ts:86",{"_index":458,"title":{},"body":{"components/DataTableComponent.html":{}}}],["table.component.ts:99",{"_index":463,"title":{},"body":{"components/DataTableComponent.html":{}}}],["table.module",{"_index":1167,"title":{},"body":{"modules/SharedModule.html":{}}}],["table.module.ts",{"_index":564,"title":{},"body":{"modules/DataTableModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["table.service",{"_index":569,"title":{},"body":{"modules/DataTableModule.html":{}}}],["table.service.ts",{"_index":631,"title":{},"body":{"injectables/DataTableService.html":{},"coverage.html":{}}}],["table.service.ts:6",{"_index":632,"title":{},"body":{"injectables/DataTableService.html":{}}}],["table/data",{"_index":563,"title":{},"body":{"modules/DataTableModule.html":{},"injectables/DataTableService.html":{},"interfaces/PropertySortFns.html":{},"modules/SharedModule.html":{},"classes/SimpleDataSource.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["table/details/details.component.ts",{"_index":707,"title":{},"body":{"components/DetailsComponent.html":{},"coverage.html":{}}}],["table/details/details.component.ts:12",{"_index":712,"title":{},"body":{"components/DetailsComponent.html":{}}}],["table/details/details.component.ts:8",{"_index":711,"title":{},"body":{"components/DetailsComponent.html":{}}}],["table/filter",{"_index":729,"title":{},"body":{"components/FilterByColumComponent.html":{},"interfaces/SelectValue.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["table/table/data",{"_index":418,"title":{},"body":{"components/DataTableComponent.html":{},"coverage.html":{}}}],["tablefield",{"_index":1195,"title":{},"body":{"classes/SnifferClass.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tablefield(target",{"_index":1476,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1441,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":643,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"components/SnifferTokenFormComponent.html":{},"injectables/SnifferTokenService.html":{}}}],["tap(page",{"_index":1125,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["tap(res",{"_index":700,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["tap(x",{"_index":1309,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["target",{"_index":1477,"title":{},"body":{"miscellaneous/functions.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["testfield",{"_index":1197,"title":{},"body":{"classes/SnifferClass.html":{}}}],["text",{"_index":879,"title":{},"body":{"components/LoginComponent.html":{},"components/NotifierComponent.html":{},"classes/NotifierConfigModel.html":{},"injectables/NotifierService.html":{},"interfaces/SelectValue.html":{},"miscellaneous/enumerations.html":{}}}],["texts",{"_index":1384,"title":{"classes/Texts.html":{}},"body":{"classes/Texts.html":{},"coverage.html":{}}}],["this._query",{"_index":500,"title":{},"body":{"components/DataTableComponent.html":{},"components/FilterByColumComponent.html":{}}}],["this._query.equalto(attribute",{"_index":778,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["this.appdefaultoptions.loading",{"_index":219,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SharedService.html":{}}}],["this.appdefaultoptions.loadingmode",{"_index":224,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SharedService.html":{}}}],["this.appoptionsobservable",{"_index":215,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SharedService.html":{}}}],["this.appoptionssubject",{"_index":212,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SharedService.html":{}}}],["this.appoptionssubject.asobservable",{"_index":216,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SharedService.html":{}}}],["this.appoptionssubject.next(this.appoptionssubject",{"_index":220,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SharedService.html":{}}}],["this.bartitle",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["this.bottomsheetref.dismiss(null",{"_index":1254,"title":{},"body":{"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{}}}],["this.bottomsheetref.dismiss(res",{"_index":1262,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["this.bottonsheet.open(snifferformcomponent",{"_index":1372,"title":{},"body":{"components/SniffersListComponent.html":{}}}],["this.bottonsheet.open(sniffertokenformcomponent",{"_index":1332,"title":{},"body":{"components/SnifferTokenListComponent.html":{}}}],["this.buildform(this.fb",{"_index":771,"title":{},"body":{"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/SnifferFormComponent.html":{}}}],["this.canshowtoolbar",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["this.columns",{"_index":510,"title":{},"body":{"components/DataTableComponent.html":{},"components/SniffersListComponent.html":{}}}],["this.colums",{"_index":810,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["this.count(query",{"_index":695,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["this.create",{"_index":1256,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["this.data",{"_index":532,"title":{},"body":{"components/DataTableComponent.html":{},"components/SnifferTokenListComponent.html":{}}}],["this.data.object",{"_index":1252,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["this.datasource",{"_index":535,"title":{},"body":{"components/DataTableComponent.html":{}}}],["this.fb.group",{"_index":1353,"title":{},"body":{"injectables/SnifferTokenService.html":{}}}],["this.filterapplicationlist(this.form.controls",{"_index":1302,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["this.filteredlelist",{"_index":1301,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["this.findbyquery(changes.query.currentvalue",{"_index":518,"title":{},"body":{"components/DataTableComponent.html":{}}}],["this.findbyquery(query",{"_index":504,"title":{},"body":{"components/DataTableComponent.html":{},"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["this.findbyquery(this._query",{"_index":509,"title":{},"body":{"components/DataTableComponent.html":{}}}],["this.finddata",{"_index":537,"title":{},"body":{"components/DataTableComponent.html":{},"guards/SnifferDataResolverService.html":{},"guards/SniffersResolverService.html":{}}}],["this.form",{"_index":770,"title":{},"body":{"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{}}}],["this.form.controls.attribute.markaspristine",{"_index":785,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["this.form.controls.value.markaspristine",{"_index":784,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["this.form.patchvalue",{"_index":781,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["this.form.valid",{"_index":775,"title":{},"body":{"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{}}}],["this.form.value",{"_index":776,"title":{},"body":{"components/FilterByColumComponent.html":{},"components/SnifferFormComponent.html":{}}}],["this.form.value.attribute",{"_index":811,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["this.getschema",{"_index":769,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["this.handleerrors(err",{"_index":659,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["this.handlerouter",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isloadingautocomplete",{"_index":1310,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["this.loading",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["this.logout().then",{"_index":706,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["this.mapdatatable",{"_index":534,"title":{},"body":{"components/DataTableComponent.html":{}}}],["this.ngzone.run",{"_index":871,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.notifier.showerror('nombre",{"_index":875,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.notifier.showsuccess('bienvenido",{"_index":872,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.open('shared.toast.createddata",{"_index":1018,"title":{},"body":{"injectables/NotifierService.html":{}}}],["this.open('shared.toast.loaded",{"_index":1024,"title":{},"body":{"injectables/NotifierService.html":{}}}],["this.open('shared.toast.updateddata",{"_index":1019,"title":{},"body":{"injectables/NotifierService.html":{}}}],["this.open(message",{"_index":1025,"title":{},"body":{"injectables/NotifierService.html":{}}}],["this.open(null",{"_index":1020,"title":{},"body":{"injectables/NotifierService.html":{}}}],["this.pageevent",{"_index":520,"title":{},"body":{"components/DataTableComponent.html":{}}}],["this.pageevent.pageindex",{"_index":539,"title":{},"body":{"components/DataTableComponent.html":{}}}],["this.pageevent.pagesize",{"_index":540,"title":{},"body":{"components/DataTableComponent.html":{}}}],["this.pageindex",{"_index":517,"title":{},"body":{"components/DataTableComponent.html":{}}}],["this.pagesize",{"_index":521,"title":{},"body":{"components/DataTableComponent.html":{}}}],["this.paginator.pageindex",{"_index":503,"title":{},"body":{"components/DataTableComponent.html":{}}}],["this.parse.createobject(data",{"_index":1259,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["this.parse.findbyquery(q",{"_index":1383,"title":{},"body":{"guards/SniffersResolverService.html":{}}}],["this.parse.findbyquery(query).pipe",{"_index":1349,"title":{},"body":{"injectables/SnifferTokenService.html":{}}}],["this.parse.findwithcount(query",{"_index":526,"title":{},"body":{"components/DataTableComponent.html":{}}}],["this.parse.islogin",{"_index":895,"title":{},"body":{"guards/LoginResolverService.html":{}}}],["this.parse.login(this.form.value).subscribe(response",{"_index":869,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.parse.logout().then",{"_index":227,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SharedService.html":{}}}],["this.parse.query(snifferclass.classname",{"_index":1345,"title":{},"body":{"injectables/SnifferTokenService.html":{}}}],["this.parse.runcloudfunction(consts.cloud_function.filter_columns",{"_index":790,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["this.pfiedtype",{"_index":878,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.picontooltip",{"_index":880,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.preparedata(this.data.object",{"_index":1253,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["this.query",{"_index":780,"title":{},"body":{"components/FilterByColumComponent.html":{},"components/SnifferDataListComponent.html":{},"guards/SnifferDataResolverService.html":{},"components/SniffersListComponent.html":{},"guards/SniffersResolverService.html":{}}}],["this.query.classname",{"_index":791,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["this.querychange.emit(this._query",{"_index":505,"title":{},"body":{"components/DataTableComponent.html":{},"components/FilterByColumComponent.html":{}}}],["this.ref.dismiss",{"_index":933,"title":{},"body":{"components/NotifierComponent.html":{}}}],["this.route.root",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["this.route.snapshot.data.data",{"_index":1210,"title":{},"body":{"components/SnifferDataListComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["this.router.events.subscribe((event",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate",{"_index":228,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataWithCount.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"injectables/ParseService.html":{},"injectables/SharedService.html":{}}}],["this.rows",{"_index":1066,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["this.schema",{"_index":793,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["this.service.buildsniffertokenform",{"_index":1300,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["this.service.filterapplicationlistcallback(x",{"_index":1321,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["this.setcanshowtoolbar(event",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["this.setcolumns(res",{"_index":794,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["this.settitle",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["this.shared.logout",{"_index":294,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["this.sharedservice.prepareobjecttoupdate(this.form",{"_index":1263,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["this.snackbar.openfromcomponent(notifiercomponent",{"_index":1011,"title":{},"body":{"injectables/NotifierService.html":{}}}],["this.subscription",{"_index":512,"title":{},"body":{"components/DataTableComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":513,"title":{},"body":{"components/DataTableComponent.html":{}}}],["this.text",{"_index":928,"title":{},"body":{"components/NotifierComponent.html":{}}}],["this.title.settitle(contextpathtitle",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["this.totalrows",{"_index":530,"title":{},"body":{"components/DataTableComponent.html":{}}}],["this.type",{"_index":930,"title":{},"body":{"components/NotifierComponent.html":{}}}],["this.update",{"_index":1255,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["throw",{"_index":800,"title":{},"body":{"components/FilterByColumComponent.html":{},"injectables/NotifierService.html":{},"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["throwerror",{"_index":638,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["throwerror(err",{"_index":660,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["title",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{}}}],["todo",{"_index":1105,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"components/SnifferFormComponent.html":{},"guards/SniffersResolverService.html":{}}}],["token",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{},"classes/TokenClass.html":{},"coverage.html":{}}}],["token.service",{"_index":1299,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["token.service.ts",{"_index":1338,"title":{},"body":{"injectables/SnifferTokenService.html":{},"coverage.html":{}}}],["token.service.ts:13",{"_index":1341,"title":{},"body":{"injectables/SnifferTokenService.html":{}}}],["token.service.ts:23",{"_index":1344,"title":{},"body":{"injectables/SnifferTokenService.html":{}}}],["token.service.ts:49",{"_index":1342,"title":{},"body":{"injectables/SnifferTokenService.html":{}}}],["token/sniffer",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"coverage.html":{}}}],["tokenclass",{"_index":1293,"title":{"classes/TokenClass.html":{}},"body":{"components/SnifferTokenFormComponent.html":{},"injectables/SnifferTokenService.html":{},"classes/TokenClass.html":{},"coverage.html":{}}}],["tokenclass.expiry",{"_index":1354,"title":{},"body":{"injectables/SnifferTokenService.html":{}}}],["tokenclass.sniffer",{"_index":1303,"title":{},"body":{"components/SnifferTokenFormComponent.html":{},"injectables/SnifferTokenService.html":{}}}],["tokens",{"_index":296,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["tokensresolverservice",{"_index":254,"title":{"guards/TokensResolverService.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/TokensResolverService.html":{},"coverage.html":{}}}],["toolbar",{"_index":280,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["toolbar'},{'name",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["toolbar.component",{"_index":1162,"title":{},"body":{"modules/SharedModule.html":{}}}],["toolbar.component.html",{"_index":282,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":281,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["toolbar.component.ts",{"_index":277,"title":{},"body":{"components/AppToolbarComponent.html":{},"coverage.html":{}}}],["toolbar.component.ts:12",{"_index":287,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["toolbar.component.ts:17",{"_index":292,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["toolbar.component.ts:20",{"_index":291,"title":{},"body":{"components/AppToolbarComponent.html":{}}}],["top",{"_index":956,"title":{},"body":{"classes/NotifierConfigModel.html":{},"injectables/NotifierService.html":{},"miscellaneous/typealiases.html":{}}}],["tosortfn",{"_index":1421,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tosortfn(sortfns",{"_index":1076,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"miscellaneous/functions.html":{}}}],["totalrows",{"_index":433,"title":{},"body":{"components/DataTableComponent.html":{}}}],["treat",{"_index":1070,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["true",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/DataTableComponent.html":{},"interfaces/DataWithCount.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"components/SnifferTokenListComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tslib",{"_index":1462,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":506,"title":{},"body":{"components/DataTableComponent.html":{},"components/FilterByColumComponent.html":{}}}],["type",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"classes/Consts.html":{},"classes/DataClass.html":{},"components/DataTableComponent.html":{},"interfaces/DataWithCount.html":{},"interfaces/DialogDataInterface.html":{},"components/FilterByColumComponent.html":{},"classes/GenericClass.html":{},"components/LoginComponent.html":{},"guards/LoginResolverService.html":{},"components/NotifierComponent.html":{},"classes/NotifierConfigModel.html":{},"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"interfaces/SelectValue.html":{},"interfaces/SelectValueModel.html":{},"injectables/SharedService.html":{},"classes/SimpleDataSource.html":{},"classes/SnifferClass.html":{},"components/SnifferDataListComponent.html":{},"guards/SnifferDataResolverService.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"injectables/SnifferTokenService.html":{},"components/SniffersListComponent.html":{},"guards/SniffersResolverService.html":{},"classes/Texts.html":{},"classes/TokenClass.html":{},"guards/TokensResolverService.html":{},"classes/UserClass.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1530,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1308,"title":{},"body":{"components/SnifferTokenFormComponent.html":{}}}],["u",{"_index":1073,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["un",{"_index":1496,"title":{},"body":{"index.html":{}}}],["una",{"_index":1365,"title":{},"body":{"components/SniffersListComponent.html":{},"guards/SniffersResolverService.html":{}}}],["undefined",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"guards/TokensResolverService.html":{}}}],["update",{"_index":1228,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["updated",{"_index":985,"title":{},"body":{"injectables/NotifierService.html":{}}}],["updated_at",{"_index":409,"title":{},"body":{"classes/DataClass.html":{},"classes/GenericClass.html":{},"classes/SnifferClass.html":{},"classes/TokenClass.html":{},"classes/UserClass.html":{}}}],["updated_by",{"_index":835,"title":{},"body":{"classes/GenericClass.html":{}}}],["updatedat",{"_index":381,"title":{},"body":{"classes/Consts.html":{},"classes/DataClass.html":{},"classes/GenericClass.html":{},"classes/SnifferClass.html":{},"classes/TokenClass.html":{},"classes/UserClass.html":{}}}],["updatedby",{"_index":836,"title":{},"body":{"classes/GenericClass.html":{}}}],["updateerror",{"_index":986,"title":{},"body":{"injectables/NotifierService.html":{}}}],["updateobject",{"_index":664,"title":{},"body":{"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["url",{"_index":332,"title":{},"body":{"classes/Consts.html":{}}}],["use",{"_index":339,"title":{},"body":{"classes/Consts.html":{}}}],["useclass",{"_index":627,"title":{},"body":{"modules/DataTableModule.html":{}}}],["usedefault",{"_index":1077,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"miscellaneous/functions.html":{}}}],["user_name",{"_index":1401,"title":{},"body":{"classes/UserClass.html":{}}}],["userclass",{"_index":853,"title":{"classes/UserClass.html":{}},"body":{"components/LoginComponent.html":{},"classes/UserClass.html":{},"coverage.html":{}}}],["userclass.password",{"_index":867,"title":{},"body":{"components/LoginComponent.html":{}}}],["userclass.user_name",{"_index":866,"title":{},"body":{"components/LoginComponent.html":{}}}],["username",{"_index":394,"title":{},"body":{"classes/Consts.html":{},"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{},"classes/UserClass.html":{}}}],["uses",{"_index":1087,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["usevalue",{"_index":629,"title":{},"body":{"modules/DataTableModule.html":{}}}],["using",{"_index":1086,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{}}}],["usuario",{"_index":395,"title":{},"body":{"classes/Consts.html":{},"components/LoginComponent.html":{}}}],["util",{"_index":493,"title":{},"body":{"components/DataTableComponent.html":{}}}],["util.ts",{"_index":1049,"title":{},"body":{"interfaces/PropertySortFns.html":{},"classes/SimpleDataSource.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["util.ts:11",{"_index":1189,"title":{},"body":{"classes/SimpleDataSource.html":{}}}],["util.ts:36",{"_index":1053,"title":{},"body":{"interfaces/PropertySortFns.html":{}}}],["util.ts:6",{"_index":1187,"title":{},"body":{"classes/SimpleDataSource.html":{}}}],["util.ts:9",{"_index":1188,"title":{},"body":{"classes/SimpleDataSource.html":{}}}],["utilize",{"_index":1516,"title":{},"body":{"index.html":{}}}],["utli",{"_index":644,"title":{},"body":{"interfaces/DataWithCount.html":{},"components/FilterByColumComponent.html":{},"injectables/ParseService.html":{},"components/SnifferFormComponent.html":{}}}],["utli/json",{"_index":1250,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["valida",{"_index":1268,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["validator",{"_index":1251,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["validator.ts",{"_index":1430,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validators",{"_index":765,"title":{},"body":{"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"injectables/SnifferTokenService.html":{}}}],["validators.pattern(consts.patterns.ip",{"_index":1265,"title":{},"body":{"components/SnifferFormComponent.html":{}}}],["validators.required",{"_index":773,"title":{},"body":{"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/SnifferFormComponent.html":{},"injectables/SnifferTokenService.html":{}}}],["valor",{"_index":821,"title":{},"body":{"components/FilterByColumComponent.html":{}}}],["value",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"modules/AppRoutingModule.html":{},"components/AppToolbarComponent.html":{},"classes/Consts.html":{},"classes/DataClass.html":{},"components/DataTableComponent.html":{},"components/FilterByColumComponent.html":{},"classes/GenericClass.html":{},"components/LoginComponent.html":{},"injectables/ParseService.html":{},"interfaces/SelectValue.html":{},"interfaces/SelectValueModel.html":{},"injectables/SharedService.html":{},"classes/SnifferClass.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"injectables/SnifferTokenService.html":{},"classes/TokenClass.html":{},"classes/UserClass.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.trim",{"_index":779,"title":{},"body":{"components/FilterByColumComponent.html":{},"injectables/SnifferTokenService.html":{}}}],["var",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["variable",{"_index":1417,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1533,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1488,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":953,"title":{},"body":{"classes/NotifierConfigModel.html":{},"miscellaneous/typealiases.html":{}}}],["verticalposition",{"_index":945,"title":{},"body":{"classes/NotifierConfigModel.html":{},"injectables/NotifierService.html":{}}}],["viewchild",{"_index":484,"title":{},"body":{"components/DataTableComponent.html":{}}}],["viewchild(matpaginator",{"_index":478,"title":{},"body":{"components/DataTableComponent.html":{}}}],["views/login/login.component",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["views/not",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["views/sniffer",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["views/sniffers/sniffer",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["views/sniffers/sniffers",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["visibility",{"_index":883,"title":{},"body":{"components/LoginComponent.html":{}}}],["vista",{"_index":1361,"title":{},"body":{"components/SniffersListComponent.html":{}}}],["visualización",{"_index":1480,"title":{},"body":{"index.html":{}}}],["void",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/AppToolbarComponent.html":{},"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/FabButtonComponent.html":{},"components/FilterByColumComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/NotifierComponent.html":{},"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"interfaces/PropertySortFns.html":{},"injectables/SharedService.html":{},"classes/SimpleDataSource.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferFormComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["volver",{"_index":906,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["w",{"_index":353,"title":{},"body":{"classes/Consts.html":{}}}],["warn",{"_index":960,"title":{},"body":{"classes/NotifierConfigModel.html":{},"injectables/NotifierService.html":{},"miscellaneous/typealiases.html":{}}}],["web",{"_index":333,"title":{},"body":{"classes/Consts.html":{}}}],["width",{"_index":544,"title":{},"body":{"components/DataTableComponent.html":{},"components/NotifierComponent.html":{}}}],["withcount",{"_index":454,"title":{},"body":{"components/DataTableComponent.html":{},"interfaces/DataWithCount.html":{},"injectables/ParseService.html":{}}}],["withcount).subscribe(res",{"_index":527,"title":{},"body":{"components/DataTableComponent.html":{}}}],["works",{"_index":541,"title":{},"body":{"components/DataTableComponent.html":{},"components/DetailsComponent.html":{},"components/SnifferDataDetailComponent.html":{},"components/SnifferDataListComponent.html":{},"components/SnifferTokenFormComponent.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["ws",{"_index":336,"title":{},"body":{"classes/Consts.html":{}}}],["wss",{"_index":340,"title":{},"body":{"classes/Consts.html":{}}}],["x",{"_index":551,"title":{},"body":{"components/DataTableComponent.html":{},"components/FilterByColumComponent.html":{},"components/SnifferTokenFormComponent.html":{}}}],["x.get(snifferclass.name",{"_index":1351,"title":{},"body":{"injectables/SnifferTokenService.html":{}}}],["x.get(snifferclass.object_id",{"_index":1352,"title":{},"body":{"injectables/SnifferTokenService.html":{}}}],["yes",{"_index":997,"title":{},"body":{"injectables/NotifierService.html":{},"injectables/ParseService.html":{},"components/SnifferTokenListComponent.html":{},"components/SniffersListComponent.html":{}}}],["yyyy",{"_index":616,"title":{},"body":{"modules/DataTableModule.html":{},"miscellaneous/variables.html":{}}}],["z",{"_index":349,"title":{},"body":{"classes/Consts.html":{}}}],["z]{2",{"_index":351,"title":{},"body":{"classes/Consts.html":{}}}],["za",{"_index":348,"title":{},"body":{"classes/Consts.html":{}}}],["zone.js",{"_index":1464,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/DataTableModule.html":{},"modules/NotifierModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                barTitle\n                            \n                            \n                                canShowToolBar\n                            \n                            \n                                loading\n                            \n                            \n                                progressBarMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleRouter\n                            \n                            \n                                setCanShowToolBar\n                            \n                            \n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, title: Title, route: ActivatedRoute, sharedService: SharedService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sharedService\n                                                  \n                                                        \n                                                                        SharedService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRouter\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRouter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCanShowToolBar\n                        \n                        \n                    \n                \n            \n            \n                \nsetCanShowToolBar(event: RouterEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RouterEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTitle\n                        \n                        \n                    \n                \n            \n            \n                \nsetTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            barTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canShowToolBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            progressBarMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'indeterminate'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport {\n  Router,\n  Event,\n  NavigationError,\n  NavigationCancel,\n  NavigationEnd,\n  NavigationStart,\n  ActivatedRoute, RouterEvent\n} from '@angular/router'\nimport { Title } from '@angular/platform-browser'\nimport { SharedService } from './services/shared.service'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [ './app.component.scss' ]\n})\nexport class AppComponent {\n\n  loading: boolean\n  barTitle: string\n  progressBarMode = 'indeterminate'\n  canShowToolBar = false\n\n  constructor(private router: Router,\n              private title: Title,\n              private route: ActivatedRoute,\n              private sharedService: SharedService) {\n\n    this.handleRouter()\n  }\n\n\n  handleRouter() {\n\n    this.router.events.subscribe((event: Event) => {\n\n      switch (true) {\n        case event instanceof NavigationStart:\n          this.loading = true\n          this.setCanShowToolBar(event as RouterEvent)\n          break\n\n        case event instanceof NavigationEnd:\n          this.setTitle()\n          this.loading = false\n          break\n\n        case event instanceof NavigationCancel:\n        case event instanceof NavigationError:\n          this.loading = false\n          break\n\n        default:\n          break\n\n      }\n    })\n  }\n\n\n  setTitle() {\n\n    let currentRoute = this.route.root\n    while (currentRoute.children[ 0 ] !== undefined) {\n      currentRoute = currentRoute.children[ 0 ]\n    }\n    const contextPathTitle = `${ currentRoute.snapshot.data.title || '' }`\n    this.title.setTitle(contextPathTitle)\n    this.barTitle = contextPathTitle\n  }\n\n\n  setCanShowToolBar(event: RouterEvent) {\n\n    const exceptions = [\n      '/login',\n      '/',\n    ]\n    this.canShowToolBar = !exceptions.includes(event.url)\n\n  }\n\n}\n\n    \n\n    \n        \n\n  \n  \n\n\n\n    \n   -->\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'DataTableComponent', 'selector': 'app-data-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FabButtonComponent', 'selector': 'app-fab-button'},{'name': 'FilterByColumComponent', 'selector': 'app-filter-by-colum'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotifierComponent', 'selector': 'app-notifier'},{'name': 'SnifferDataDetailComponent', 'selector': 'app-sniffer-data-detail'},{'name': 'SnifferDataListComponent', 'selector': 'app-sniffer-data-list'},{'name': 'SnifferFormComponent', 'selector': 'app-sniffer-form'},{'name': 'SniffersListComponent', 'selector': 'app-sniffers-list'},{'name': 'SnifferTokenFormComponent', 'selector': 'app-sniffer-token-form'},{'name': 'SnifferTokenListComponent', 'selector': 'app-sniffer-token-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFabButtonComponent\n\nFabButtonComponent\n\nAppModule -->\n\nFabButtonComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nSnifferDataDetailComponent\n\nSnifferDataDetailComponent\n\nAppModule -->\n\nSnifferDataDetailComponent->AppModule\n\n\n\n\n\nSnifferDataListComponent\n\nSnifferDataListComponent\n\nAppModule -->\n\nSnifferDataListComponent->AppModule\n\n\n\n\n\nSnifferFormComponent\n\nSnifferFormComponent\n\nAppModule -->\n\nSnifferFormComponent->AppModule\n\n\n\n\n\nSnifferTokenFormComponent\n\nSnifferTokenFormComponent\n\nAppModule -->\n\nSnifferTokenFormComponent->AppModule\n\n\n\n\n\nSnifferTokenListComponent\n\nSnifferTokenListComponent\n\nAppModule -->\n\nSnifferTokenListComponent->AppModule\n\n\n\n\n\nSniffersListComponent\n\nSniffersListComponent\n\nAppModule -->\n\nSniffersListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            FabButtonComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NotFoundComponent\n                        \n                        \n                            SnifferDataDetailComponent\n                        \n                        \n                            SnifferDataListComponent\n                        \n                        \n                            SnifferFormComponent\n                        \n                        \n                            SnifferTokenFormComponent\n                        \n                        \n                            SnifferTokenListComponent\n                        \n                        \n                            SniffersListComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            SnifferFormComponent\n                        \n                        \n                            SnifferTokenFormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser'\nimport { NgModule } from '@angular/core'\n\nimport { AppRoutingModule } from './modules/app-routing.module'\nimport { AppComponent } from './app.component'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { SharedModule } from './modules/shared.module'\nimport { LoginComponent } from './views/login/login.component'\nimport { NotFoundComponent } from './views/not-found/not-found.component'\nimport { SnifferTokenListComponent } from './views/sniffer-token/sniffer-token-list/sniffer-token-list.component'\nimport { SnifferTokenFormComponent } from './views/sniffer-token/sniffer-token-form/sniffer-token-form.component'\nimport { SnifferDataListComponent } from './views/sniffer-data/sniffer-data-list/sniffer-data-list.component'\nimport { SnifferDataDetailComponent } from './views/sniffer-data/sniffer-data-detail/sniffer-data-detail.component'\nimport { SniffersListComponent } from './views/sniffers/sniffers-list/sniffers-list.component'\nimport { SnifferFormComponent } from './views/sniffers/sniffer-form/sniffer-form.component'\nimport { FabButtonComponent } from './components/fab-button/fab-button.component'\nimport { MatAutocompleteModule } from '@angular/material/autocomplete'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    NotFoundComponent,\n    SnifferTokenListComponent,\n    SnifferTokenFormComponent,\n    SnifferDataListComponent,\n    SnifferDataDetailComponent,\n    SniffersListComponent,\n    SnifferFormComponent,\n    FabButtonComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    SharedModule.forRoot(),\n    MatAutocompleteModule\n  ],\n  providers: [],\n  entryComponents: [\n    SnifferTokenFormComponent,\n    SnifferFormComponent,\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppOptions.html":{"url":"interfaces/AppOptions.html","title":"interface - AppOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/shared.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        loading\n                                \n                                \n                                        loadingMode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadingMode\n                                    \n                                \n                                \n                                    \n                                        loadingMode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core'\nimport { BehaviorSubject, Observable } from 'rxjs'\nimport { Router } from '@angular/router'\nimport { ParseService } from './parse.service'\nimport { FormGroup } from '@angular/forms'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n\n  private appOptionsSubject: BehaviorSubject\n  appOptionsObservable: Observable\n\n  appDefaultOptions: Partial = {}\n\n\n  constructor(private router: Router,\n              private parse: ParseService,\n              private ngZone: NgZone) {\n    this.appOptionsSubject = new BehaviorSubject(this.appDefaultOptions)\n    this.appOptionsObservable = this.appOptionsSubject.asObservable()\n  }\n\n  set appLoading(value: boolean) {\n    this.appDefaultOptions.loading = value\n    this.appOptionsSubject.next(this.appOptionsSubject)\n  }\n\n  get appLoading(): boolean {\n    return this.appDefaultOptions.loading\n  }\n\n  set appLoadingMode(value: string) {\n    this.appDefaultOptions.loadingMode = value\n    this.appOptionsSubject.next(this.appOptionsSubject)\n  }\n\n  get appLoadingMode(): string {\n    return this.appDefaultOptions.loadingMode\n  }\n\n  // --------------------------------------------\n\n  logOut() {\n    this.parse.logOut().then(() => {\n      this.router.navigate([ '/login' ])\n    })\n  }\n\n  /**\n   *\n   * @param form\n   */\n  prepareObjectToUpdate(form: FormGroup): any {\n    const dataToUpdate = {}\n    for (const control in form.controls) {\n      if (!form.controls[ control ].dirty) {continue}\n      dataToUpdate[ control ] = form.controls[ control ].value\n    }\n    return dataToUpdate\n  }\n}\n\n\nexport interface AppOptions {\n  loading: boolean\n  loadingMode: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText() {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\nimport { NotFoundComponent } from '../views/not-found/not-found.component'\nimport { LoginComponent } from '../views/login/login.component'\nimport { SnifferTokenListComponent } from '../views/sniffer-token/sniffer-token-list/sniffer-token-list.component'\nimport { SnifferDataListComponent } from '../views/sniffer-data/sniffer-data-list/sniffer-data-list.component'\nimport { SnifferDataDetailComponent } from '../views/sniffer-data/sniffer-data-detail/sniffer-data-detail.component'\nimport { SniffersListComponent } from '../views/sniffers/sniffers-list/sniffers-list.component'\nimport { TokensResolverService } from '../resolvers/tokens-resolver.service'\nimport { LoginResolverService } from '../resolvers/login-resolver.service'\nimport { SniffersResolverService } from '../resolvers/sniffers-resolver.service'\nimport { SnifferDataResolverService } from '../resolvers/sniffer-data-resolver.service'\n\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent,\n    resolve: { data: LoginResolverService },\n    data: { title: 'Login', type: 'login' }\n  },\n  {\n    path: 'sniffer-token',\n    component: SnifferTokenListComponent,\n    resolve: { data: TokensResolverService },\n    data: {\n      type: 'list',\n      title: 'Lista de Token'\n    },\n  },\n  {\n    path: 'sniffer-data',\n    component: SnifferDataListComponent,\n    resolve: { data: SnifferDataResolverService },\n    data: {\n      type: 'list',\n      title: 'Lista Datos de Sniffer'\n    }\n  },\n  {\n    path: 'sniffer-data/detail/:id',\n    component: SnifferDataDetailComponent,\n    data: {\n      title: 'Detalles de datos',\n      type: 'detail',\n    }\n  },\n  {\n    path: 'sniffers-list',\n    component: SniffersListComponent,\n     resolve: { data: SniffersResolverService },\n    data: {\n      title: 'Lista de Sniffers',\n      type: 'list',\n    }\n  },\n\n  { path: '', redirectTo: 'login', pathMatch: 'full', data: { type: 'login' } },\n  { path: '**', component: NotFoundComponent, data: { type: 'notFound', value: 'notFound' } },\n\n]\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppToolbarComponent.html":{"url":"components/AppToolbarComponent.html","title":"component - AppToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/toolbar/app-toolbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toolbar\n            \n\n            \n                styleUrls\n                ./toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toolbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(shared: SharedService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/toolbar/app-toolbar.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        shared\n                                                  \n                                                        \n                                                                        SharedService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Default value : 'Nombre pantalla'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/toolbar/app-toolbar.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            exit\n                        \n                        \n                    \n                \n            \n            \n                \nexit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/app-toolbar.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/app-toolbar.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core'\nimport { SharedService } from '../../services/shared.service'\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: [ './toolbar.component.scss' ]\n})\nexport class AppToolbarComponent implements OnInit {\n\n\n  @Input() title = 'Nombre pantalla'\n\n  constructor(private shared: SharedService) {\n  }\n\n  ngOnInit() {\n  }\n\n  exit() {\n    this.shared.logOut()\n  }\n}\n\n    \n\n    \n        \n  \n    \n      menu\n    \n    -->\n    {{ title }}\n    \n    \n       Tokens \n       Datos \n       Sniffers \n       Salir \n\n    \n  \n  \n        SimpleCRM helps you easily manage your contacts\n      \n      -->\n\n\n    \n\n    \n                \n                    ./toolbar.component.scss\n                \n                \n\n.spacer {\n  flex: 1 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            menu        -->    {{ title }}               Tokens        Datos        Sniffers        Salir                 SimpleCRM helps you easily manage your contacts            -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'DataTableComponent', 'selector': 'app-data-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FabButtonComponent', 'selector': 'app-fab-button'},{'name': 'FilterByColumComponent', 'selector': 'app-filter-by-colum'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotifierComponent', 'selector': 'app-notifier'},{'name': 'SnifferDataDetailComponent', 'selector': 'app-sniffer-data-detail'},{'name': 'SnifferDataListComponent', 'selector': 'app-sniffer-data-list'},{'name': 'SnifferFormComponent', 'selector': 'app-sniffer-form'},{'name': 'SniffersListComponent', 'selector': 'app-sniffers-list'},{'name': 'SnifferTokenFormComponent', 'selector': 'app-sniffer-token-form'},{'name': 'SnifferTokenListComponent', 'selector': 'app-sniffer-token-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Consts.html":{"url":"classes/Consts.html","title":"class - Consts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Consts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utli/index.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                APP_VERSION\n                            \n                            \n                                    Static\n                                    Readonly\n                                CLOUD_FUNCTION\n                            \n                            \n                                    Static\n                                    Readonly\n                                parseConf\n                            \n                            \n                                    Static\n                                    Readonly\n                                PATTERNS\n                            \n                            \n                                    Static\n                                SNACKBAR_DURATION\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    PUBLIC_ACL\n                                \n                                \n                                    COLUMNS_NAME\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            APP_VERSION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0.0.2'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/utli/index.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            CLOUD_FUNCTION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    FILTER_COLUMNS: '_filter_columns'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/utli/index.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            parseConf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    applicationId: 'proyectoGradoSniffer',\n    serverURL: `${ serve }/sniffer-backend`,\n    // ------------ live query url (web socket) --`---------- //\n    liveQueryUrl: `ws://${ serve }/sniffer-backend`, // don't forget use wss in secure enviroment\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/utli/index.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            PATTERNS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    emailExpression: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    alphanum_space_expression: /[\\w ]+/,\n    alpha_expression: /[a-zA-ZñÑ áéíóúüÁÉÍÓÚÜ]+/,\n    ip: /^(?!0)(?!.*\\.$)((1?\\d?\\d|25[0-5]|2[0-4]\\d)(\\.|$)){4}$/\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/utli/index.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            SNACKBAR_DURATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/utli/index.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        PUBLIC_ACL\n                    \n                \n\n                \n                    \n                        getPUBLIC_ACL()\n                    \n                \n                            \n                                \n                                    Defined in src/app/utli/index.ts:34\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        COLUMNS_NAME\n                    \n                \n\n                \n                    \n                        getCOLUMNS_NAME()\n                    \n                \n                            \n                                \n                                    Defined in src/app/utli/index.ts:41\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import * as Parse from 'parse'\n\n/**\n * public server\n */\n// export const serve = 'https://sniffer-back.ddns.net'\n/**\n * local server\n */\nexport const serve = 'http://localhost:5337'\n\n\nexport class Consts {\n\n  public static readonly APP_VERSION = '0.0.2'\n\n  public static readonly PATTERNS = {\n    emailExpression: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    alphanum_space_expression: /[\\w ]+/,\n    alpha_expression: /[a-zA-ZñÑ áéíóúüÁÉÍÓÚÜ]+/,\n    ip: /^(?!0)(?!.*\\.$)((1?\\d?\\d|25[0-5]|2[0-4]\\d)(\\.|$)){4}$/\n  }\n\n\n  public static readonly parseConf = {\n    applicationId: 'proyectoGradoSniffer',\n    serverURL: `${ serve }/sniffer-backend`,\n    // ------------ live query url (web socket) --`---------- //\n    liveQueryUrl: `ws://${ serve }/sniffer-backend`, // don't forget use wss in secure enviroment\n  }\n\n  public static SNACKBAR_DURATION = 3000\n\n  public static get PUBLIC_ACL() {\n    const acl = new Parse.ACL()\n    acl.setPublicWriteAccess(true)\n    acl.setPublicReadAccess(true)\n    return acl\n  }\n\n  public static get COLUMNS_NAME() {\n\n    return {\n\n      objectId: 'Id',\n      ip: 'IP',\n      config: 'Configuración',\n      updatedAt: 'Fecha de Actualización',\n      createdAt: 'Fecha de Creación',\n      name: 'Nombre',\n      sniffer: 'Rastreador',\n      protocol: 'Protocolo',\n      port: 'Puerto',\n      expiry: 'Fecha Expiración',\n      hash: 'Hash',\n      username: 'Nombre de Usuario',\n      email: 'Correo Electrónico',\n      active: 'Activo'\n\n    }\n\n\n  }\n\n  public static readonly CLOUD_FUNCTION = {\n    FILTER_COLUMNS: '_filter_columns'\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataClass.html":{"url":"classes/DataClass.html","title":"class - DataClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/data-class.ts\n        \n\n\n            \n                Extends\n            \n            \n                        GenericClass\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                className\n                            \n                            \n                                    Static\n                                    Readonly\n                                ACL\n                            \n                            \n                                    Static\n                                    Readonly\n                                CREATED_AT\n                            \n                            \n                                    Static\n                                    Readonly\n                                OBJECT_ID\n                            \n                            \n                                    Static\n                                    Readonly\n                                UPDATED_AT\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            className\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Data'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/data-class.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            ACL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ACL'\n                        \n                    \n                            \n                                \n                                    Inherited from         GenericClass\n\n                                \n                            \n                        \n                            \n                                    Defined in         GenericClass:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            CREATED_AT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'createdAt'\n                        \n                    \n                            \n                                \n                                    Inherited from         GenericClass\n\n                                \n                            \n                        \n                            \n                                    Defined in         GenericClass:3\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            OBJECT_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'objectId'\n                        \n                    \n                            \n                                \n                                    Inherited from         GenericClass\n\n                                \n                            \n                        \n                            \n                                    Defined in         GenericClass:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            UPDATED_AT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'updatedAt'\n                        \n                    \n                            \n                                \n                                    Inherited from         GenericClass\n\n                                \n                            \n                        \n                            \n                                    Defined in         GenericClass:4\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GenericClass } from './generic-class'\n\nexport class DataClass extends GenericClass  {\n\n  public static readonly className = 'Data'\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataTableComponent.html":{"url":"components/DataTableComponent.html","title":"component - DataTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DataTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/data-table/table/data-table.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-data-table\n            \n\n            \n                styleUrls\n                ./data-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./data-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _query\n                            \n                            \n                                data\n                            \n                            \n                                dataSource\n                            \n                            \n                                pageEvent\n                            \n                            \n                                pageIndex\n                            \n                            \n                                pageSize\n                            \n                            \n                                pageSizeOptions\n                            \n                            \n                                paginator\n                            \n                            \n                                subscription\n                            \n                            \n                                totalRows\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findByQuery\n                            \n                            \n                                findData\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangePage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                metadata\n                            \n                            \n                                query\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                queryChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    query\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(parse: ParseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/data-table/table/data-table.component.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parse\n                                                  \n                                                        \n                                                                        ParseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        columns\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/data-table/table/data-table.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        metadata\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/data-table/table/data-table.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        query\n                    \n                \n                \n                    \n                        Type :     Parse.Query\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/data-table/table/data-table.component.ts:37\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        queryChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/data-table/table/data-table.component.ts:51\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findByQuery\n                        \n                        \n                    \n                \n            \n            \n                \nfindByQuery(query: Parse.Query, isNewQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/data-table/table/data-table.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                            Parse.Query\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    isNewQuery\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findData\n                        \n                        \n                    \n                \n            \n            \n                \nfindData(undefined, query, withCount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/data-table/table/data-table.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    withCount\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/data-table/table/data-table.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/data-table/table/data-table.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/data-table/table/data-table.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChangePage\n                        \n                        \n                    \n                \n            \n            \n                \nonChangePage($event: PageEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/data-table/table/data-table.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            PageEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Parse.Query\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/data-table/table/data-table.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Parse.Object[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/data-table/table/data-table.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatTableDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/data-table/table/data-table.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PageEvent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/data-table/table/data-table.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/data-table/table/data-table.component.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/data-table/table/data-table.component.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageSizeOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ 5, 15, 25 ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/data-table/table/data-table.component.ts:62\n                            \n                        \n\n                \n                    \n                        paginator config\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/data-table/table/data-table.component.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/data-table/table/data-table.component.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalRows\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/data-table/table/data-table.component.ts:64\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        query\n                    \n                \n\n\n                \n                    \n                        setquery(query)\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/data-table/table/data-table.component.ts:41\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            query\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core'\nimport { MatSort, Sort } from '@angular/material/sort'\nimport { MatPaginator, PageEvent } from '@angular/material/paginator'\nimport { Observable, of, Subscription } from 'rxjs'\nimport { fromMatPaginator, fromMatSort, paginateRows, sortRows } from '../data-util'\nimport { debounceTime, flatMap, map } from 'rxjs/operators'\nimport { MatTableDataSource } from '@angular/material/table'\nimport { ParseService } from '../../../services/parse.service'\n\n@Component({\n  selector: 'app-data-table',\n  templateUrl: './data-table.component.html',\n  styleUrls: [ './data-table.component.scss' ]\n})\nexport class DataTableComponent implements OnInit, OnDestroy, OnChanges {\n\n  data: Parse.Object[]\n\n  @Input()\n  columns: string[]\n\n  @Input()\n  metadata: any\n\n\n  @Input()\n  get query(): Parse.Query {\n    return this._query\n  }\n\n  set query(query: Parse.Query) {\n    console.log(query)\n    this._query = query\n\n    this.paginator.pageIndex = 0\n    this.findByQuery(query, true)\n\n    this.queryChange.emit(this._query)\n  }\n\n  @Output() queryChange: EventEmitter = new EventEmitter()\n\n  // tslint:disable-next-line:variable-name\n  _query: Parse.Query\n\n  dataSource: MatTableDataSource\n\n\n  /**\n   * paginator config\n   */\n  pageSizeOptions = [ 5, 15, 25 ]\n  pageSize = 5\n  totalRows: number\n  pageEvent: PageEvent\n  pageIndex: number\n\n  subscription: Subscription\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator\n\n  constructor(private parse: ParseService) {}\n\n  ngOnInit() {\n    this.findByQuery(this._query, true)\n    this.columns = [ ...this.columns, 'actions' ]\n\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe()\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // console.log(changes)\n    /*\n    if (changes.query.currentValue) {\n      console.log(changes.query.currentValue)\n      // this.pageIndex = 0\n      this.paginator.pageIndex = 0\n\n      this.findByQuery(changes.query.currentValue, true)\n    }\n    */\n  }\n\n  onChangePage($event: PageEvent) {\n    console.log($event)\n    this.pageEvent = $event\n    this.pageSize = $event.pageSize\n    this.pageIndex = $event.pageIndex\n    this.findByQuery(this._query)\n  }\n\n  findData([ skip, limit ], query, withCount) {\n    this.subscription = this.parse.findWithCount(query, limit, skip, withCount).subscribe(res => {\n      // console.log(res, limit, skip)\n      if (res.count) {\n        this.totalRows = res.count\n      }\n      // console.log(res.data)\n      this.data = res.data\n      // this.mapDataTable()\n\n      this.dataSource = new MatTableDataSource(res.data)\n\n    })\n  }\n\n\n  findByQuery(query: Parse.Query, isNewQuery = false) {\n    // this.paginator.pageIndex = 0\n    if (!this.pageEvent || isNewQuery) {\n      this.findData([ 0, this.pageSize ], query, true)\n    } else {\n      // console.log(this.pageEvent.pageSize * this.pageEvent.pageIndex, this.pageEvent.pageSize)\n      this.findData([ this.pageEvent.pageSize * this.pageEvent.pageIndex, this.pageEvent.pageSize ],\n        query, false)\n    }\n  }\n\n\n}\n\n\n    \n\n    \n        table works!\n\n\n\n\n\n\n\n\n\n\n  \n\n    \n    \n\n    \n      {{c}}\n       {{element.attributes[c]}} \n    \n\n\n  \n\n\n\n\n    \n\n    \n                \n                    ./data-table.component.scss\n                \n                table {\n  width: 100%;\n  min-height: 200px;\n}\n\n.table-container {\n  width: 100%;\n  overflow-x: auto;\n}\n\n.mat-cell {\n  margin: 0 10px;\n  min-width: 100px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'table works!                    {{c}}       {{element.attributes[c]}}       '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'DataTableComponent', 'selector': 'app-data-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FabButtonComponent', 'selector': 'app-fab-button'},{'name': 'FilterByColumComponent', 'selector': 'app-filter-by-colum'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotifierComponent', 'selector': 'app-notifier'},{'name': 'SnifferDataDetailComponent', 'selector': 'app-sniffer-data-detail'},{'name': 'SnifferDataListComponent', 'selector': 'app-sniffer-data-list'},{'name': 'SnifferFormComponent', 'selector': 'app-sniffer-form'},{'name': 'SniffersListComponent', 'selector': 'app-sniffers-list'},{'name': 'SnifferTokenFormComponent', 'selector': 'app-sniffer-token-form'},{'name': 'SnifferTokenListComponent', 'selector': 'app-sniffer-token-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DataTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataTableModule.html":{"url":"modules/DataTableModule.html","title":"module - DataTableModule","body":"\n                   \n\n\n\n\n    Modules\n    DataTableModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataTableModule\n\n\n\ncluster_DataTableModule_declarations\n\n\n\ncluster_DataTableModule_exports\n\n\n\ncluster_DataTableModule_providers\n\n\n\n\nDataTableComponent\n\nDataTableComponent\n\n\n\nDataTableModule\n\nDataTableModule\n\nDataTableModule -->\n\nDataTableComponent->DataTableModule\n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nDataTableModule -->\n\nDetailsComponent->DataTableModule\n\n\n\n\n\nFilterByColumComponent\n\nFilterByColumComponent\n\nDataTableModule -->\n\nFilterByColumComponent->DataTableModule\n\n\n\n\n\nDataTableComponent \n\nDataTableComponent \n\nDataTableComponent  -->\n\nDataTableModule->DataTableComponent \n\n\n\n\n\nDataTableService\n\nDataTableService\n\nDataTableModule -->\n\nDataTableService->DataTableModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/data-table/data-table.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DataTableComponent\n                        \n                        \n                            DetailsComponent\n                        \n                        \n                            FilterByColumComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            DataTableService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DataTableComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { DetailsComponent } from './details/details.component'\nimport { DataTableComponent } from './table/data-table.component'\nimport { DataTableService } from './data-table.service'\nimport { MatFormFieldModule } from '@angular/material/form-field'\nimport { MatIconModule } from '@angular/material/icon'\nimport { MatInputModule } from '@angular/material/input'\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatTableModule } from '@angular/material/table'\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet'\nimport { MatExpansionModule } from '@angular/material/expansion'\nimport { MatPaginatorModule } from '@angular/material/paginator'\nimport { MatSortModule } from '@angular/material/sort'\nimport { FilterByColumComponent } from './filter-by-colum/filter-by-colum.component'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { FlexModule } from '@angular/flex-layout'\nimport { MatSelectModule } from '@angular/material/select'\nimport { MatDatepickerModule } from '@angular/material/datepicker'\nimport { MatNativeDateModule } from '@angular/material/core'\n\nimport { MomentDateAdapter, MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter'\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core'\n\n// See the Moment.js docs for the meaning of these formats:\n// https://momentjs.com/docs/#/displaying/format/\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'YYYY-MM-DD',\n  },\n  display: {\n    dateInput: 'YYYY-MM-DD',\n    monthYearLabel: 'YYYY-MM',\n    dateA11yLabel: 'YYYY-MM-DD',\n    monthYearA11yLabel: 'YYYY-MMMM',\n  },\n}\n\n\nconst materialModules = [\n  MatIconModule,\n  MatButtonModule,\n  MatTableModule,\n  MatBottomSheetModule,\n  MatPaginatorModule,\n  MatSortModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSelectModule,\n  MatNativeDateModule,\n  MatDatepickerModule,\n]\nconst ngForms = [ FormsModule, ReactiveFormsModule ]\n\n@NgModule({\n  declarations: [ DetailsComponent, DataTableComponent, FilterByColumComponent ],\n  imports: [\n    CommonModule,\n    ...materialModules,\n    ...ngForms,\n    FlexModule,\n\n  ],\n  exports: [\n    DataTableComponent\n  ],\n  providers: [\n    DataTableService,\n    {\n      provide: DateAdapter,\n      useClass: MomentDateAdapter,\n      deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n    },\n\n    {provide: MAT_DATE_FORMATS, useValue: MY_FORMATS},\n  ]\n})\nexport class DataTableModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataTableService.html":{"url":"injectables/DataTableService.html","title":"injectable - DataTableService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataTableService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/data-table/data-table.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/data-table/data-table.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataTableService {\n\n  constructor() { }\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataWithCount.html":{"url":"interfaces/DataWithCount.html","title":"interface - DataWithCount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataWithCount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/parse.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     Parse.Object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Parse.Object[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core'\nimport * as Parse from 'parse'\nimport { BehaviorSubject, forkJoin, from, Observable, of, Subject, throwError } from 'rxjs'\nimport { catchError, defaultIfEmpty, map, mergeMap, skipWhile, tap } from 'rxjs/operators'\nimport { Consts } from '../utli'\nimport { Router } from '@angular/router'\n\nconst parseRequire = require('parse')\n\n\n@Injectable()\nexport class ParseService {\n\n  constructor(private router: Router) {\n    Parse.initialize(Consts.parseConf.applicationId)\n    parseRequire.serverURL = Consts.parseConf.serverURL\n  }\n\n  logOut(): Promise {\n    return Parse.User.logOut()\n  }\n\n\n  logIn = ({ username, password }): Observable => {\n    return from(Parse.User.logIn(username, password))\n  }\n\n\n  isLogin = (): boolean => !!Parse.User.current()\n  getUser = (): Parse.User => Parse.User.current()\n\n\n  getObjectByIdWithQuery = (id: string, query: Parse.Query): Observable => {\n    return from(query.get(id)).pipe(catchError(err => {\n        this.handleErrors(err)\n        return throwError(err)\n      })\n    )\n\n  }\n\n\n  findByQuery = (query: Parse.Query, defaultLimit = true): Observable => {\n    if (defaultLimit) {\n      query.limit(2000)\n    }\n    return from(query.find()).pipe(catchError(err => {\n        this.handleErrors(err)\n        return throwError(err)\n      })\n    )\n\n  }\n\n\n  updateObject = (ob: Parse.Object, data: any): Observable => {\n    ob.set(data)\n    return from(ob.save()).pipe(catchError(err => {\n        this.handleErrors(err)\n        return throwError(err)\n      })\n    )\n  }\n\n  createObjectWithoutData(id: string, className: string): Parse.Object {\n    const parseObject = Parse.Object.createWithoutData(id)\n    parseObject.className = className\n    return parseObject\n  }\n\n\n  findFirstByQuery = (query: Parse.Query): Observable => {\n    return from(query.first()).pipe(catchError(err => {\n        this.handleErrors(err)\n        return throwError(err)\n      })\n    )\n  }\n\n\n  runCloudFunction = (name: string, data: any = null): Observable => {\n    return from(Parse.Cloud.run(name, data)).pipe(catchError(err => {\n        this.handleErrors(err)\n        return throwError(err)\n      })\n    )\n  }\n\n\n  createObject(data: any, acl: Parse.ACL, className: string): Observable {\n    const ob = new Parse.Object(className)\n    data.active = true\n    ob.set(data)\n    ob.setACL(acl)\n    return from(ob.save()).pipe(catchError(err => {\n        this.handleErrors(err)\n        return throwError(err)\n      })\n    )\n\n  }\n\n\n  fetch(ob: Parse.Object, includes: string [] = []): Observable {\n    return from(ob.fetchWithInclude(includes))\n\n  }\n\n  query(className: string ): Parse.Query {\n    return new Parse.Query(className)\n  }\n\n\n  count(query: Parse.Query): Observable {\n    return from(query.count()).pipe(catchError(err => {\n      this.handleErrors(err)\n      return throwError(err)\n    }))\n  }\n\n  findWithCount(query: Parse.Query, limit?: number, skip?: number, withCount = true): Observable {\n\n    if (Number.isInteger(limit)) {query.limit(limit)}\n    if (Number.isInteger(skip)) {query.skip(skip)}\n\n    const observables = [\n      withCount ? this.count(query) : of(null),\n      this.findByQuery(query, !Number.isInteger(limit))\n    ]\n\n    return forkJoin(observables).pipe(\n      map(res => ({ count: res[ 0 ], data: res[ 1 ] })),\n      // tap(res => console.log(res, query, limit, skip)),\n      catchError(err => {\n        this.handleErrors(err)\n        return throwError(err)\n      })\n    )\n  }\n\n  handleErrors(err: Parse.Error) {\n    if (err.code === 209) {\n      this.logOut().then(() => this.router.navigate([ '/login' ]))\n    }\n  }\n\n\n}\n\n\nexport interface DataWithCount {\n\n  count: number\n  data: Parse.Object[]\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsComponent.html":{"url":"components/DetailsComponent.html","title":"component - DetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/data-table/details/details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-details\n            \n\n            \n                styleUrls\n                ./details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/data-table/details/details.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/data-table/details/details.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.scss']\n})\nexport class DetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        details works!\n\n    \n\n    \n                \n                    ./details.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'details works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'DataTableComponent', 'selector': 'app-data-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FabButtonComponent', 'selector': 'app-fab-button'},{'name': 'FilterByColumComponent', 'selector': 'app-filter-by-colum'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotifierComponent', 'selector': 'app-notifier'},{'name': 'SnifferDataDetailComponent', 'selector': 'app-sniffer-data-detail'},{'name': 'SnifferDataListComponent', 'selector': 'app-sniffer-data-list'},{'name': 'SnifferFormComponent', 'selector': 'app-sniffer-form'},{'name': 'SniffersListComponent', 'selector': 'app-sniffers-list'},{'name': 'SnifferTokenFormComponent', 'selector': 'app-sniffer-token-form'},{'name': 'SnifferTokenListComponent', 'selector': 'app-sniffer-token-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogDataInterface.html":{"url":"interfaces/DialogDataInterface.html","title":"interface - DialogDataInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DialogDataInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/dialog-data.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        object\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                    \n                                \n                                \n                                    \n                                        object:     Parse.Object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Parse.Object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as Parse from 'parse'\nexport interface DialogDataInterface {\n  object?: Parse.Object\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FabButtonComponent.html":{"url":"components/FabButtonComponent.html","title":"component - FabButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FabButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/fab-button/fab-button.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-fab-button\n            \n\n            \n                styleUrls\n                ./fab-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./fab-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/fab-button/fab-button.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/fab-button/fab-button.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fab-button',\n  templateUrl: './fab-button.component.html',\n  styleUrls: ['./fab-button.component.scss']\n})\nexport class FabButtonComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n         \n    add\n \n\n    \n\n    \n                \n                    ./fab-button.component.scss\n                \n                \n.fab-button {\n  position: fixed;\n  right: 30px;\n  bottom: 30px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     add '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'DataTableComponent', 'selector': 'app-data-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FabButtonComponent', 'selector': 'app-fab-button'},{'name': 'FilterByColumComponent', 'selector': 'app-filter-by-colum'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotifierComponent', 'selector': 'app-notifier'},{'name': 'SnifferDataDetailComponent', 'selector': 'app-sniffer-data-detail'},{'name': 'SnifferDataListComponent', 'selector': 'app-sniffer-data-list'},{'name': 'SnifferFormComponent', 'selector': 'app-sniffer-form'},{'name': 'SniffersListComponent', 'selector': 'app-sniffers-list'},{'name': 'SnifferTokenFormComponent', 'selector': 'app-sniffer-token-form'},{'name': 'SnifferTokenListComponent', 'selector': 'app-sniffer-token-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FabButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterByColumComponent.html":{"url":"components/FilterByColumComponent.html","title":"component - FilterByColumComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterByColumComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/data-table/filter-by-colum/filter-by-colum.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter-by-colum\n            \n\n            \n                styleUrls\n                ./filter-by-colum.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filter-by-colum.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _query\n                            \n                            \n                                columnType\n                            \n                            \n                                colums\n                            \n                            \n                                form\n                            \n                            \n                                schema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildForm\n                            \n                            \n                                buildQuery\n                            \n                            \n                                getColumType\n                            \n                            \n                                getSchema\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetFilter\n                            \n                            \n                                setColumns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                query\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                queryChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    query\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, parse: ParseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/data-table/filter-by-colum/filter-by-colum.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parse\n                                                  \n                                                        \n                                                                        ParseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        query\n                    \n                \n                \n                    \n                        Type :     Parse.Query\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/data-table/filter-by-colum/filter-by-colum.component.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        queryChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/data-table/filter-by-colum/filter-by-colum.component.ts:28\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildForm\n                        \n                        \n                    \n                \n            \n            \n                \nbuildForm(fb: FormBuilder)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/data-table/filter-by-colum/filter-by-colum.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fb\n                                    \n                                                FormBuilder\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildQuery\n                        \n                        \n                    \n                \n            \n            \n                \nbuildQuery()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/data-table/filter-by-colum/filter-by-colum.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getColumType\n                        \n                        \n                    \n                \n            \n            \n                \ngetColumType()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/data-table/filter-by-colum/filter-by-colum.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FilterColumnType\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSchema\n                        \n                        \n                    \n                \n            \n            \n                \ngetSchema()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/data-table/filter-by-colum/filter-by-colum.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/data-table/filter-by-colum/filter-by-colum.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetFilter\n                        \n                        \n                    \n                \n            \n            \n                \nresetFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/data-table/filter-by-colum/filter-by-colum.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setColumns\n                        \n                        \n                    \n                \n            \n            \n                \nsetColumns(schema)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/data-table/filter-by-colum/filter-by-colum.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schema\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Parse.Query\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/data-table/filter-by-colum/filter-by-colum.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FilterColumnType\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/data-table/filter-by-colum/filter-by-colum.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colums\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SelectValue[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/data-table/filter-by-colum/filter-by-colum.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/data-table/filter-by-colum/filter-by-colum.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/data-table/filter-by-colum/filter-by-colum.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        query\n                    \n                \n\n\n                \n                    \n                        setquery(query)\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/data-table/filter-by-colum/filter-by-colum.component.ts:21\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            query\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\nimport { SnifferClass } from '../../../models/sniffer-class'\nimport { Consts } from '../../../utli'\nimport { ParseService } from '../../../services/parse.service'\nimport { FilterColumnType, SelectValue } from './filterByColumnModels'\nimport * as Parse from 'parse'\n\n@Component({\n  selector: 'app-filter-by-colum',\n  templateUrl: './filter-by-colum.component.html',\n  styleUrls: [ './filter-by-colum.component.scss' ]\n})\nexport class FilterByColumComponent implements OnInit {\n\n  @Input()\n  get query(): Parse.Query {\n    return this._query\n  }\n\n  set query(query: Parse.Query) {\n    // console.log(query)\n    this._query = query\n    this.queryChange.emit(this._query)\n    this.getSchema()\n  }\n\n  @Output() queryChange: EventEmitter = new EventEmitter()\n\n  // tslint:disable-next-line:variable-name\n  _query: Parse.Query\n\n  form: FormGroup\n\n  colums: SelectValue []\n  schema: any\n\n  columnType = FilterColumnType\n\n  constructor(private fb: FormBuilder, private parse: ParseService) { }\n\n  ngOnInit() {\n    this.form = this.buildForm(this.fb)\n\n  }\n\n  buildForm(fb: FormBuilder): FormGroup {\n\n    return fb.group({\n      value: [ null, [ Validators.required ] ],\n      attribute: [ null, [ Validators.required ] ],\n    })\n  }\n\n  buildQuery() {\n    if (!this.form.valid) {\n      return\n    }\n\n    const { attribute, value } = this.form.value\n    console.log(this.query, attribute, value)\n\n    this._query.equalTo(attribute, value.trim())\n\n\n    this.query = this._query\n\n  }\n\n  resetFilter() {\n    this.form.patchValue({\n      attribute: null,\n      value: null\n    }, { emitEvent: false, onlySelf: true })\n    // this.form.controls.value.markAsPristine()\n    // this.form.controls.attribute.markAsPristine()\n\n\n    const limit = '_limit'\n    const query = new Parse.Query(this.query.className)\n    query.skip(0)\n    query.limit(this.query[ limit ])\n    this.query = query\n  }\n\n  getSchema() {\n\n    this.parse.runCloudFunction(Consts.CLOUD_FUNCTION.FILTER_COLUMNS, { className: this.query.className }).subscribe(res => {\n      // console.log(res)\n      this.schema = res\n\n      this.setColumns(res)\n\n    })\n  }\n\n  setColumns(schema) {\n    const s: SelectValue [] = []\n    const names = Consts.COLUMNS_NAME\n\n    // tslint:disable-next-line:forin\n    for (const x in schema) {\n      if (!names.hasOwnProperty(x)) {\n        throw new Error(` Consts.COLUMNS_NAME no puede resolver la clave ${ x } de esquema requerida`)\n      }\n      s.push({ label: names[ x ], value: x })\n\n    }\n\n    this.colums = s\n\n  }\n\n  getColumType(): FilterColumnType {\n    const { attribute } = this.form.value\n\n    if (!this.form.value.attribute || !this.schema[ attribute ] || !this.schema[ attribute ].type) {\n      return FilterColumnType.TEXT\n    }\n\n    const schemaType = this.schema[ attribute ].type as FilterColumnType\n\n    // console.log(schemaType)\n    switch (schemaType) {\n\n      case FilterColumnType.TEXT:\n      case FilterColumnType.OBJECT:\n        return FilterColumnType.TEXT\n      case FilterColumnType.DATE:\n        return FilterColumnType.DATE\n      case FilterColumnType.BOOLEAN:\n        return FilterColumnType.BOOLEAN\n    }\n\n  }\n}\n\n\n    \n\n    \n        \n\n\n  \n\n    \n      Columna\n      \n        \n          {{c.label}}\n        \n      \n      \n        El valor de busqueda es requerido\n      \n    \n\n\n    \n      \n        Valor de busqueda\n        \n        \n          El valor de busqueda es requerido\n        \n      \n\n    \n\n\n    \n\n      \n        Fecha de busqueda\n        \n        \n        \n      \n\n    \n\n    \n\n      \n        Columna\n        \n          Si\n          No\n        \n        \n          El valor de busqueda es requerido\n        \n      \n    \n\n    \n      Filtrar\n      \n\n    \n    \n\n      Reiniciar filtros\n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./filter-by-colum.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Columna                        {{c.label}}                            El valor de busqueda es requerido                            Valor de busqueda                          El valor de busqueda es requerido                                    Fecha de busqueda                                                    Columna                  Si          No                          El valor de busqueda es requerido                            Filtrar                    Reiniciar filtros            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'DataTableComponent', 'selector': 'app-data-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FabButtonComponent', 'selector': 'app-fab-button'},{'name': 'FilterByColumComponent', 'selector': 'app-filter-by-colum'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotifierComponent', 'selector': 'app-notifier'},{'name': 'SnifferDataDetailComponent', 'selector': 'app-sniffer-data-detail'},{'name': 'SnifferDataListComponent', 'selector': 'app-sniffer-data-list'},{'name': 'SnifferFormComponent', 'selector': 'app-sniffer-form'},{'name': 'SniffersListComponent', 'selector': 'app-sniffers-list'},{'name': 'SnifferTokenFormComponent', 'selector': 'app-sniffer-token-form'},{'name': 'SnifferTokenListComponent', 'selector': 'app-sniffer-token-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterByColumComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GenericClass.html":{"url":"classes/GenericClass.html","title":"class - GenericClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GenericClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/generic-class.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                ACL\n                            \n                            \n                                    Static\n                                    Readonly\n                                CREATED_AT\n                            \n                            \n                                    Static\n                                    Readonly\n                                OBJECT_ID\n                            \n                            \n                                    Static\n                                    Readonly\n                                UPDATED_AT\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            ACL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ACL'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/generic-class.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            CREATED_AT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'createdAt'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/generic-class.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            OBJECT_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'objectId'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/generic-class.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            UPDATED_AT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'updatedAt'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/generic-class.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GenericClass  {\n\n  public static readonly CREATED_AT = 'createdAt'\n  public static readonly UPDATED_AT = 'updatedAt'\n  public static readonly OBJECT_ID = 'objectId'\n  public static readonly ACL = 'ACL'\n  // public static readonly ACTIVE = 'active'\n  // public static readonly CREATED_BY = 'createdBy'\n  // public static readonly UPDATED_BY = 'updatedBy'\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                formField\n                            \n                            \n                                loading\n                            \n                            \n                                pFiedType\n                            \n                            \n                                pIconTooltip\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                send\n                            \n                            \n                                showPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, parse: ParseService, router: Router, ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/login/login.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parse\n                                                  \n                                                        \n                                                                        ParseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildForm\n                        \n                        \n                    \n                \n            \n            \n                \nbuildForm(builder: FormBuilder)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/login/login.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    builder\n                                    \n                                                FormBuilder\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/login/login.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            send\n                        \n                        \n                    \n                \n            \n            \n                \nsend()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/login/login.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showPassword\n                        \n                        \n                    \n                \n            \n            \n                \nshowPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/login/login.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/login/login.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formField\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserClass\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/login/login.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pFiedType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'password'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/login/login.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pIconTooltip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Mostrar Contraseña'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/login/login.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, NgZone, OnInit } from '@angular/core'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\nimport { ParseService } from '../../services/parse.service'\nimport { NotifierService } from '../../modules/notifier/notifier.service'\nimport { Router } from '@angular/router'\nimport { MatSnackBar } from '@angular/material/snack-bar'\nimport { UserClass } from '../../models/user-class'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: [ './login.component.scss' ]\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup\n  loading: boolean\n  formField = UserClass\n  pFiedType = 'password'\n  pIconTooltip = 'Mostrar Contraseña'\n\n\n  constructor(private fb: FormBuilder,\n              private parse: ParseService,\n              private router: Router,\n              private ngZone: NgZone) {\n    this.form = this.buildForm(this.fb)\n  }\n\n  ngOnInit() {\n  }\n\n\n  buildForm(builder: FormBuilder) {\n    return builder.group({\n      [ UserClass.USER_NAME ]: [ null, [ Validators.required ] ],\n      [ UserClass.PASSWORD ]: [ null, [ Validators.required ] ],\n    })\n  }\n\n  send() {\n\n    if (!this.form.valid) {\n      return\n    }\n    this.loading = true\n    console.log(this.form.value)\n    this.parse.logIn(this.form.value).subscribe(response => {\n      console.log(response)\n      this.loading = false\n      // this.ngZone.run(() => this.router.navigate([ '/sniffer-data' ]))\n      this.router.navigate([ '/sniffer-data' ])\n      // this.notifier.showSuccess('Bienvenido')\n    }, err => {\n      this.loading = false\n      console.log(err)\n      // this.notifier.showError('Nombre de usuario o contraseña incorrectas')\n    })\n  }\n\n  showPassword() {\n    if (this.pFiedType === 'password') {\n      this.pFiedType = 'text'\n      this.pIconTooltip = 'Ocultar contraseña'\n    } else {\n      this.pFiedType = 'password'\n      this.pIconTooltip = 'Mostrar contraseña'\n    }\n  }\n\n}\n\n\n\n\n    \n\n    \n        \n  \n    \n      \n\n        Ingreso\n\n        \n          Nombre de Usuario\n          \n          \n            El Usuario es Requerido\n          \n        \n\n        \n          Contraseña\n          \n          \n            La Contraseña es Requerida\n          \n          visibility\n          \n        \n\n        \n          Ingresar\n        \n\n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Ingreso                  Nombre de Usuario                                El Usuario es Requerido                                    Contraseña                                La Contraseña es Requerida                    visibility                                    Ingresar                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'DataTableComponent', 'selector': 'app-data-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FabButtonComponent', 'selector': 'app-fab-button'},{'name': 'FilterByColumComponent', 'selector': 'app-filter-by-colum'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotifierComponent', 'selector': 'app-notifier'},{'name': 'SnifferDataDetailComponent', 'selector': 'app-sniffer-data-detail'},{'name': 'SnifferDataListComponent', 'selector': 'app-sniffer-data-list'},{'name': 'SnifferFormComponent', 'selector': 'app-sniffer-form'},{'name': 'SniffersListComponent', 'selector': 'app-sniffers-list'},{'name': 'SnifferTokenFormComponent', 'selector': 'app-sniffer-token-form'},{'name': 'SnifferTokenListComponent', 'selector': 'app-sniffer-token-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoginResolverService.html":{"url":"guards/LoginResolverService.html","title":"guard - LoginResolverService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoginResolverService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/login-resolver.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(parse: ParseService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/login-resolver.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parse\n                                                  \n                                                        \n                                                                        ParseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resolvers/login-resolver.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core'\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router'\nimport { Observable, of } from 'rxjs'\nimport { ParseService } from '../services/parse.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginResolverService implements Resolve {\n\n  constructor(private parse: ParseService,\n              private router: Router) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    if (this.parse.isLogin()) {\n      this.router.navigate([ '/sniffer-data' ])\n    }\n    return of(undefined)\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/not-found/not-found.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                styleUrls\n                ./not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/views/not-found/not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/not-found/not-found.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n  \n    \n      Pagina no encontrada\n    \n  \n  \n\n  \n    \n      Volver al inicio\n  \n  \n\n\n    \n\n    \n                \n                    ./not-found.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Pagina no encontrada                    Volver al inicio    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'DataTableComponent', 'selector': 'app-data-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FabButtonComponent', 'selector': 'app-fab-button'},{'name': 'FilterByColumComponent', 'selector': 'app-filter-by-colum'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotifierComponent', 'selector': 'app-notifier'},{'name': 'SnifferDataDetailComponent', 'selector': 'app-sniffer-data-detail'},{'name': 'SnifferDataListComponent', 'selector': 'app-sniffer-data-list'},{'name': 'SnifferFormComponent', 'selector': 'app-sniffer-form'},{'name': 'SniffersListComponent', 'selector': 'app-sniffers-list'},{'name': 'SnifferTokenFormComponent', 'selector': 'app-sniffer-token-form'},{'name': 'SnifferTokenListComponent', 'selector': 'app-sniffer-token-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotifierComponent.html":{"url":"components/NotifierComponent.html","title":"component - NotifierComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotifierComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/notifier/notifier.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notifier\n            \n\n            \n                styleUrls\n                ./notifier.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./notifier.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                text\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data, ref: MatSnackBarRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/notifier/notifier.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        MatSnackBarRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            action\n                        \n                        \n                    \n                \n            \n            \n                \naction()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/notifier/notifier.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/notifier/notifier.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/notifier/notifier.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/notifier/notifier.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         notificationType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/notifier/notifier.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core'\nimport { MAT_SNACK_BAR_DATA, MatSnackBarRef } from '@angular/material'\nimport { notificationType } from './notifierConfig.model'\n\n@Component({\n  selector: 'app-notifier',\n  templateUrl: './notifier.component.html',\n  styleUrls: [ './notifier.component.scss' ]\n})\nexport class NotifierComponent implements OnInit {\n\n  text: string\n  type: notificationType\n\n  constructor(@Inject(MAT_SNACK_BAR_DATA) data,\n              private ref: MatSnackBarRef) {\n    this.text = data.text\n    this.type = data.type || 'success'\n  }\n\n  ngOnInit() {\n  }\n\n  close() {\n    this.ref.dismiss()\n  }\n\n  action() {\n\n  }\n}\n\n    \n\n    \n        \n  \n    \n       close\n    \n  \n\n\n\n  {{text}}\n\n\n    \n\n    \n                \n                    ./notifier.component.scss\n                \n                \n.contaier{\n  display: flex;\n  flex-direction: column;\n}\n\n.close {\n  display: flex;\n\n  justify-content: flex-end;\n  width: 100%;\n  .button {\n    color: black;\n  }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             close        {{text}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'DataTableComponent', 'selector': 'app-data-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FabButtonComponent', 'selector': 'app-fab-button'},{'name': 'FilterByColumComponent', 'selector': 'app-filter-by-colum'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotifierComponent', 'selector': 'app-notifier'},{'name': 'SnifferDataDetailComponent', 'selector': 'app-sniffer-data-detail'},{'name': 'SnifferDataListComponent', 'selector': 'app-sniffer-data-list'},{'name': 'SnifferFormComponent', 'selector': 'app-sniffer-form'},{'name': 'SniffersListComponent', 'selector': 'app-sniffers-list'},{'name': 'SnifferTokenFormComponent', 'selector': 'app-sniffer-token-form'},{'name': 'SnifferTokenListComponent', 'selector': 'app-sniffer-token-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotifierComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotifierConfigModel.html":{"url":"classes/NotifierConfigModel.html","title":"class - NotifierConfigModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotifierConfigModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/notifier/notifierConfig.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                component\n                            \n                            \n                                    Optional\n                                duration\n                            \n                            \n                                    Optional\n                                horizontalPosition\n                            \n                            \n                                    Optional\n                                text\n                            \n                            \n                                    Optional\n                                type\n                            \n                            \n                                    Optional\n                                verticalPosition\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/notifier/notifierConfig.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            duration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/notifier/notifierConfig.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            horizontalPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         horizontal\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/notifier/notifierConfig.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/notifier/notifierConfig.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         notificationType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/notifier/notifierConfig.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            verticalPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         vertical\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/notifier/notifierConfig.model.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ComponentType } from '@angular/cdk/portal'\n\nexport class NotifierConfigModel {\n\n  text?: string\n  type?: notificationType\n  verticalPosition?: vertical\n  horizontalPosition?: horizontal\n  duration?: number\n  component?: ComponentType\n}\n\n\ntype vertical = 'top' | 'bottom'\ntype horizontal = 'start' | 'center' | 'end' | 'left' | 'right'\nexport type notificationType = 'success' | 'error' | 'warn'\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotifierModule.html":{"url":"modules/NotifierModule.html","title":"module - NotifierModule","body":"\n                   \n\n\n\n\n    Modules\n    NotifierModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotifierModule\n\n\n\ncluster_NotifierModule_declarations\n\n\n\ncluster_NotifierModule_providers\n\n\n\n\nNotifierComponent\n\nNotifierComponent\n\n\n\nNotifierModule\n\nNotifierModule\n\nNotifierModule -->\n\nNotifierComponent->NotifierModule\n\n\n\n\n\nNotifierService\n\nNotifierService\n\nNotifierModule -->\n\nNotifierService->NotifierModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/notifier/notifier.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NotifierComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            NotifierComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            NotifierService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/notifier/notifier.module.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { NotifierComponent } from './notifier.component'\nimport { NotifierService } from './notifier.service'\nimport { MatIconModule } from '@angular/material'\n\nimport { HttpClient } from '@angular/common/http'\nimport { MatSnackBarModule } from '@angular/material/snack-bar'\n\n\nexport function HttpLoaderFactory(http: HttpClient) {\n\n\n}\n\n@NgModule({\n  declarations: [\n    NotifierComponent\n  ],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatSnackBarModule\n  ],\n  entryComponents: [\n    NotifierComponent,\n  ],\n  providers: [\n    NotifierService\n  ]\n})\nexport class NotifierModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NotifierModule,\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotifierService.html":{"url":"injectables/NotifierService.html","title":"injectable - NotifierService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotifierService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/notifier/notifier.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                created\n                            \n                            \n                                createError\n                            \n                            \n                                genericError\n                            \n                            \n                                loaded\n                            \n                            \n                                open\n                            \n                            \n                                showError\n                            \n                            \n                                showSuccess\n                            \n                            \n                                showWarning\n                            \n                            \n                                updated\n                            \n                            \n                                updateError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/notifier/notifier.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            created\n                        \n                        \n                    \n                \n            \n            \n                \ncreated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/notifier/notifier.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/notifier/notifier.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            genericError\n                        \n                        \n                    \n                \n            \n            \n                \ngenericError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/notifier/notifier.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loaded\n                        \n                        \n                    \n                \n            \n            \n                \nloaded()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/notifier/notifier.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(text: string, conf?: NotifierConfigModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/notifier/notifier.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    conf\n                                    \n                                                NotifierConfigModel\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MatSnackBarRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showError\n                        \n                        \n                    \n                \n            \n            \n                \nshowError(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/notifier/notifier.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showSuccess\n                        \n                        \n                    \n                \n            \n            \n                \nshowSuccess(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/notifier/notifier.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showWarning\n                        \n                        \n                    \n                \n            \n            \n                \nshowWarning(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/notifier/notifier.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updated\n                        \n                        \n                    \n                \n            \n            \n                \nupdated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/notifier/notifier.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateError\n                        \n                        \n                    \n                \n            \n            \n                \nupdateError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/notifier/notifier.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\nimport { NotifierConfigModel } from './notifierConfig.model'\nimport { MatSnackBar, MatSnackBarRef } from '@angular/material'\nimport { NotifierComponent } from './notifier.component'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotifierService {\n\n  constructor(private snackBar: MatSnackBar) {\n  }\n\n  /**\n   *\n   * @param text\n   * @param conf\n   */\n  open(text: string, conf?: NotifierConfigModel): MatSnackBarRef {\n\n    if (!text && !conf.text) {\n      throw new Error('Es necesario el mensaje')\n    }\n    if (!conf) {\n      conf = new NotifierConfigModel()\n    }\n\n    return this.snackBar.openFromComponent(NotifierComponent, {\n      duration: conf.duration || 5000,\n      horizontalPosition: conf.horizontalPosition || 'right',\n      verticalPosition: conf.verticalPosition || 'top',\n      panelClass: conf.type || 'success',\n      data: {\n        text: text || conf.text\n      }\n    })\n\n  }\n\n  /**\n   *\n   */\n  created() {\n    return this.open('shared.toast.createdData')\n  }\n\n  /**\n   *\n   */\n  updated() {\n    return this.open('shared.toast.updatedData')\n  }\n\n  /**\n   *\n   */\n  genericError() {\n    return this.open(null, {\n      type: 'error',\n      text: 'shared.toast.genericError'\n    })\n  }\n\n  /**\n   *\n   */\n  updateError() {\n    return this.open(null, {\n      type: 'error',\n      text: 'shared.toast.errorToUpdate'\n    })\n  }\n\n  /**\n   *\n   */\n  createError() {\n    return this.open(null, {\n      type: 'error',\n      text: 'shared.toast.errorToCreate'\n    })\n  }\n\n  /**\n   *\n   */\n  loaded() {\n    return this.open('shared.toast.loaded')\n\n  }\n\n  /**\n   *\n   * @param message\n   */\n  showError(message: string) {\n    this.open(message, { type: 'error' })\n  }\n\n  /**\n   *\n   * @param message\n   */\n  showSuccess(message: string) {\n    this.open(message, { type: 'success' })\n\n  }\n\n  /**\n   *\n   * @param message\n   */\n  showWarning(message: string) {\n    this.open(message, { type: 'warn' })\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseService.html":{"url":"injectables/ParseService.html","title":"injectable - ParseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ParseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/parse.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                findByQuery\n                            \n                            \n                                findFirstByQuery\n                            \n                            \n                                getObjectByIdWithQuery\n                            \n                            \n                                getUser\n                            \n                            \n                                isLogin\n                            \n                            \n                                logIn\n                            \n                            \n                                runCloudFunction\n                            \n                            \n                                updateObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                            \n                                createObject\n                            \n                            \n                                createObjectWithoutData\n                            \n                            \n                                fetch\n                            \n                            \n                                findWithCount\n                            \n                            \n                                handleErrors\n                            \n                            \n                                logOut\n                            \n                            \n                                query\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/parse.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            count\n                        \n                        \n                    \n                \n            \n            \n                \ncount(query: Parse.Query)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/parse.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                            Parse.Query\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createObject\n                        \n                        \n                    \n                \n            \n            \n                \ncreateObject(data: any, acl: Parse.ACL, className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/parse.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    acl\n                                    \n                                            Parse.ACL\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createObjectWithoutData\n                        \n                        \n                    \n                \n            \n            \n                \ncreateObjectWithoutData(id: string, className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/parse.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Parse.Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetch\n                        \n                        \n                    \n                \n            \n            \n                \nfetch(ob: Parse.Object, includes: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/parse.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    ob\n                                    \n                                            Parse.Object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    includes\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findWithCount\n                        \n                        \n                    \n                \n            \n            \n                \nfindWithCount(query: Parse.Query, limit?: number, skip?: number, withCount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/parse.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                            Parse.Query\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    withCount\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleErrors\n                        \n                        \n                    \n                \n            \n            \n                \nhandleErrors(err: Parse.Error)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/parse.service.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                            Parse.Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logOut\n                        \n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/parse.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            query\n                        \n                        \n                    \n                \n            \n            \n                \nquery(className: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/parse.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Parse.Query\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            findByQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/parse.service.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            findFirstByQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/parse.service.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getObjectByIdWithQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/parse.service.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/parse.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/parse.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/parse.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            runCloudFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/parse.service.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/parse.service.ts:56\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\nimport * as Parse from 'parse'\nimport { BehaviorSubject, forkJoin, from, Observable, of, Subject, throwError } from 'rxjs'\nimport { catchError, defaultIfEmpty, map, mergeMap, skipWhile, tap } from 'rxjs/operators'\nimport { Consts } from '../utli'\nimport { Router } from '@angular/router'\n\nconst parseRequire = require('parse')\n\n\n@Injectable()\nexport class ParseService {\n\n  constructor(private router: Router) {\n    Parse.initialize(Consts.parseConf.applicationId)\n    parseRequire.serverURL = Consts.parseConf.serverURL\n  }\n\n  logOut(): Promise {\n    return Parse.User.logOut()\n  }\n\n\n  logIn = ({ username, password }): Observable => {\n    return from(Parse.User.logIn(username, password))\n  }\n\n\n  isLogin = (): boolean => !!Parse.User.current()\n  getUser = (): Parse.User => Parse.User.current()\n\n\n  getObjectByIdWithQuery = (id: string, query: Parse.Query): Observable => {\n    return from(query.get(id)).pipe(catchError(err => {\n        this.handleErrors(err)\n        return throwError(err)\n      })\n    )\n\n  }\n\n\n  findByQuery = (query: Parse.Query, defaultLimit = true): Observable => {\n    if (defaultLimit) {\n      query.limit(2000)\n    }\n    return from(query.find()).pipe(catchError(err => {\n        this.handleErrors(err)\n        return throwError(err)\n      })\n    )\n\n  }\n\n\n  updateObject = (ob: Parse.Object, data: any): Observable => {\n    ob.set(data)\n    return from(ob.save()).pipe(catchError(err => {\n        this.handleErrors(err)\n        return throwError(err)\n      })\n    )\n  }\n\n  createObjectWithoutData(id: string, className: string): Parse.Object {\n    const parseObject = Parse.Object.createWithoutData(id)\n    parseObject.className = className\n    return parseObject\n  }\n\n\n  findFirstByQuery = (query: Parse.Query): Observable => {\n    return from(query.first()).pipe(catchError(err => {\n        this.handleErrors(err)\n        return throwError(err)\n      })\n    )\n  }\n\n\n  runCloudFunction = (name: string, data: any = null): Observable => {\n    return from(Parse.Cloud.run(name, data)).pipe(catchError(err => {\n        this.handleErrors(err)\n        return throwError(err)\n      })\n    )\n  }\n\n\n  createObject(data: any, acl: Parse.ACL, className: string): Observable {\n    const ob = new Parse.Object(className)\n    data.active = true\n    ob.set(data)\n    ob.setACL(acl)\n    return from(ob.save()).pipe(catchError(err => {\n        this.handleErrors(err)\n        return throwError(err)\n      })\n    )\n\n  }\n\n\n  fetch(ob: Parse.Object, includes: string [] = []): Observable {\n    return from(ob.fetchWithInclude(includes))\n\n  }\n\n  query(className: string ): Parse.Query {\n    return new Parse.Query(className)\n  }\n\n\n  count(query: Parse.Query): Observable {\n    return from(query.count()).pipe(catchError(err => {\n      this.handleErrors(err)\n      return throwError(err)\n    }))\n  }\n\n  findWithCount(query: Parse.Query, limit?: number, skip?: number, withCount = true): Observable {\n\n    if (Number.isInteger(limit)) {query.limit(limit)}\n    if (Number.isInteger(skip)) {query.skip(skip)}\n\n    const observables = [\n      withCount ? this.count(query) : of(null),\n      this.findByQuery(query, !Number.isInteger(limit))\n    ]\n\n    return forkJoin(observables).pipe(\n      map(res => ({ count: res[ 0 ], data: res[ 1 ] })),\n      // tap(res => console.log(res, query, limit, skip)),\n      catchError(err => {\n        this.handleErrors(err)\n        return throwError(err)\n      })\n    )\n  }\n\n  handleErrors(err: Parse.Error) {\n    if (err.code === 209) {\n      this.logOut().then(() => this.router.navigate([ '/login' ]))\n    }\n  }\n\n\n}\n\n\nexport interface DataWithCount {\n\n  count: number\n  data: Parse.Object[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PropertySortFns.html":{"url":"interfaces/PropertySortFns.html","title":"interface - PropertySortFns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PropertySortFns\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/data-table/data-util.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [prop: string]:        SortFn\n\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/data-table/data-util.ts:36\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { CollectionViewer, DataSource } from '@angular/cdk/collections'\nimport { combineLatest, concat, defer, Observable, of } from 'rxjs'\nimport { MatPaginator, MatSort, PageEvent, Sort } from '@angular/material'\nimport { distinctUntilChanged, map, startWith, switchMap, tap } from 'rxjs/operators'\n\nexport class SimpleDataSource extends DataSource {\n  constructor(private rows$: Observable) {super() }\n\n  connect(collectionViewer: CollectionViewer): Observable { return this.rows$ }\n\n  disconnect(collectionViewer: CollectionViewer): void {}\n}\n\nfunction defaultSort(a: any, b: any): number {\n  // treat null === undefined for sorting\n  a = a === undefined ? null : a\n  b = b === undefined ? null : b\n\n  if (a === b) { return 0 }\n  if (a === null) { return -1 }\n  if (b === null) { return 1 }\n\n  //from this point on a & b can not be null or undefined.\n\n  if (a > b) {\n    return 1\n  } else if (a  = (a: U, b: U) => number;\n\ninterface PropertySortFns {\n  [ prop: string ]: SortFn;\n}\n\n/** RxJS operator to map a material Sort object to a sort function */\nfunction toSortFn(sortFns: PropertySortFns = {}, useDefault = true): (sort$: Observable) => Observable> {\n  return (sort$) => sort$.pipe(\n    map(sort => {\n      if (!sort.active || sort.direction === '') { return undefined }\n\n      let sortFn = sortFns[ sort.active ]\n      if (!sortFn) {\n        if (!useDefault) {\n          throw new Error(`Unknown sort property [${ sort.active }]`)\n        }\n\n        //By default assume sort.active is a property name, and sort using the default sort\n        //  uses .\n        sortFn = (a: U, b: U) => defaultSort((a)[ sort.active ], (b)[ sort.active ])\n      }\n\n      return sort.direction === 'asc' ? sortFn : (a: U, b: U) => sortFn(b, a)\n    })\n  )\n}\n\n/** Creates an Observable stream of Sort objects from a MatSort component */\nexport function fromMatSort(sort: MatSort): Observable {\n  console.log(sort)\n  return concat(\n    defer(() => of({\n      active: sort.active,\n      direction: sort.direction\n    })),\n    sort.sortChange.asObservable()\n  )\n}\n\n/** RxJs operator to sort an array based on an Observable of material Sort events **/\nexport function sortRows(\n  sort$: Observable,\n  sortFns: PropertySortFns = {},\n  useDefault = true\n): (obs$: Observable) => Observable {\n  return (rows$: Observable) => combineLatest(\n    rows$,\n    sort$.pipe(toSortFn(sortFns, useDefault)),\n    (rows, sortFn) => {\n      if (!sortFn) { return rows }\n\n      const copy = rows.slice()\n      return copy.sort(sortFn)\n    }\n  )\n}\n\n/* TODO: handle ngIf'd MatPager controls.\n\nfunction isEqualPageEvents(a: PageEvent, b: PageEvent) {\n  return a.length === b.length\n    && a.pageSize === b.pageSize\n    && a.pageIndex === b.pageIndex;\n\n}\n\n\nexport function fromMatPaginators(pagers: QueryList): Observable {\n  return pagers.changes.pipe(\n    startWith(pagers),\n    switchMap(_ =>\n      merge(...pagers.map(p => fromMatPaginator(p))).pipe(\n        distinctUntilChanged(isEqualPageEvents),\n        tap(page => pagers.forEach(pager => {\n          if (pager.pageIndex !== page.pageIndex) {\n            pager.pageIndex = page.pageIndex;\n          }\n          if (pager.pageSize !== page.pageSize) {\n            pager.pageSize = page.pageSize;\n          }\n          if (pager.length !== page.length) {\n            pager.length = page.length;\n          }\n        }))\n      )\n    ),\n    distinctUntilChanged(isEqualPageEvents),\n  );\n}\n */\n\n/** Creates an Observable stream of PageEvent objects from a MatPaginator component */\nexport function fromMatPaginator(pager: MatPaginator): Observable {\n  return concat(\n    defer(() => of({\n      pageIndex: pager.pageIndex,\n      pageSize: pager.pageSize,\n      length: pager.length,\n    })),\n    pager.page.asObservable()\n  )\n}\n\n/** RxJs operator to paginate an array based on an Observable of PageEvent objects **/\nexport function paginateRows(page$: Observable): (obs$: Observable) => Observable {\n  return (rows$: Observable) => combineLatest(\n    rows$,\n    page$,\n    (rows, page) => {\n      const startIndex = page.pageIndex * page.pageSize\n      const copy = rows.slice()\n      return copy.splice(startIndex, page.pageSize)\n    }\n  )\n}\n\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectValue.html":{"url":"interfaces/SelectValue.html","title":"interface - SelectValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SelectValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/data-table/filter-by-colum/filterByColumnModels.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        label\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SelectValue {\n  value: string\n  label: string\n}\n\n\nexport enum FilterColumnType {\n\n  DATE = 'Date',\n  TEXT = 'String',\n  OBJECT = 'Object',\n  BOOLEAN = 'Boolean',\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectValueModel.html":{"url":"interfaces/SelectValueModel.html","title":"interface - SelectValueModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SelectValueModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/select-value-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        label\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SelectValueModel {\n\n  label: string\n  value: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nAppToolbarComponent\n\nAppToolbarComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nAppToolbarComponent->SharedModule\n\n\n\n\n\nAppToolbarComponent \n\nAppToolbarComponent \n\nAppToolbarComponent  -->\n\nSharedModule->AppToolbarComponent \n\n\n\n\n\nDataTableModule \n\nDataTableModule \n\nDataTableModule  -->\n\nSharedModule->DataTableModule \n\n\n\n\n\nNotifierModule \n\nNotifierModule \n\nNotifierModule  -->\n\nSharedModule->NotifierModule \n\n\n\n\n\nDataTableModule\n\nDataTableModule\n\nSharedModule -->\n\nDataTableModule->SharedModule\n\n\n\n\n\nParseService\n\nParseService\n\nSharedModule -->\n\nParseService->SharedModule\n\n\n\n\n\nSharedService\n\nSharedService\n\nSharedModule -->\n\nSharedService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppToolbarComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ParseService\n                        \n                        \n                            SharedService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DataTableModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AppToolbarComponent\n                        \n                        \n                            DataTableModule\n                        \n                        \n                            NotifierModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared.module.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { FlexLayoutModule } from '@angular/flex-layout'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { MatFormFieldModule } from '@angular/material/form-field'\nimport { MatIconModule } from '@angular/material/icon'\nimport { MatTooltipModule } from '@angular/material/tooltip'\nimport { ParseService } from '../services/parse.service'\nimport { SharedService } from '../services/shared.service'\nimport { MatInputModule } from '@angular/material/input'\nimport { MatButtonModule } from '@angular/material/button'\n// import { NotifierService } from './notifier/notifier.service'\nimport { NotifierModule } from './notifier/notifier.module'\nimport { MatSnackBarModule } from '@angular/material/snack-bar'\nimport { MatToolbarModule } from '@angular/material/toolbar'\nimport { AppToolbarComponent } from '../components/toolbar/app-toolbar.component'\nimport { RouterModule } from '@angular/router'\nimport { MatProgressBarModule } from '@angular/material/progress-bar'\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner'\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet'\nimport { DataTableModule } from './data-table/data-table.module'\n\nconst ngForms = [ FormsModule, ReactiveFormsModule ]\n\nconst providers = [\n  ParseService,\n  SharedService,\n]\n\nconst modules = [\n  FlexLayoutModule,\n  RouterModule,\n  DataTableModule,\n]\n\nconst materialModules = [\n  MatFormFieldModule,\n  MatIconModule,\n  MatTooltipModule,\n  MatInputModule,\n  MatButtonModule,\n  MatSnackBarModule,\n  MatToolbarModule,\n\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatBottomSheetModule,\n\n]\n\nconst declaration = [\n  AppToolbarComponent\n]\n\n@NgModule({\n  declarations: [\n    ...declaration\n  ],\n  imports: [\n    CommonModule,\n    ...modules,\n    ...materialModules,\n    ...ngForms,\n    // NotifierModule.forRoot(),\n  ],\n  exports: [\n    ...modules,\n    ...materialModules,\n    ...declaration,\n    ...ngForms,\n    NotifierModule\n  ],\n  providers: [\n    ...providers\n  ]\n})\nexport class SharedModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: SharedModule,\n      providers: [ ...providers ]\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SharedService.html":{"url":"injectables/SharedService.html","title":"injectable - SharedService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SharedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/shared.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appDefaultOptions\n                            \n                            \n                                appOptionsObservable\n                            \n                            \n                                    Private\n                                appOptionsSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                prepareObjectToUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    appLoading\n                                \n                                \n                                    appLoadingMode\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, parse: ParseService, ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/shared.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parse\n                                                  \n                                                        \n                                                                        ParseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logOut\n                        \n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/shared.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            prepareObjectToUpdate\n                        \n                        \n                    \n                \n            \n            \n                \nprepareObjectToUpdate(form: FormGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/shared.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appDefaultOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Partial\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/shared.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appOptionsObservable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/shared.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            appOptionsSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/shared.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        appLoading\n                    \n                \n\n                \n                    \n                        getappLoading()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/shared.service.ts:30\n                                \n                            \n\n                \n                    \n                        setappLoading(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/shared.service.ts:25\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        appLoadingMode\n                    \n                \n\n                \n                    \n                        getappLoadingMode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/shared.service.ts:39\n                                \n                            \n\n                \n                    \n                        setappLoadingMode(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/shared.service.ts:34\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core'\nimport { BehaviorSubject, Observable } from 'rxjs'\nimport { Router } from '@angular/router'\nimport { ParseService } from './parse.service'\nimport { FormGroup } from '@angular/forms'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n\n  private appOptionsSubject: BehaviorSubject\n  appOptionsObservable: Observable\n\n  appDefaultOptions: Partial = {}\n\n\n  constructor(private router: Router,\n              private parse: ParseService,\n              private ngZone: NgZone) {\n    this.appOptionsSubject = new BehaviorSubject(this.appDefaultOptions)\n    this.appOptionsObservable = this.appOptionsSubject.asObservable()\n  }\n\n  set appLoading(value: boolean) {\n    this.appDefaultOptions.loading = value\n    this.appOptionsSubject.next(this.appOptionsSubject)\n  }\n\n  get appLoading(): boolean {\n    return this.appDefaultOptions.loading\n  }\n\n  set appLoadingMode(value: string) {\n    this.appDefaultOptions.loadingMode = value\n    this.appOptionsSubject.next(this.appOptionsSubject)\n  }\n\n  get appLoadingMode(): string {\n    return this.appDefaultOptions.loadingMode\n  }\n\n  // --------------------------------------------\n\n  logOut() {\n    this.parse.logOut().then(() => {\n      this.router.navigate([ '/login' ])\n    })\n  }\n\n  /**\n   *\n   * @param form\n   */\n  prepareObjectToUpdate(form: FormGroup): any {\n    const dataToUpdate = {}\n    for (const control in form.controls) {\n      if (!form.controls[ control ].dirty) {continue}\n      dataToUpdate[ control ] = form.controls[ control ].value\n    }\n    return dataToUpdate\n  }\n}\n\n\nexport interface AppOptions {\n  loading: boolean\n  loadingMode: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SimpleDataSource.html":{"url":"classes/SimpleDataSource.html","title":"class - SimpleDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SimpleDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/data-table/data-util.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DataSource\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                disconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rows$: Observable)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/data-table/data-util.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rows$\n                                                  \n                                                        \n                                                                    Observable\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect(collectionViewer: CollectionViewer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/data-table/data-util.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionViewer\n                                    \n                                            CollectionViewer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disconnect\n                        \n                        \n                    \n                \n            \n            \n                \ndisconnect(collectionViewer: CollectionViewer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/data-table/data-util.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionViewer\n                                    \n                                            CollectionViewer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CollectionViewer, DataSource } from '@angular/cdk/collections'\nimport { combineLatest, concat, defer, Observable, of } from 'rxjs'\nimport { MatPaginator, MatSort, PageEvent, Sort } from '@angular/material'\nimport { distinctUntilChanged, map, startWith, switchMap, tap } from 'rxjs/operators'\n\nexport class SimpleDataSource extends DataSource {\n  constructor(private rows$: Observable) {super() }\n\n  connect(collectionViewer: CollectionViewer): Observable { return this.rows$ }\n\n  disconnect(collectionViewer: CollectionViewer): void {}\n}\n\nfunction defaultSort(a: any, b: any): number {\n  // treat null === undefined for sorting\n  a = a === undefined ? null : a\n  b = b === undefined ? null : b\n\n  if (a === b) { return 0 }\n  if (a === null) { return -1 }\n  if (b === null) { return 1 }\n\n  //from this point on a & b can not be null or undefined.\n\n  if (a > b) {\n    return 1\n  } else if (a  = (a: U, b: U) => number;\n\ninterface PropertySortFns {\n  [ prop: string ]: SortFn;\n}\n\n/** RxJS operator to map a material Sort object to a sort function */\nfunction toSortFn(sortFns: PropertySortFns = {}, useDefault = true): (sort$: Observable) => Observable> {\n  return (sort$) => sort$.pipe(\n    map(sort => {\n      if (!sort.active || sort.direction === '') { return undefined }\n\n      let sortFn = sortFns[ sort.active ]\n      if (!sortFn) {\n        if (!useDefault) {\n          throw new Error(`Unknown sort property [${ sort.active }]`)\n        }\n\n        //By default assume sort.active is a property name, and sort using the default sort\n        //  uses .\n        sortFn = (a: U, b: U) => defaultSort((a)[ sort.active ], (b)[ sort.active ])\n      }\n\n      return sort.direction === 'asc' ? sortFn : (a: U, b: U) => sortFn(b, a)\n    })\n  )\n}\n\n/** Creates an Observable stream of Sort objects from a MatSort component */\nexport function fromMatSort(sort: MatSort): Observable {\n  console.log(sort)\n  return concat(\n    defer(() => of({\n      active: sort.active,\n      direction: sort.direction\n    })),\n    sort.sortChange.asObservable()\n  )\n}\n\n/** RxJs operator to sort an array based on an Observable of material Sort events **/\nexport function sortRows(\n  sort$: Observable,\n  sortFns: PropertySortFns = {},\n  useDefault = true\n): (obs$: Observable) => Observable {\n  return (rows$: Observable) => combineLatest(\n    rows$,\n    sort$.pipe(toSortFn(sortFns, useDefault)),\n    (rows, sortFn) => {\n      if (!sortFn) { return rows }\n\n      const copy = rows.slice()\n      return copy.sort(sortFn)\n    }\n  )\n}\n\n/* TODO: handle ngIf'd MatPager controls.\n\nfunction isEqualPageEvents(a: PageEvent, b: PageEvent) {\n  return a.length === b.length\n    && a.pageSize === b.pageSize\n    && a.pageIndex === b.pageIndex;\n\n}\n\n\nexport function fromMatPaginators(pagers: QueryList): Observable {\n  return pagers.changes.pipe(\n    startWith(pagers),\n    switchMap(_ =>\n      merge(...pagers.map(p => fromMatPaginator(p))).pipe(\n        distinctUntilChanged(isEqualPageEvents),\n        tap(page => pagers.forEach(pager => {\n          if (pager.pageIndex !== page.pageIndex) {\n            pager.pageIndex = page.pageIndex;\n          }\n          if (pager.pageSize !== page.pageSize) {\n            pager.pageSize = page.pageSize;\n          }\n          if (pager.length !== page.length) {\n            pager.length = page.length;\n          }\n        }))\n      )\n    ),\n    distinctUntilChanged(isEqualPageEvents),\n  );\n}\n */\n\n/** Creates an Observable stream of PageEvent objects from a MatPaginator component */\nexport function fromMatPaginator(pager: MatPaginator): Observable {\n  return concat(\n    defer(() => of({\n      pageIndex: pager.pageIndex,\n      pageSize: pager.pageSize,\n      length: pager.length,\n    })),\n    pager.page.asObservable()\n  )\n}\n\n/** RxJs operator to paginate an array based on an Observable of PageEvent objects **/\nexport function paginateRows(page$: Observable): (obs$: Observable) => Observable {\n  return (rows$: Observable) => combineLatest(\n    rows$,\n    page$,\n    (rows, page) => {\n      const startIndex = page.pageIndex * page.pageSize\n      const copy = rows.slice()\n      return copy.splice(startIndex, page.pageSize)\n    }\n  )\n}\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SnifferClass.html":{"url":"classes/SnifferClass.html","title":"class - SnifferClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SnifferClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sniffer-class.ts\n        \n\n\n            \n                Extends\n            \n            \n                        GenericClass\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                className\n                            \n                            \n                                    Static\n                                    Readonly\n                                CONFIG\n                            \n                            \n                                    Static\n                                    Readonly\n                                IP\n                            \n                            \n                                    Static\n                                    Readonly\n                                NAME\n                            \n                            \n                                    Static\n                                    Readonly\n                                ACL\n                            \n                            \n                                    Static\n                                    Readonly\n                                CREATED_AT\n                            \n                            \n                                    Static\n                                    Readonly\n                                OBJECT_ID\n                            \n                            \n                                    Static\n                                    Readonly\n                                UPDATED_AT\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            className\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Sniffer'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/sniffer-class.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'config'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/sniffer-class.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            IP\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ip'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/sniffer-class.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'name'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/sniffer-class.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            ACL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ACL'\n                        \n                    \n                            \n                                \n                                    Inherited from         GenericClass\n\n                                \n                            \n                        \n                            \n                                    Defined in         GenericClass:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            CREATED_AT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'createdAt'\n                        \n                    \n                            \n                                \n                                    Inherited from         GenericClass\n\n                                \n                            \n                        \n                            \n                                    Defined in         GenericClass:3\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            OBJECT_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'objectId'\n                        \n                    \n                            \n                                \n                                    Inherited from         GenericClass\n\n                                \n                            \n                        \n                            \n                                    Defined in         GenericClass:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            UPDATED_AT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'updatedAt'\n                        \n                    \n                            \n                                \n                                    Inherited from         GenericClass\n\n                                \n                            \n                        \n                            \n                                    Defined in         GenericClass:4\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GenericClass } from './generic-class'\nimport { TableField } from './decorators.util'\n\nexport class SnifferClass extends GenericClass {\n\n\n\n  public static readonly IP = 'ip'\n\n  public static readonly NAME = 'name'\n\n  public static readonly CONFIG = 'config'\n\n  public static readonly className = 'Sniffer'\n\n  // @TableField\n  // testField\n}\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnifferDataDetailComponent.html":{"url":"components/SnifferDataDetailComponent.html","title":"component - SnifferDataDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SnifferDataDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/sniffer-data/sniffer-data-detail/sniffer-data-detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sniffer-data-detail\n            \n\n            \n                styleUrls\n                ./sniffer-data-detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sniffer-data-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/views/sniffer-data/sniffer-data-detail/sniffer-data-detail.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/sniffer-data/sniffer-data-detail/sniffer-data-detail.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sniffer-data-detail',\n  templateUrl: './sniffer-data-detail.component.html',\n  styleUrls: ['./sniffer-data-detail.component.scss']\n})\nexport class SnifferDataDetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        sniffer-data-detail works!\n\n    \n\n    \n                \n                    ./sniffer-data-detail.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'sniffer-data-detail works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'DataTableComponent', 'selector': 'app-data-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FabButtonComponent', 'selector': 'app-fab-button'},{'name': 'FilterByColumComponent', 'selector': 'app-filter-by-colum'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotifierComponent', 'selector': 'app-notifier'},{'name': 'SnifferDataDetailComponent', 'selector': 'app-sniffer-data-detail'},{'name': 'SnifferDataListComponent', 'selector': 'app-sniffer-data-list'},{'name': 'SnifferFormComponent', 'selector': 'app-sniffer-form'},{'name': 'SniffersListComponent', 'selector': 'app-sniffers-list'},{'name': 'SnifferTokenFormComponent', 'selector': 'app-sniffer-token-form'},{'name': 'SnifferTokenListComponent', 'selector': 'app-sniffer-token-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SnifferDataDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnifferDataListComponent.html":{"url":"components/SnifferDataListComponent.html","title":"component - SnifferDataListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SnifferDataListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/sniffer-data/sniffer-data-list/sniffer-data-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sniffer-data-list\n            \n\n            \n                styleUrls\n                ./sniffer-data-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sniffer-data-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                query\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/sniffer-data/sniffer-data-list/sniffer-data-list.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/sniffer-data/sniffer-data-list/sniffer-data-list.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Parse.Query\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/sniffer-data/sniffer-data-list/sniffer-data-list.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router'\n\n@Component({\n  selector: 'app-sniffer-data-list',\n  templateUrl: './sniffer-data-list.component.html',\n  styleUrls: ['./sniffer-data-list.component.scss']\n})\nexport class SnifferDataListComponent implements OnInit {\n\n  query: Parse.Query\n\n  constructor(private route: ActivatedRoute,) { }\n\n  ngOnInit() {\n    this.query = this.route.snapshot.data.data\n  }\n\n}\n\n    \n\n    \n        \nsniffer-data-list works!\n\n\n-->\n\n    \n\n    \n                \n                    ./sniffer-data-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'sniffer-data-list works!-->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'DataTableComponent', 'selector': 'app-data-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FabButtonComponent', 'selector': 'app-fab-button'},{'name': 'FilterByColumComponent', 'selector': 'app-filter-by-colum'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotifierComponent', 'selector': 'app-notifier'},{'name': 'SnifferDataDetailComponent', 'selector': 'app-sniffer-data-detail'},{'name': 'SnifferDataListComponent', 'selector': 'app-sniffer-data-list'},{'name': 'SnifferFormComponent', 'selector': 'app-sniffer-form'},{'name': 'SniffersListComponent', 'selector': 'app-sniffers-list'},{'name': 'SnifferTokenFormComponent', 'selector': 'app-sniffer-token-form'},{'name': 'SnifferTokenListComponent', 'selector': 'app-sniffer-token-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SnifferDataListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/SnifferDataResolverService.html":{"url":"guards/SnifferDataResolverService.html","title":"guard - SnifferDataResolverService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    SnifferDataResolverService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/sniffer-data-resolver.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                query\n                            \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(parse: ParseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/sniffer-data-resolver.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parse\n                                                  \n                                                        \n                                                                        ParseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            query\n                        \n                        \n                    \n                \n            \n            \n                \nquery()\n                \n            \n\n\n            \n                \n                    Defined in src/app/resolvers/sniffer-data-resolver.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resolvers/sniffer-data-resolver.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core'\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router'\nimport { Observable, of } from 'rxjs'\nimport { DataClass } from '../models/data-class'\nimport { ParseService } from '../services/parse.service'\nimport * as Parse from 'parse'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnifferDataResolverService implements Resolve {\n\n  constructor(private parse: ParseService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    console.log(route.data)\n    // return this.findData()\n    return this.query()\n  }\n\n\n  query(): Observable {\n    return of(new Parse.Query(DataClass.className))\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnifferFormComponent.html":{"url":"components/SnifferFormComponent.html","title":"component - SnifferFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SnifferFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/sniffers/sniffer-form/sniffer-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sniffer-form\n            \n\n            \n                styleUrls\n                ./sniffer-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sniffer-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                form\n                            \n                            \n                                formField\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                buildForm\n                            \n                            \n                                cancel\n                            \n                            \n                                create\n                            \n                            \n                                fechData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                patchValue\n                            \n                            \n                                prepareData\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bottomSheetRef: MatBottomSheetRef, data: DialogDataInterface, fb: FormBuilder, parse: ParseService, sharedService: SharedService)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/sniffers/sniffer-form/sniffer-form.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bottomSheetRef\n                                                  \n                                                        \n                                                                        MatBottomSheetRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogDataInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parse\n                                                  \n                                                        \n                                                                        ParseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sharedService\n                                                  \n                                                        \n                                                                        SharedService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            action\n                        \n                        \n                    \n                \n            \n            \n                \naction()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/sniffers/sniffer-form/sniffer-form.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildForm\n                        \n                        \n                    \n                \n            \n            \n                \nbuildForm(fb: FormBuilder)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/sniffers/sniffer-form/sniffer-form.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fb\n                                    \n                                                FormBuilder\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/sniffers/sniffer-form/sniffer-form.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/sniffers/sniffer-form/sniffer-form.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fechData\n                        \n                        \n                    \n                \n            \n            \n                \nfechData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/sniffers/sniffer-form/sniffer-form.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/sniffers/sniffer-form/sniffer-form.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            patchValue\n                        \n                        \n                    \n                \n            \n            \n                \npatchValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/sniffers/sniffer-form/sniffer-form.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            prepareData\n                        \n                        \n                    \n                \n            \n            \n                \nprepareData(object: Parse.Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/sniffers/sniffer-form/sniffer-form.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            Parse.Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/sniffers/sniffer-form/sniffer-form.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DialogDataInterface\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_BOTTOM_SHEET_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/sniffers/sniffer-form/sniffer-form.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/sniffers/sniffer-form/sniffer-form.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formField\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SnifferClass\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/sniffers/sniffer-form/sniffer-form.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, NgZone, OnInit } from '@angular/core'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\nimport { MAT_BOTTOM_SHEET_DATA, MatBottomSheetRef } from '@angular/material/bottom-sheet'\nimport { DialogDataInterface } from '../../../models/dialog-data.interface'\nimport { SnifferClass } from '../../../models/sniffer-class'\nimport { ParseService } from '../../../services/parse.service'\nimport { Consts } from '../../../utli'\nimport { JSONValidator } from '../../../utli/JSON-validator'\nimport { SharedService } from '../../../services/shared.service'\n\n@Component({\n  selector: 'app-sniffer-form',\n  templateUrl: './sniffer-form.component.html',\n  styleUrls: [ './sniffer-form.component.scss' ]\n})\nexport class SnifferFormComponent implements OnInit {\n\n  form: FormGroup\n  formField = SnifferClass\n\n  constructor(private bottomSheetRef: MatBottomSheetRef,\n              @Inject(MAT_BOTTOM_SHEET_DATA) public data: DialogDataInterface,\n              private fb: FormBuilder,\n              private parse: ParseService,\n              private sharedService: SharedService) {\n\n    if (this.data.object) {\n      this.prepareData(this.data.object)\n    }\n\n  }\n\n  ngOnInit() {\n    this.form = this.buildForm(this.fb)\n  }\n\n  cancel() {\n    this.bottomSheetRef.dismiss(null)\n  }\n\n  action() {\n    if (this.form.valid) {\n      if (this.data.object) {\n        this.update()\n      } else {\n        this.create()\n      }\n\n    }\n  }\n\n  create() {\n    const data = { ...this.form.value }\n    data[ SnifferClass.CONFIG ] = JSON.parse(data[ SnifferClass.CONFIG ])\n    this.parse.createObject(data, Consts.PUBLIC_ACL, SnifferClass.className).subscribe(res => {\n      console.log(res)\n      this.bottomSheetRef.dismiss(res)\n      // todo mostrar mensaje\n    }, err => {\n      // todo mostrar mensaje\n      console.log(err)\n    })\n  }\n\n  update() {\n\n    const data = this.sharedService.prepareObjectToUpdate(this.form)\n  }\n\n\n  buildForm(fb: FormBuilder) {\n    return fb.group({\n      [ SnifferClass.IP ]: [ null, [ Validators.required, Validators.pattern(Consts.PATTERNS.ip) ] ],\n      [ SnifferClass.NAME ]: [ null, [ Validators.required ] ],\n      [ SnifferClass.CONFIG ]: [ null, [ Validators.required, JSONValidator ] ],\n    })\n  }\n\n\n  prepareData(object: Parse.Object) {\n    console.log(object)\n\n  }\n\n  patchValue() {\n\n  }\n\n  fechData() {\n\n  }\n}\n\n    \n\n    \n        \n\n  \n    Nombre\n    \n    \n      El nombre es requerido\n    \n  \n\n\n  \n    IP\n    \n    \n      La IP es requerida\n    \n    \n      La IP no es valida\n    \n  \n\n  \n    Configuración\n    \n    \n      La configuración es requerida\n    \n\n    \n      JSON invalido\n    \n  \n\n\n  \n    Guardar\n    \n    Cancelar\n  \n\n\n\n\n\n    \n\n    \n                \n                    ./sniffer-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Nombre              El nombre es requerido            IP              La IP es requerida              La IP no es valida            Configuración              La configuración es requerida              JSON invalido            Guardar        Cancelar  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'DataTableComponent', 'selector': 'app-data-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FabButtonComponent', 'selector': 'app-fab-button'},{'name': 'FilterByColumComponent', 'selector': 'app-filter-by-colum'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotifierComponent', 'selector': 'app-notifier'},{'name': 'SnifferDataDetailComponent', 'selector': 'app-sniffer-data-detail'},{'name': 'SnifferDataListComponent', 'selector': 'app-sniffer-data-list'},{'name': 'SnifferFormComponent', 'selector': 'app-sniffer-form'},{'name': 'SniffersListComponent', 'selector': 'app-sniffers-list'},{'name': 'SnifferTokenFormComponent', 'selector': 'app-sniffer-token-form'},{'name': 'SnifferTokenListComponent', 'selector': 'app-sniffer-token-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SnifferFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SnifferService.html":{"url":"injectables/SnifferService.html","title":"injectable - SnifferService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SnifferService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/sniffer.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/sniffer.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnifferService {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnifferTokenFormComponent.html":{"url":"components/SnifferTokenFormComponent.html","title":"component - SnifferTokenFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SnifferTokenFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/sniffer-token/sniffer-token-form/sniffer-token-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                SnifferTokenService\n                \n            \n\n\n            \n                selector\n                app-sniffer-token-form\n            \n\n            \n                styleUrls\n                ./sniffer-token-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sniffer-token-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredLeList\n                            \n                            \n                                form\n                            \n                            \n                                formField\n                            \n                            \n                                isLoadingAutocomplete\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                cancel\n                            \n                            \n                                displayAutocomplete\n                            \n                            \n                                filterApplicationList\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: SnifferTokenService, bottomSheetRef: MatBottomSheetRef, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/sniffer-token/sniffer-token-form/sniffer-token-form.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SnifferTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bottomSheetRef\n                                                  \n                                                        \n                                                                        MatBottomSheetRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            action\n                        \n                        \n                    \n                \n            \n            \n                \naction()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/sniffer-token/sniffer-token-form/sniffer-token-form.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/sniffer-token/sniffer-token-form/sniffer-token-form.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayAutocomplete\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayAutocomplete(element: SelectValueModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/sniffer-token/sniffer-token-form/sniffer-token-form.component.ts:63\n                \n            \n\n\n            \n                \n                    -------------- Autocomplete methods --------------\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                                SelectValueModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterApplicationList\n                        \n                        \n                    \n                \n            \n            \n                \nfilterApplicationList(control: FormControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/sniffer-token/sniffer-token-form/sniffer-token-form.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/sniffer-token/sniffer-token-form/sniffer-token-form.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredLeList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/sniffer-token/sniffer-token-form/sniffer-token-form.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/sniffer-token/sniffer-token-form/sniffer-token-form.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formField\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TokenClass\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/sniffer-token/sniffer-token-form/sniffer-token-form.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoadingAutocomplete\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/sniffer-token/sniffer-token-form/sniffer-token-form.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet'\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms'\nimport { SelectValueModel } from '../../../models/select-value-model'\nimport { Observable, of } from 'rxjs'\nimport { TokenClass } from '../../../models/token-class'\nimport { debounceTime, map, mergeMap, startWith, tap } from 'rxjs/operators'\nimport { SnifferTokenService } from '../../../services/sniffer-token.service'\n\n@Component({\n  selector: 'app-sniffer-token-form',\n  templateUrl: './sniffer-token-form.component.html',\n  styleUrls: [ './sniffer-token-form.component.scss' ],\n  providers: [\n    SnifferTokenService\n  ]\n})\nexport class SnifferTokenFormComponent implements OnInit {\n\n\n  formField = TokenClass\n  form: FormGroup\n\n  filteredLeList: Observable\n\n  isLoadingAutocomplete = false\n\n\n  constructor(private service: SnifferTokenService,\n              private bottomSheetRef: MatBottomSheetRef,\n              private fb: FormBuilder) {\n\n  }\n\n  ngOnInit() {\n    this.form = this.service.buildSnifferTokenForm()\n    this.filteredLeList = this.filterApplicationList(this.form.controls[ TokenClass.SNIFFER ] as FormControl)\n  }\n\n\n  cancel() {\n    this.bottomSheetRef.dismiss(null)\n  }\n\n  action() {\n\n    if (!this.form.valid) {return}\n\n    console.log(this.form.value)\n  }\n\n\n  /**\n   * -------------- Autocomplete methods --------------\n   *\n   */\n\n\n  /**\n   *\n   *\n   */\n  displayAutocomplete(element: SelectValueModel): string {\n    return element ? element.label : null\n  }\n\n\n  /**\n   *\n   *\n   */\n  filterApplicationList(control: FormControl): Observable {\n    console.log(control)\n    return control.valueChanges.pipe(\n      map(x => typeof x === 'string' ? x : null),\n      tap(x => this.isLoadingAutocomplete = !(!x || x === '')),\n      debounceTime(400),\n      // startWith(''), // importante para desplegar las opciones al dar click en el input\n      mergeMap(x => this.service.filterApplicationListCallback(x)),\n      tap(x => this.isLoadingAutocomplete = false)\n    )\n  }\n\n}\n\n    \n\n    \n        sniffer-token-form works!\n\n\n\n\n  \n    Sniffer\n    \n\n    \n\n    \n      \n        {{option.label}}\n      \n    \n\n    \n      El sniffer es requerido\n    \n  \n\n\n\n\n\nGuardar\nCancelar\n\n    \n\n    \n                \n                    ./sniffer-token-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'sniffer-token-form works!      Sniffer                          {{option.label}}                    El sniffer es requerido      GuardarCancelar'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'DataTableComponent', 'selector': 'app-data-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FabButtonComponent', 'selector': 'app-fab-button'},{'name': 'FilterByColumComponent', 'selector': 'app-filter-by-colum'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotifierComponent', 'selector': 'app-notifier'},{'name': 'SnifferDataDetailComponent', 'selector': 'app-sniffer-data-detail'},{'name': 'SnifferDataListComponent', 'selector': 'app-sniffer-data-list'},{'name': 'SnifferFormComponent', 'selector': 'app-sniffer-form'},{'name': 'SniffersListComponent', 'selector': 'app-sniffers-list'},{'name': 'SnifferTokenFormComponent', 'selector': 'app-sniffer-token-form'},{'name': 'SnifferTokenListComponent', 'selector': 'app-sniffer-token-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SnifferTokenFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnifferTokenListComponent.html":{"url":"components/SnifferTokenListComponent.html","title":"component - SnifferTokenListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SnifferTokenListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/sniffer-token/sniffer-token-list/sniffer-token-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sniffer-token-list\n            \n\n            \n                styleUrls\n                ./sniffer-token-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sniffer-token-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openAddDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, bottonSheet: MatBottomSheet)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/sniffer-token/sniffer-token-list/sniffer-token-list.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bottonSheet\n                                                  \n                                                        \n                                                                    MatBottomSheet\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/sniffer-token/sniffer-token-list/sniffer-token-list.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openAddDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenAddDialog(type?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/sniffer-token/sniffer-token-list/sniffer-token-list.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/views/sniffer-token/sniffer-token-list/sniffer-token-list.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'\nimport { ActivatedRoute } from '@angular/router'\nimport { MatBottomSheet } from '@angular/material/bottom-sheet'\nimport { SnifferTokenFormComponent } from '../sniffer-token-form/sniffer-token-form.component'\n\n@Component({\n  selector: 'app-sniffer-token-list',\n  templateUrl: './sniffer-token-list.component.html',\n  styleUrls: [ './sniffer-token-list.component.scss' ]\n})\nexport class SnifferTokenListComponent implements OnInit {\n\n  data\n\n  constructor(private route: ActivatedRoute,\n              private bottonSheet: MatBottomSheet) {\n\n  }\n\n  ngOnInit() {\n\n    this.data = this.route.snapshot.data.data\n    console.log(this.data)\n  }\n\n\n  openAddDialog(type?: string) {\n\n    this.bottonSheet.open(SnifferTokenFormComponent, {\n      disableClose: true\n    }).afterDismissed().subscribe(res => {\n      console.log('sheet dismiss')\n    })\n\n  }\n\n}\n\n    \n\n    \n        \nsniffer-token-list works!\n\n\n\n\n    \n\n    \n                \n                    ./sniffer-token-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'sniffer-token-list works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'DataTableComponent', 'selector': 'app-data-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FabButtonComponent', 'selector': 'app-fab-button'},{'name': 'FilterByColumComponent', 'selector': 'app-filter-by-colum'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotifierComponent', 'selector': 'app-notifier'},{'name': 'SnifferDataDetailComponent', 'selector': 'app-sniffer-data-detail'},{'name': 'SnifferDataListComponent', 'selector': 'app-sniffer-data-list'},{'name': 'SnifferFormComponent', 'selector': 'app-sniffer-form'},{'name': 'SniffersListComponent', 'selector': 'app-sniffers-list'},{'name': 'SnifferTokenFormComponent', 'selector': 'app-sniffer-token-form'},{'name': 'SnifferTokenListComponent', 'selector': 'app-sniffer-token-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SnifferTokenListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SnifferTokenService.html":{"url":"injectables/SnifferTokenService.html","title":"injectable - SnifferTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SnifferTokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/sniffer-token.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildSnifferTokenForm\n                            \n                            \n                                filterApplicationListCallback\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parse: ParseService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/sniffer-token.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parse\n                                                  \n                                                        \n                                                                        ParseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildSnifferTokenForm\n                        \n                        \n                    \n                \n            \n            \n                \nbuildSnifferTokenForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/sniffer-token.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterApplicationListCallback\n                        \n                        \n                    \n                \n            \n            \n                \nfilterApplicationListCallback(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/sniffer-token.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\nimport { Observable, of } from 'rxjs'\nimport { SelectValueModel } from '../models/select-value-model'\nimport { SnifferClass } from '../models/sniffer-class'\nimport { debounceTime, map, mergeMap, tap } from 'rxjs/operators'\nimport { ParseService } from './parse.service'\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms'\nimport { TokenClass } from '../models/token-class'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnifferTokenService {\n\n  constructor(private parse: ParseService,\n              private fb: FormBuilder) { }\n\n\n  /**\n   *\n   *\n   */\n  filterApplicationListCallback(value: string): Observable {\n\n    if (!value || value === '') {\n      return of(null)\n    }\n    value = value.trim()\n    const query = this.parse.query(SnifferClass.className)\n    query.select(SnifferClass.NAME)\n    query.matches(SnifferClass.NAME, new RegExp(value), null)\n\n    return this.parse.findByQuery(query).pipe(\n      map(res => {\n        console.log(res)\n        return res.map(x => {\n          return {\n            label: x.get(SnifferClass.NAME),\n            value: x.get(SnifferClass.OBJECT_ID)\n          }\n        })\n      })\n    )\n  }\n\n  /**\n   *\n   */\n  buildSnifferTokenForm(): FormGroup {\n    return this.fb.group({\n      [ TokenClass.SNIFFER ]: [ null, [ Validators.required ] ],\n      [ TokenClass.EXPIRY ]: [ null, [] ],\n    })\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SniffersListComponent.html":{"url":"components/SniffersListComponent.html","title":"component - SniffersListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SniffersListComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/views/sniffers/sniffers-list/sniffers-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sniffers-list\n            \n\n            \n                styleUrls\n                ./sniffers-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sniffers-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                query\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openAddDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, bottonSheet: MatBottomSheet)\n                    \n                \n                        \n                            \n                                Defined in src/app/views/sniffers/sniffers-list/sniffers-list.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bottonSheet\n                                                  \n                                                        \n                                                                    MatBottomSheet\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/sniffers/sniffers-list/sniffers-list.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openAddDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenAddDialog(object?: Parse.Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/views/sniffers/sniffers-list/sniffers-list.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            Parse.Object\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/sniffers/sniffers-list/sniffers-list.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Parse.Query\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/views/sniffers/sniffers-list/sniffers-list.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Lista de Sniffer\nEn esta vista se pueden encontrar una tabla con la lista de\n Sniffer activos disponibles, adicional mente\n\n    \n\n    \n        import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core'\nimport { ActivatedRoute } from '@angular/router'\nimport { MatBottomSheet } from '@angular/material/bottom-sheet'\nimport { SnifferFormComponent } from '../sniffer-form/sniffer-form.component'\n\n@Component({\n  selector: 'app-sniffers-list',\n  templateUrl: './sniffers-list.component.html',\n  styleUrls: [ './sniffers-list.component.scss' ]\n})\nexport class SniffersListComponent implements OnInit {\n\n  query: Parse.Query\n\n  columns: string[]\n\n  constructor(private route: ActivatedRoute,\n              private bottonSheet: MatBottomSheet) {\n\n  }\n\n  ngOnInit() {\n    // console.log(this.data)\n    this.query = this.route.snapshot.data.data\n    this.columns = [ 'ip', 'name', 'active' ]\n  }\n\n\n  openAddDialog(object?: Parse.Object) {\n\n    this.bottonSheet.open(SnifferFormComponent, {\n      data: { object }\n    }).afterDismissed().subscribe(res => {\n      console.log('sheet dismiss')\n    })\n\n  }\n\n\n}\n\n    \n\n    \n        \n  sniffers-list works!\n\n\n  \n\n  \n\n\n    \n\n    \n                \n                    ./sniffers-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  sniffers-list works!    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AppToolbarComponent', 'selector': 'app-toolbar'},{'name': 'DataTableComponent', 'selector': 'app-data-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FabButtonComponent', 'selector': 'app-fab-button'},{'name': 'FilterByColumComponent', 'selector': 'app-filter-by-colum'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotifierComponent', 'selector': 'app-notifier'},{'name': 'SnifferDataDetailComponent', 'selector': 'app-sniffer-data-detail'},{'name': 'SnifferDataListComponent', 'selector': 'app-sniffer-data-list'},{'name': 'SnifferFormComponent', 'selector': 'app-sniffer-form'},{'name': 'SniffersListComponent', 'selector': 'app-sniffers-list'},{'name': 'SnifferTokenFormComponent', 'selector': 'app-sniffer-token-form'},{'name': 'SnifferTokenListComponent', 'selector': 'app-sniffer-token-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SniffersListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/SniffersResolverService.html":{"url":"guards/SniffersResolverService.html","title":"guard - SniffersResolverService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    SniffersResolverService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/sniffers-resolver.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findData\n                            \n                            \n                                query\n                            \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(parse: ParseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/sniffers-resolver.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parse\n                                                  \n                                                        \n                                                                        ParseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findData\n                        \n                        \n                    \n                \n            \n            \n                \nfindData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/resolvers/sniffers-resolver.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            query\n                        \n                        \n                    \n                \n            \n            \n                \nquery()\n                \n            \n\n\n            \n                \n                    Defined in src/app/resolvers/sniffers-resolver.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resolvers/sniffers-resolver.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core'\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router'\nimport { Observable, of } from 'rxjs'\nimport { SnifferClass } from '../models/sniffer-class'\nimport { ParseService } from '../services/parse.service'\nimport * as Parse from 'parse'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SniffersResolverService implements Resolve {\n\n  constructor(private parse: ParseService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    console.log(route.data)\n    // return this.findData()\n    return this.query()\n  }\n\n  findData(): Observable {\n    // todo hacer una funcion que busque paginado\n    const q = new Parse.Query(SnifferClass.className)\n    return this.parse.findByQuery(q)\n  }\n\n  query(): Observable {\n    return of(new Parse.Query(SnifferClass.className))\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Texts.html":{"url":"classes/Texts.html","title":"class - Texts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Texts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utli/texts.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                PAGINATOR\n                            \n                            \n                                    Static\n                                    Readonly\n                                SNIFFER\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PAGINATOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/utli/texts.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            SNIFFER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/utli/texts.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Texts {\n\n  public static readonly SNIFFER: {\n\n  }\n\n  PAGINATOR: {\n    firstPageLabel: 'Primera pagina'\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenClass.html":{"url":"classes/TokenClass.html","title":"class - TokenClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/token-class.ts\n        \n\n\n            \n                Extends\n            \n            \n                        GenericClass\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                className\n                            \n                            \n                                    Static\n                                    Readonly\n                                CREATED_BY\n                            \n                            \n                                    Static\n                                    Readonly\n                                EXPIRY\n                            \n                            \n                                    Static\n                                    Readonly\n                                HASH\n                            \n                            \n                                    Static\n                                    Readonly\n                                SNIFFER\n                            \n                            \n                                    Static\n                                    Readonly\n                                ACL\n                            \n                            \n                                    Static\n                                    Readonly\n                                CREATED_AT\n                            \n                            \n                                    Static\n                                    Readonly\n                                OBJECT_ID\n                            \n                            \n                                    Static\n                                    Readonly\n                                UPDATED_AT\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            className\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Token'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/token-class.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            CREATED_BY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'createBy'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/token-class.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            EXPIRY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'expiry'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/token-class.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            HASH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'hash'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/token-class.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            SNIFFER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sniffer'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/token-class.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            ACL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ACL'\n                        \n                    \n                            \n                                \n                                    Inherited from         GenericClass\n\n                                \n                            \n                        \n                            \n                                    Defined in         GenericClass:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            CREATED_AT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'createdAt'\n                        \n                    \n                            \n                                \n                                    Inherited from         GenericClass\n\n                                \n                            \n                        \n                            \n                                    Defined in         GenericClass:3\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            OBJECT_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'objectId'\n                        \n                    \n                            \n                                \n                                    Inherited from         GenericClass\n\n                                \n                            \n                        \n                            \n                                    Defined in         GenericClass:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            UPDATED_AT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'updatedAt'\n                        \n                    \n                            \n                                \n                                    Inherited from         GenericClass\n\n                                \n                            \n                        \n                            \n                                    Defined in         GenericClass:4\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GenericClass } from './generic-class'\n\nexport class TokenClass extends GenericClass {\n\n  public static readonly className = 'Token'\n\n  public static readonly SNIFFER = 'sniffer'\n  public static readonly EXPIRY = 'expiry'\n  public static readonly CREATED_BY = 'createBy'\n  public static readonly HASH = 'hash'\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TokensResolverService.html":{"url":"guards/TokensResolverService.html","title":"guard - TokensResolverService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TokensResolverService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/tokens-resolver.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/tokens-resolver.service.ts:9\n                            \n                        \n\n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resolvers/tokens-resolver.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core'\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router'\nimport { Observable, of } from 'rxjs'\nimport { delay } from 'rxjs/operators'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokensResolverService implements Resolve {\n\n  constructor() {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    console.log(route.data)\n    // return undefined\n  //   return of(route.data).pipe(delay(3000))\n    return of(route.data).pipe()\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserClass.html":{"url":"classes/UserClass.html","title":"class - UserClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user-class.ts\n        \n\n\n            \n                Extends\n            \n            \n                        GenericClass\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                EMAIL\n                            \n                            \n                                    Static\n                                    Readonly\n                                NAME\n                            \n                            \n                                    Static\n                                    Readonly\n                                PASSWORD\n                            \n                            \n                                    Static\n                                    Readonly\n                                USER_NAME\n                            \n                            \n                                    Static\n                                    Readonly\n                                ACL\n                            \n                            \n                                    Static\n                                    Readonly\n                                CREATED_AT\n                            \n                            \n                                    Static\n                                    Readonly\n                                OBJECT_ID\n                            \n                            \n                                    Static\n                                    Readonly\n                                UPDATED_AT\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            EMAIL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'email'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user-class.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'name'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user-class.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            PASSWORD\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'password'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user-class.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            USER_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'username'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user-class.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            ACL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ACL'\n                        \n                    \n                            \n                                \n                                    Inherited from         GenericClass\n\n                                \n                            \n                        \n                            \n                                    Defined in         GenericClass:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            CREATED_AT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'createdAt'\n                        \n                    \n                            \n                                \n                                    Inherited from         GenericClass\n\n                                \n                            \n                        \n                            \n                                    Defined in         GenericClass:3\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            OBJECT_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'objectId'\n                        \n                    \n                            \n                                \n                                    Inherited from         GenericClass\n\n                                \n                            \n                        \n                            \n                                    Defined in         GenericClass:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            UPDATED_AT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'updatedAt'\n                        \n                    \n                            \n                                \n                                    Inherited from         GenericClass\n\n                                \n                            \n                        \n                            \n                                    Defined in         GenericClass:4\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GenericClass } from './generic-class'\n\nexport class UserClass extends GenericClass {\n\n  public static readonly USER_NAME = 'username'\n  public static readonly PASSWORD = 'password'\n  public static readonly EMAIL = 'email'\n  public static readonly NAME = 'name'\n\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/fab-button/fab-button.component.ts\n            \n            component\n            FabButtonComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/toolbar/app-toolbar.component.ts\n            \n            component\n            AppToolbarComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/data-class.ts\n            \n            class\n            DataClass\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/decorators.util.ts\n            \n            function\n            TableField\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/dialog-data.interface.ts\n            \n            interface\n            DialogDataInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/models/generic-class.ts\n            \n            class\n            GenericClass\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/select-value-model.ts\n            \n            interface\n            SelectValueModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/sniffer-class.ts\n            \n            class\n            SnifferClass\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/models/token-class.ts\n            \n            class\n            TokenClass\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/models/user-class.ts\n            \n            class\n            UserClass\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/modules/data-table/data-table.module.ts\n            \n            variable\n            materialModules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/data-table/data-table.module.ts\n            \n            variable\n            MY_FORMATS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/data-table/data-table.module.ts\n            \n            variable\n            ngForms\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/data-table/data-table.service.ts\n            \n            injectable\n            DataTableService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/data-table/data-util.ts\n            \n            class\n            SimpleDataSource\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/data-table/data-util.ts\n            \n            interface\n            PropertySortFns\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/data-table/data-util.ts\n            \n            function\n            defaultSort\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/data-table/data-util.ts\n            \n            function\n            fromMatPaginator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/data-table/data-util.ts\n            \n            function\n            fromMatSort\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/data-table/data-util.ts\n            \n            function\n            paginateRows\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/data-table/data-util.ts\n            \n            function\n            sortRows\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/data-table/data-util.ts\n            \n            function\n            toSortFn\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/data-table/details/details.component.ts\n            \n            component\n            DetailsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/data-table/filter-by-colum/filter-by-colum.component.ts\n            \n            component\n            FilterByColumComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/modules/data-table/filter-by-colum/filterByColumnModels.ts\n            \n            interface\n            SelectValue\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/data-table/table/data-table.component.ts\n            \n            component\n            DataTableComponent\n            \n                4 %\n                (1/22)\n            \n        \n        \n            \n                \n                src/app/modules/notifier/notifier.component.ts\n            \n            component\n            NotifierComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/notifier/notifier.module.ts\n            \n            function\n            HttpLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/notifier/notifier.service.ts\n            \n            injectable\n            NotifierService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/modules/notifier/notifierConfig.model.ts\n            \n            class\n            NotifierConfigModel\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/shared.module.ts\n            \n            variable\n            declaration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared.module.ts\n            \n            variable\n            materialModules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared.module.ts\n            \n            variable\n            modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared.module.ts\n            \n            variable\n            ngForms\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared.module.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/resolvers/login-resolver.service.ts\n            \n            guard\n            LoginResolverService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/resolvers/sniffer-data-resolver.service.ts\n            \n            guard\n            SnifferDataResolverService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/resolvers/sniffers-resolver.service.ts\n            \n            guard\n            SniffersResolverService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/resolvers/tokens-resolver.service.ts\n            \n            guard\n            TokensResolverService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/parse.service.ts\n            \n            injectable\n            ParseService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/services/parse.service.ts\n            \n            interface\n            DataWithCount\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/parse.service.ts\n            \n            variable\n            parseRequire\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/shared.service.ts\n            \n            injectable\n            SharedService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/shared.service.ts\n            \n            interface\n            AppOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/sniffer-token.service.ts\n            \n            injectable\n            SnifferTokenService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/sniffer.service.ts\n            \n            injectable\n            SnifferService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/utli/JSON-validator.ts\n            \n            variable\n            JSONValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utli/index.ts\n            \n            class\n            Consts\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/utli/index.ts\n            \n            variable\n            serve\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utli/texts.ts\n            \n            class\n            Texts\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/views/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/views/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/views/sniffer-data/sniffer-data-detail/sniffer-data-detail.component.ts\n            \n            component\n            SnifferDataDetailComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/views/sniffer-data/sniffer-data-list/sniffer-data-list.component.ts\n            \n            component\n            SnifferDataListComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/views/sniffer-token/sniffer-token-form/sniffer-token-form.component.ts\n            \n            component\n            SnifferTokenFormComponent\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/views/sniffer-token/sniffer-token-list/sniffer-token-list.component.ts\n            \n            component\n            SnifferTokenListComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/views/sniffers/sniffer-form/sniffer-form.component.ts\n            \n            component\n            SnifferFormComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/views/sniffers/sniffers-list/sniffers-list.component.ts\n            \n            component\n            SniffersListComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~8.2.7\n        \n            @angular/cdk : ~8.2.1\n        \n            @angular/common : ~8.2.7\n        \n            @angular/compiler : ~8.2.7\n        \n            @angular/core : ~8.2.7\n        \n            @angular/flex-layout : ^8.0.0-beta.27\n        \n            @angular/forms : ~8.2.7\n        \n            @angular/material : ^8.2.1\n        \n            @angular/material-moment-adapter : ^8.2.3\n        \n            @angular/platform-browser : ~8.2.7\n        \n            @angular/platform-browser-dynamic : ~8.2.7\n        \n            @angular/router : ~8.2.7\n        \n            hammerjs : ^2.0.8\n        \n            material-icons : ^0.3.1\n        \n            moment : ^2.24.0\n        \n            parse : ^2.10.0\n        \n            roboto-fontface : ^0.10.0\n        \n            rxjs : ~6.4.0\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FilterColumnType   (src/.../filterByColumnModels.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/modules/data-table/filter-by-colum/filterByColumnModels.ts\n    \n        \n            \n                \n                    \n                        \n                        FilterColumnType\n                    \n                \n                        \n                            \n                                 DATE\n                            \n                        \n                        \n                            \n                                Value : Date\n                            \n                        \n                        \n                            \n                                 TEXT\n                            \n                        \n                        \n                            \n                                Value : String\n                            \n                        \n                        \n                            \n                                 OBJECT\n                            \n                        \n                        \n                            \n                                Value : Object\n                            \n                        \n                        \n                            \n                                 BOOLEAN\n                            \n                        \n                        \n                            \n                                Value : Boolean\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defaultSort   (src/.../data-util.ts)\n                        \n                        \n                            fromMatPaginator   (src/.../data-util.ts)\n                        \n                        \n                            fromMatSort   (src/.../data-util.ts)\n                        \n                        \n                            HttpLoaderFactory   (src/.../notifier.module.ts)\n                        \n                        \n                            paginateRows   (src/.../data-util.ts)\n                        \n                        \n                            sortRows   (src/.../data-util.ts)\n                        \n                        \n                            TableField   (src/.../decorators.util.ts)\n                        \n                        \n                            toSortFn   (src/.../data-util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/modules/data-table/data-util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            defaultSort\n                        \n                        \n                    \n                \n            \n            \n                \ndefaultSort(a: any, b: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fromMatPaginator\n                        \n                        \n                    \n                \n            \n            \n                \nfromMatPaginator(pager)\n                \n            \n\n\n\n\n            \n                \n                    Creates an Observable stream of PageEvent objects from a MatPaginator component \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pager\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fromMatSort\n                        \n                        \n                    \n                \n            \n            \n                \nfromMatSort(sort)\n                \n            \n\n\n\n\n            \n                \n                    Creates an Observable stream of Sort objects from a MatSort component \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sort\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            paginateRows\n                        \n                        \n                    \n                \n            \n            \n                \npaginateRows(page$)\n                \n            \n\n\n\n\n            \n                \n                    RxJs operator to paginate an array based on an Observable of PageEvent objects *\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page$\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortRows\n                        \n                        \n                    \n                \n            \n            \n                \nsortRows(sort$, sortFns, useDefault)\n                \n            \n\n\n\n\n            \n                \n                    RxJs operator to sort an array based on an Observable of material Sort events *\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sort$\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sortFns\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    useDefault\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toSortFn\n                        \n                        \n                    \n                \n            \n            \n                \ntoSortFn(sortFns, useDefault)\n                \n            \n\n\n\n\n            \n                \n                    RxJS operator to map a material Sort object to a sort function \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sortFns\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    useDefault\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/modules/notifier/notifier.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            HttpLoaderFactory\n                        \n                        \n                    \n                \n            \n            \n                \nHttpLoaderFactory(http)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    http\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/models/decorators.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            TableField\n                        \n                        \n                    \n                \n            \n            \n                \nTableField(target)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSniffer Frontend\nSPA de visualización de datos para proyecto de grado.\nEste proyecto fue generado con Angular CLI version 8.3.5.\nServidor de Desarrollo\nCorre el comando ng serve para arrancar un servidor de desarrollo . Navega a http://localhost:4200/. La aplicacion se recargara automaticamente se se realizan cambio en los archivos de codigo fuente.\nCompilación\nCorre el comando ng build para compilar el proyecto. Los artefactos de la conpilacion se almacenaran en el directorio dist/ . Utilize la bandera --prod para compilar para producción.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataTableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotifierModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_DataTableModule\n\n\n\ncluster_DataTableModule_declarations\n\n\n\ncluster_DataTableModule_exports\n\n\n\ncluster_DataTableModule_providers\n\n\n\ncluster_NotifierModule\n\n\n\ncluster_NotifierModule_declarations\n\n\n\ncluster_NotifierModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFabButtonComponent\n\nFabButtonComponent\n\nAppModule -->\n\nFabButtonComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nSnifferDataDetailComponent\n\nSnifferDataDetailComponent\n\nAppModule -->\n\nSnifferDataDetailComponent->AppModule\n\n\n\n\n\nSnifferDataListComponent\n\nSnifferDataListComponent\n\nAppModule -->\n\nSnifferDataListComponent->AppModule\n\n\n\n\n\nSnifferFormComponent\n\nSnifferFormComponent\n\nAppModule -->\n\nSnifferFormComponent->AppModule\n\n\n\n\n\nSnifferTokenFormComponent\n\nSnifferTokenFormComponent\n\nAppModule -->\n\nSnifferTokenFormComponent->AppModule\n\n\n\n\n\nSnifferTokenListComponent\n\nSnifferTokenListComponent\n\nAppModule -->\n\nSnifferTokenListComponent->AppModule\n\n\n\n\n\nSniffersListComponent\n\nSniffersListComponent\n\nAppModule -->\n\nSniffersListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAppToolbarComponent \n\nAppToolbarComponent \n\nAppToolbarComponent  -->\n\nSharedModule->AppToolbarComponent \n\n\n\n\n\nDataTableModule \n\nDataTableModule \n\nDataTableModule  -->\n\nSharedModule->DataTableModule \n\n\n\n\n\nNotifierModule \n\nNotifierModule \n\nNotifierModule  -->\n\nSharedModule->NotifierModule \n\n\n\n\n\nDataTableComponent\n\nDataTableComponent\n\n\n\nDataTableModule\n\nDataTableModule\n\nDataTableModule -->\n\nDataTableComponent->DataTableModule\n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nDataTableModule -->\n\nDetailsComponent->DataTableModule\n\n\n\n\n\nFilterByColumComponent\n\nFilterByColumComponent\n\nDataTableModule -->\n\nFilterByColumComponent->DataTableModule\n\n\n\nSharedModule -->\n\nDataTableModule->SharedModule\n\n\n\n\n\nDataTableComponent \n\nDataTableComponent \n\nDataTableComponent  -->\n\nDataTableModule->DataTableComponent \n\n\n\n\n\nDataTableService\n\nDataTableService\n\nDataTableModule -->\n\nDataTableService->DataTableModule\n\n\n\n\n\nNotifierComponent\n\nNotifierComponent\n\n\n\nNotifierModule\n\nNotifierModule\n\nNotifierModule -->\n\nNotifierComponent->NotifierModule\n\n\n\n\n\nNotifierService\n\nNotifierService\n\nNotifierModule -->\n\nNotifierService->NotifierModule\n\n\n\n\n\nAppToolbarComponent\n\nAppToolbarComponent\n\nSharedModule -->\n\nAppToolbarComponent->SharedModule\n\n\n\n\n\nParseService\n\nParseService\n\nSharedModule -->\n\nParseService->SharedModule\n\n\n\n\n\nSharedService\n\nSharedService\n\nSharedModule -->\n\nSharedService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            horizontal   (src/.../notifierConfig.model.ts)\n                        \n                        \n                            notificationType   (src/.../notifierConfig.model.ts)\n                        \n                        \n                            SortFn   (src/.../data-util.ts)\n                        \n                        \n                            vertical   (src/.../notifierConfig.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/modules/notifier/notifierConfig.model.ts\n    \n    \n        \n            \n                \n                    \n                    horizontal\n                \n            \n            \n                \n                        \"start\" | \"center\" | \"end\" | \"left\" | \"right\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    notificationType\n                \n            \n            \n                \n                        \"success\" | \"error\" | \"warn\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    vertical\n                \n            \n            \n                \n                        \"top\" | \"bottom\"\n\n                \n            \n        \n    \n    src/app/modules/data-table/data-util.ts\n    \n    \n        \n            \n                \n                    \n                    SortFn\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            declaration   (src/.../shared.module.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            JSONValidator   (src/.../JSON-validator.ts)\n                        \n                        \n                            materialModules   (src/.../shared.module.ts)\n                        \n                        \n                            materialModules   (src/.../data-table.module.ts)\n                        \n                        \n                            modules   (src/.../shared.module.ts)\n                        \n                        \n                            MY_FORMATS   (src/.../data-table.module.ts)\n                        \n                        \n                            ngForms   (src/.../shared.module.ts)\n                        \n                        \n                            ngForms   (src/.../data-table.module.ts)\n                        \n                        \n                            parseRequire   (src/.../parse.service.ts)\n                        \n                        \n                            providers   (src/.../shared.module.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            serve   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/shared.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            declaration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  AppToolbarComponent\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            materialModules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  MatFormFieldModule,\n  MatIconModule,\n  MatTooltipModule,\n  MatInputModule,\n  MatButtonModule,\n  MatSnackBarModule,\n  MatToolbarModule,\n\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatBottomSheetModule,\n\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  FlexLayoutModule,\n  RouterModule,\n  DataTableModule,\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngForms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ FormsModule, ReactiveFormsModule ]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  ParseService,\n  SharedService,\n]\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/utli/JSON-validator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            JSONValidator\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (AC: AbstractControl): { [ key: string ]: boolean } => {\n  try {\n    JSON.parse(AC.value)\n    return null\n  } catch (e) {\n    return { 'invalidJSON': true }\n  }\n\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/data-table/data-table.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            materialModules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  MatIconModule,\n  MatButtonModule,\n  MatTableModule,\n  MatBottomSheetModule,\n  MatPaginatorModule,\n  MatSortModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSelectModule,\n  MatNativeDateModule,\n  MatDatepickerModule,\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MY_FORMATS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  parse: {\n    dateInput: 'YYYY-MM-DD',\n  },\n  display: {\n    dateInput: 'YYYY-MM-DD',\n    monthYearLabel: 'YYYY-MM',\n    dateA11yLabel: 'YYYY-MM-DD',\n    monthYearA11yLabel: 'YYYY-MMMM',\n  },\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngForms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ FormsModule, ReactiveFormsModule ]\n                        \n                    \n\n\n            \n        \n\n    src/app/services/parse.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            parseRequire\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('parse')\n                        \n                    \n\n\n            \n        \n\n    src/app/utli/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            serve\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:5337'\n                        \n                    \n\n                \n                    \n                        public server\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
